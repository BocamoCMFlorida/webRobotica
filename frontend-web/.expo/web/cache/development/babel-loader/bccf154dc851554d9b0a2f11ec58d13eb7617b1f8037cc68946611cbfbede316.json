{"ast":null,"code":"var _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar API_BASE_URL = 'http://localhost:8000';\nvar currentUser = null;\nvar authToken = null;\nvar loginScreen = document.getElementById('loginScreen');\nvar registerScreen = document.getElementById('registerScreen');\nvar dashboardScreen = document.getElementById('dashboardScreen');\nvar studentView = document.getElementById('studentView');\nvar adminView = document.getElementById('adminView');\ndocument.addEventListener('DOMContentLoaded', function () {\n  checkAuthStatus();\n  setupEventListeners();\n});\nfunction checkAuthStatus() {\n  var token = localStorage.getItem('authToken');\n  var user = localStorage.getItem('currentUser');\n  if (token && user) {\n    authToken = token;\n    currentUser = JSON.parse(user);\n    showDashboard();\n  } else {\n    showLogin();\n  }\n}\nfunction setupEventListeners() {\n  document.getElementById('loginForm').addEventListener('submit', handleLogin);\n  document.getElementById('registerForm').addEventListener('submit', handleRegister);\n  document.getElementById('showRegister').addEventListener('click', showRegister);\n  document.getElementById('showLogin').addEventListener('click', showLogin);\n  document.getElementById('logoutBtn').addEventListener('click', handleLogout);\n  document.getElementById('tasksTab').addEventListener('click', function () {\n    return showStudentTasks();\n  });\n  document.getElementById('createTaskTab').addEventListener('click', function () {\n    return showCreateTask();\n  });\n  document.getElementById('statisticsTab').addEventListener('click', function () {\n    return showStatistics();\n  });\n  document.getElementById('createTaskForm').addEventListener('submit', handleCreateTask);\n  document.getElementById('selectImageBtn').addEventListener('click', function () {\n    document.getElementById('taskImage').click();\n  });\n  document.getElementById('taskImage').addEventListener('change', handleImagePreview);\n}\nfunction showLogin() {\n  hideAllScreens();\n  loginScreen.style.display = 'block';\n  document.getElementById('loginUsername').focus();\n}\nfunction showRegister() {\n  hideAllScreens();\n  registerScreen.style.display = 'block';\n  document.getElementById('registerEmail').focus();\n}\nfunction showDashboard() {\n  hideAllScreens();\n  dashboardScreen.style.display = 'block';\n  if (currentUser.is_admin) {\n    showAdminView();\n  } else {\n    showStudentView();\n  }\n  document.getElementById('userInfo').textContent = `${currentUser.username} (${currentUser.is_admin ? 'Administrador' : 'Estudiante'})`;\n}\nfunction hideAllScreens() {\n  loginScreen.style.display = 'none';\n  registerScreen.style.display = 'none';\n  dashboardScreen.style.display = 'none';\n}\nfunction showStudentView() {\n  adminView.style.display = 'none';\n  studentView.style.display = 'block';\n  document.getElementById('createTaskTab').style.display = 'none';\n  document.getElementById('statisticsTab').style.display = 'none';\n  document.getElementById('tasksTab').style.display = 'block';\n  showStudentTasks();\n}\nfunction showAdminView() {\n  studentView.style.display = 'none';\n  adminView.style.display = 'block';\n  document.getElementById('createTaskTab').style.display = 'block';\n  document.getElementById('statisticsTab').style.display = 'block';\n  document.getElementById('tasksTab').style.display = 'none';\n  showCreateTask();\n}\nfunction handleLogin(_x) {\n  return _handleLogin.apply(this, arguments);\n}\nfunction _handleLogin() {\n  _handleLogin = _asyncToGenerator(function* (e) {\n    e.preventDefault();\n    var username = document.getElementById('loginUsername').value;\n    var password = document.getElementById('loginPassword').value;\n    if (!username || !password) {\n      showAlert('Por favor completa todos los campos', 'error');\n      return;\n    }\n    showLoading('loginBtn', true);\n    try {\n      var formData = new FormData();\n      formData.append('username', username);\n      formData.append('password', password);\n      var response = yield fetch(`${API_BASE_URL}/login`, {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        var data = yield response.json();\n        authToken = data.access_token;\n        var userResponse = yield fetch(`${API_BASE_URL}/me`, {\n          headers: {\n            'Authorization': `Bearer ${authToken}`\n          }\n        });\n        if (userResponse.ok) {\n          currentUser = yield userResponse.json();\n          localStorage.setItem('authToken', authToken);\n          localStorage.setItem('currentUser', JSON.stringify(currentUser));\n          showAlert('Login exitoso', 'success');\n          showDashboard();\n        }\n      } else {\n        var errorData = yield response.json();\n        showAlert(errorData.detail || 'Error de login', 'error');\n      }\n    } catch (error) {\n      showAlert('Error de conexión', 'error');\n    } finally {\n      showLoading('loginBtn', false);\n    }\n  });\n  return _handleLogin.apply(this, arguments);\n}\nfunction handleRegister(_x2) {\n  return _handleRegister.apply(this, arguments);\n}\nfunction _handleRegister() {\n  _handleRegister = _asyncToGenerator(function* (e) {\n    e.preventDefault();\n    var email = document.getElementById('registerEmail').value;\n    var username = document.getElementById('registerUsername').value;\n    var password = document.getElementById('registerPassword').value;\n    var isAdmin = document.getElementById('registerIsAdmin').checked;\n    if (!email || !username || !password) {\n      showAlert('Por favor completa todos los campos', 'error');\n      return;\n    }\n    showLoading('registerBtn', true);\n    try {\n      var response = yield fetch(`${API_BASE_URL}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          username: username,\n          password: password,\n          is_admin: isAdmin\n        })\n      });\n      if (response.ok) {\n        showAlert('Usuario registrado correctamente', 'success');\n        document.getElementById('registerForm').reset();\n        showLogin();\n      } else {\n        var errorData = yield response.json();\n        showAlert(errorData.detail || 'Error de registro', 'error');\n      }\n    } catch (error) {\n      showAlert('Error de conexión', 'error');\n    } finally {\n      showLoading('registerBtn', false);\n    }\n  });\n  return _handleRegister.apply(this, arguments);\n}\nfunction handleLogout() {\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('currentUser');\n  authToken = null;\n  currentUser = null;\n  showLogin();\n  showAlert('Sesión cerrada', 'info');\n}\nfunction showStudentTasks() {\n  return _showStudentTasks.apply(this, arguments);\n}\nfunction _showStudentTasks() {\n  _showStudentTasks = _asyncToGenerator(function* () {\n    setActiveTab('tasksTab');\n    try {\n      var response = yield fetch(`${API_BASE_URL}/my-tasks`, {\n        headers: {\n          'Authorization': `Bearer ${authToken}`\n        }\n      });\n      if (response.ok) {\n        var tasks = yield response.json();\n        renderStudentTasks(tasks);\n      } else {\n        showAlert('Error al cargar las tareas', 'error');\n      }\n    } catch (error) {\n      showAlert('Error de conexión', 'error');\n    }\n  });\n  return _showStudentTasks.apply(this, arguments);\n}\nfunction renderStudentTasks(tasks) {\n  var container = document.getElementById('studentTasksList');\n  if (tasks.length === 0) {\n    container.innerHTML = '<p class=\"text-center text-muted\">No hay tareas asignadas</p>';\n    return;\n  }\n  container.innerHTML = tasks.map(function (item) {\n    return `\n        <div class=\"card mb-3\">\n            <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                    <h5 class=\"card-title\">${item.task.title}</h5>\n                    <button class=\"btn btn-sm ${item.completed ? 'btn-success' : 'btn-warning'}\" \n                            onclick=\"toggleTaskCompletion(${item.task.id}, ${item.completed})\">\n                        ${item.completed ? 'Completada' : 'Pendiente'}\n                    </button>\n                </div>\n                <p class=\"card-text\">${item.task.description}</p>\n                ${item.task.image_path ? `\n                    <img src=\"${API_BASE_URL}${item.task.image_path}\" \n                         class=\"img-fluid mb-2\" style=\"max-height: 200px;\">\n                ` : ''}\n                ${item.task.due_date ? `\n                    <p class=\"text-danger\"><small>Fecha límite: ${formatDate(item.task.due_date)}</small></p>\n                ` : ''}\n                ${item.completed_at ? `\n                    <p class=\"text-success\"><small>Completada: ${formatDate(item.completed_at)}</small></p>\n                ` : ''}\n            </div>\n        </div>\n    `;\n  }).join('');\n}\nfunction toggleTaskCompletion(_x3, _x4) {\n  return _toggleTaskCompletion.apply(this, arguments);\n}\nfunction _toggleTaskCompletion() {\n  _toggleTaskCompletion = _asyncToGenerator(function* (taskId, isCompleted) {\n    try {\n      var endpoint = isCompleted ? 'uncomplete' : 'complete';\n      var response = yield fetch(`${API_BASE_URL}/tasks/${taskId}/${endpoint}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${authToken}`\n        }\n      });\n      if (response.ok) {\n        showAlert(`Tarea ${isCompleted ? 'marcada como pendiente' : 'completada'}`, 'success');\n        showStudentTasks();\n      } else {\n        showAlert('Error al actualizar la tarea', 'error');\n      }\n    } catch (error) {\n      showAlert('Error de conexión', 'error');\n    }\n  });\n  return _toggleTaskCompletion.apply(this, arguments);\n}\nfunction showCreateTask() {\n  setActiveTab('createTaskTab');\n  document.getElementById('adminContent').innerHTML = `\n        <h3>Crear Nueva Tarea</h3>\n        <form id=\"createTaskForm\">\n            <div class=\"mb-3\">\n                <label for=\"taskTitle\" class=\"form-label\">Título</label>\n                <input type=\"text\" class=\"form-control\" id=\"taskTitle\" required>\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"taskDescription\" class=\"form-label\">Descripción</label>\n                <textarea class=\"form-control\" id=\"taskDescription\" rows=\"4\" required></textarea>\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"taskDueDate\" class=\"form-label\">Fecha límite (opcional)</label>\n                <input type=\"date\" class=\"form-control\" id=\"taskDueDate\">\n            </div>\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Imagen del robot</label>\n                <input type=\"file\" class=\"form-control\" id=\"taskImage\" accept=\"image/*\" style=\"display: none;\">\n                <button type=\"button\" class=\"btn btn-outline-primary\" id=\"selectImageBtn\">\n                    Seleccionar Imagen\n                </button>\n                <div id=\"imagePreview\" class=\"mt-2\"></div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" id=\"createTaskBtn\">\n                Crear Tarea\n            </button>\n        </form>\n    `;\n  document.getElementById('createTaskForm').addEventListener('submit', handleCreateTask);\n  document.getElementById('selectImageBtn').addEventListener('click', function () {\n    document.getElementById('taskImage').click();\n  });\n  document.getElementById('taskImage').addEventListener('change', handleImagePreview);\n}\nfunction handleImagePreview(e) {\n  var file = e.target.files[0];\n  var preview = document.getElementById('imagePreview');\n  if (file) {\n    var reader = new FileReader();\n    reader.onload = function (e) {\n      preview.innerHTML = `\n                <img src=\"${e.target.result}\" class=\"img-thumbnail\" style=\"max-height: 200px;\">\n                <p class=\"mt-1 text-muted\">${file.name}</p>\n            `;\n    };\n    reader.readAsDataURL(file);\n  } else {\n    preview.innerHTML = '';\n  }\n}\nfunction handleCreateTask(_x5) {\n  return _handleCreateTask.apply(this, arguments);\n}\nfunction _handleCreateTask() {\n  _handleCreateTask = _asyncToGenerator(function* (e) {\n    e.preventDefault();\n    var title = document.getElementById('taskTitle').value;\n    var description = document.getElementById('taskDescription').value;\n    var dueDate = document.getElementById('taskDueDate').value;\n    var imageFile = document.getElementById('taskImage').files[0];\n    if (!title || !description || !imageFile) {\n      showAlert('Por favor completa todos los campos y selecciona una imagen', 'error');\n      return;\n    }\n    showLoading('createTaskBtn', true);\n    try {\n      var formData = new FormData();\n      formData.append('title', title);\n      formData.append('description', description);\n      if (dueDate) {\n        formData.append('due_date', new Date(dueDate).toISOString());\n      }\n      formData.append('image', imageFile);\n      var response = yield fetch(`${API_BASE_URL}/tasks`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${authToken}`\n        },\n        body: formData\n      });\n      if (response.ok) {\n        showAlert('Tarea creada correctamente', 'success');\n        document.getElementById('createTaskForm').reset();\n        document.getElementById('imagePreview').innerHTML = '';\n      } else {\n        var errorData = yield response.json();\n        showAlert(errorData.detail || 'Error al crear la tarea', 'error');\n      }\n    } catch (error) {\n      showAlert('Error de conexión', 'error');\n    } finally {\n      showLoading('createTaskBtn', false);\n    }\n  });\n  return _handleCreateTask.apply(this, arguments);\n}\nfunction showStatistics() {\n  return _showStatistics.apply(this, arguments);\n}\nfunction _showStatistics() {\n  _showStatistics = _asyncToGenerator(function* () {\n    setActiveTab('statisticsTab');\n    try {\n      var _yield$Promise$all = yield Promise.all([fetch(`${API_BASE_URL}/statistics/overview`, {\n          headers: {\n            'Authorization': `Bearer ${authToken}`\n          }\n        }), fetch(`${API_BASE_URL}/statistics/tasks`, {\n          headers: {\n            'Authorization': `Bearer ${authToken}`\n          }\n        })]),\n        _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2),\n        overviewResponse = _yield$Promise$all2[0],\n        tasksResponse = _yield$Promise$all2[1];\n      if (overviewResponse.ok && tasksResponse.ok) {\n        var overview = yield overviewResponse.json();\n        var taskStats = yield tasksResponse.json();\n        renderStatistics(overview, taskStats);\n      } else {\n        showAlert('Error al cargar las estadísticas', 'error');\n      }\n    } catch (error) {\n      showAlert('Error de conexión', 'error');\n    }\n  });\n  return _showStatistics.apply(this, arguments);\n}\nfunction renderStatistics(overview, taskStats) {\n  document.getElementById('adminContent').innerHTML = `\n        <h3>Estadísticas</h3>\n        \n        <div class=\"row mb-4\">\n            <div class=\"col-md-6\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\">Resumen General</h5>\n                        <p><strong>Total de Tareas:</strong> ${overview.total_tasks}</p>\n                        <p><strong>Total de Estudiantes:</strong> ${overview.total_students}</p>\n                        <p><strong>Tareas Completadas:</strong> ${overview.completed_submissions}</p>\n                        <p><strong>Tareas Pendientes:</strong> ${overview.pending_submissions}</p>\n                        <p><strong>Tasa de Finalización:</strong> ${overview.overall_completion_rate}%</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <h4>Estadísticas por Tarea</h4>\n        <div class=\"row\">\n            ${taskStats.map(function (task) {\n    return `\n                <div class=\"col-md-6 mb-3\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <h6 class=\"card-title\">${task.task_title}</h6>\n                            <p class=\"mb-1\">Completadas: ${task.completed}</p>\n                            <p class=\"mb-1\">Pendientes: ${task.pending}</p>\n                            <p class=\"mb-0\">Tasa: ${task.completion_rate}%</p>\n                        </div>\n                    </div>\n                </div>\n            `;\n  }).join('')}\n        </div>\n    `;\n}\nfunction setActiveTab(activeTabId) {\n  document.querySelectorAll('.nav-link').forEach(function (tab) {\n    tab.classList.remove('active');\n  });\n  document.getElementById(activeTabId).classList.add('active');\n}\nfunction showAlert(message, type) {\n  var alertDiv = document.createElement('div');\n  alertDiv.className = `alert alert-${type === 'error' ? 'danger' : type} alert-dismissible fade show`;\n  alertDiv.innerHTML = `\n        ${message}\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n    `;\n  document.body.insertBefore(alertDiv, document.body.firstChild);\n  setTimeout(function () {\n    if (alertDiv.parentNode) {\n      alertDiv.remove();\n    }\n  }, 5000);\n}\nfunction showLoading(buttonId, isLoading) {\n  var button = document.getElementById(buttonId);\n  if (isLoading) {\n    button.disabled = true;\n    button.innerHTML = '<span class=\"spinner-border spinner-border-sm me-2\"></span>Cargando...';\n  } else {\n    button.disabled = false;\n    var originalTexts = {\n      'loginBtn': 'Iniciar Sesión',\n      'registerBtn': 'Registrarse',\n      'createTaskBtn': 'Crear Tarea'\n    };\n    button.innerHTML = originalTexts[buttonId] || 'Enviar';\n  }\n}\nfunction formatDate(dateString) {\n  return new Date(dateString).toLocaleDateString('es-ES');\n}\nwindow.toggleTaskCompletion = toggleTaskCompletion;\nwindow.toggleTaskCompletion = toggleTaskCompletion;","map":{"version":3,"names":["API_BASE_URL","currentUser","authToken","loginScreen","document","getElementById","registerScreen","dashboardScreen","studentView","adminView","addEventListener","checkAuthStatus","setupEventListeners","token","localStorage","getItem","user","JSON","parse","showDashboard","showLogin","handleLogin","handleRegister","showRegister","handleLogout","showStudentTasks","showCreateTask","showStatistics","handleCreateTask","click","handleImagePreview","hideAllScreens","style","display","focus","is_admin","showAdminView","showStudentView","textContent","username","_x","_handleLogin","apply","arguments","_asyncToGenerator","e","preventDefault","value","password","showAlert","showLoading","formData","FormData","append","response","fetch","method","body","ok","data","json","access_token","userResponse","headers","setItem","stringify","errorData","detail","error","_x2","_handleRegister","email","isAdmin","checked","reset","removeItem","_showStudentTasks","setActiveTab","tasks","renderStudentTasks","container","length","innerHTML","map","item","task","title","completed","id","description","image_path","due_date","formatDate","completed_at","join","toggleTaskCompletion","_x3","_x4","_toggleTaskCompletion","taskId","isCompleted","endpoint","file","target","files","preview","reader","FileReader","onload","result","name","readAsDataURL","_x5","_handleCreateTask","dueDate","imageFile","Date","toISOString","_showStatistics","_yield$Promise$all","Promise","all","_yield$Promise$all2","_slicedToArray","overviewResponse","tasksResponse","overview","taskStats","renderStatistics","total_tasks","total_students","completed_submissions","pending_submissions","overall_completion_rate","task_title","pending","completion_rate","activeTabId","querySelectorAll","forEach","tab","classList","remove","add","message","type","alertDiv","createElement","className","insertBefore","firstChild","setTimeout","parentNode","buttonId","isLoading","button","disabled","originalTexts","dateString","toLocaleDateString","window"],"sources":["C:/Users/borji/Desktop/appPython/webRobotica/frontend-web/App.js"],"sourcesContent":["// Configuración de la API\r\nconst API_BASE_URL = 'http://localhost:8000';\r\n\r\n// Estado global de la aplicación\r\nlet currentUser = null;\r\nlet authToken = null;\r\n\r\n// Elementos del DOM\r\nconst loginScreen = document.getElementById('loginScreen');\r\nconst registerScreen = document.getElementById('registerScreen');\r\nconst dashboardScreen = document.getElementById('dashboardScreen');\r\nconst studentView = document.getElementById('studentView');\r\nconst adminView = document.getElementById('adminView');\r\n\r\n// Inicialización de la aplicación\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    checkAuthStatus();\r\n    setupEventListeners();\r\n});\r\n\r\n// Verificar si el usuario está autenticado\r\nfunction checkAuthStatus() {\r\n    const token = localStorage.getItem('authToken');\r\n    const user = localStorage.getItem('currentUser');\r\n    \r\n    if (token && user) {\r\n        authToken = token;\r\n        currentUser = JSON.parse(user);\r\n        showDashboard();\r\n    } else {\r\n        showLogin();\r\n    }\r\n}\r\n\r\n// Configurar event listeners\r\nfunction setupEventListeners() {\r\n    // Formulario de login\r\n    document.getElementById('loginForm').addEventListener('submit', handleLogin);\r\n    \r\n    // Formulario de registro\r\n    document.getElementById('registerForm').addEventListener('submit', handleRegister);\r\n    \r\n    // Botones de navegación\r\n    document.getElementById('showRegister').addEventListener('click', showRegister);\r\n    document.getElementById('showLogin').addEventListener('click', showLogin);\r\n    document.getElementById('logoutBtn').addEventListener('click', handleLogout);\r\n    \r\n    // Navegación del dashboard\r\n    document.getElementById('tasksTab').addEventListener('click', () => showStudentTasks());\r\n    document.getElementById('createTaskTab').addEventListener('click', () => showCreateTask());\r\n    document.getElementById('statisticsTab').addEventListener('click', () => showStatistics());\r\n    \r\n    // Formulario de crear tarea\r\n    document.getElementById('createTaskForm').addEventListener('submit', handleCreateTask);\r\n    \r\n    // Botón de seleccionar imagen\r\n    document.getElementById('selectImageBtn').addEventListener('click', () => {\r\n        document.getElementById('taskImage').click();\r\n    });\r\n    \r\n    // Preview de imagen\r\n    document.getElementById('taskImage').addEventListener('change', handleImagePreview);\r\n}\r\n\r\n// Mostrar pantalla de login\r\nfunction showLogin() {\r\n    hideAllScreens();\r\n    loginScreen.style.display = 'block';\r\n    document.getElementById('loginUsername').focus();\r\n}\r\n\r\n// Mostrar pantalla de registro\r\nfunction showRegister() {\r\n    hideAllScreens();\r\n    registerScreen.style.display = 'block';\r\n    document.getElementById('registerEmail').focus();\r\n}\r\n\r\n// Mostrar dashboard\r\nfunction showDashboard() {\r\n    hideAllScreens();\r\n    dashboardScreen.style.display = 'block';\r\n    \r\n    // Mostrar vista según tipo de usuario\r\n    if (currentUser.is_admin) {\r\n        showAdminView();\r\n    } else {\r\n        showStudentView();\r\n    }\r\n    \r\n    // Actualizar información del usuario\r\n    document.getElementById('userInfo').textContent = \r\n        `${currentUser.username} (${currentUser.is_admin ? 'Administrador' : 'Estudiante'})`;\r\n}\r\n\r\n// Ocultar todas las pantallas\r\nfunction hideAllScreens() {\r\n    loginScreen.style.display = 'none';\r\n    registerScreen.style.display = 'none';\r\n    dashboardScreen.style.display = 'none';\r\n}\r\n\r\n// Mostrar vista de estudiante\r\nfunction showStudentView() {\r\n    adminView.style.display = 'none';\r\n    studentView.style.display = 'block';\r\n    \r\n    // Mostrar solo las pestañas de estudiante\r\n    document.getElementById('createTaskTab').style.display = 'none';\r\n    document.getElementById('statisticsTab').style.display = 'none';\r\n    document.getElementById('tasksTab').style.display = 'block';\r\n    \r\n    showStudentTasks();\r\n}\r\n\r\n// Mostrar vista de administrador\r\nfunction showAdminView() {\r\n    studentView.style.display = 'none';\r\n    adminView.style.display = 'block';\r\n    \r\n    // Mostrar todas las pestañas\r\n    document.getElementById('createTaskTab').style.display = 'block';\r\n    document.getElementById('statisticsTab').style.display = 'block';\r\n    document.getElementById('tasksTab').style.display = 'none';\r\n    \r\n    showCreateTask();\r\n}\r\n\r\n// Manejar login\r\nasync function handleLogin(e) {\r\n    e.preventDefault();\r\n    \r\n    const username = document.getElementById('loginUsername').value;\r\n    const password = document.getElementById('loginPassword').value;\r\n    \r\n    if (!username || !password) {\r\n        showAlert('Por favor completa todos los campos', 'error');\r\n        return;\r\n    }\r\n    \r\n    showLoading('loginBtn', true);\r\n    \r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('username', username);\r\n        formData.append('password', password);\r\n        \r\n        const response = await fetch(`${API_BASE_URL}/login`, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        \r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            authToken = data.access_token;\r\n            \r\n            // Obtener datos del usuario\r\n            const userResponse = await fetch(`${API_BASE_URL}/me`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${authToken}`\r\n                }\r\n            });\r\n            \r\n            if (userResponse.ok) {\r\n                currentUser = await userResponse.json();\r\n                \r\n                // Guardar en localStorage\r\n                localStorage.setItem('authToken', authToken);\r\n                localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n                \r\n                showAlert('Login exitoso', 'success');\r\n                showDashboard();\r\n            }\r\n        } else {\r\n            const errorData = await response.json();\r\n            showAlert(errorData.detail || 'Error de login', 'error');\r\n        }\r\n    } catch (error) {\r\n        showAlert('Error de conexión', 'error');\r\n    } finally {\r\n        showLoading('loginBtn', false);\r\n    }\r\n}\r\n\r\n// Manejar registro\r\nasync function handleRegister(e) {\r\n    e.preventDefault();\r\n    \r\n    const email = document.getElementById('registerEmail').value;\r\n    const username = document.getElementById('registerUsername').value;\r\n    const password = document.getElementById('registerPassword').value;\r\n    const isAdmin = document.getElementById('registerIsAdmin').checked;\r\n    \r\n    if (!email || !username || !password) {\r\n        showAlert('Por favor completa todos los campos', 'error');\r\n        return;\r\n    }\r\n    \r\n    showLoading('registerBtn', true);\r\n    \r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                username,\r\n                password,\r\n                is_admin: isAdmin\r\n            })\r\n        });\r\n        \r\n        if (response.ok) {\r\n            showAlert('Usuario registrado correctamente', 'success');\r\n            document.getElementById('registerForm').reset();\r\n            showLogin();\r\n        } else {\r\n            const errorData = await response.json();\r\n            showAlert(errorData.detail || 'Error de registro', 'error');\r\n        }\r\n    } catch (error) {\r\n        showAlert('Error de conexión', 'error');\r\n    } finally {\r\n        showLoading('registerBtn', false);\r\n    }\r\n}\r\n\r\n// Manejar logout\r\nfunction handleLogout() {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('currentUser');\r\n    authToken = null;\r\n    currentUser = null;\r\n    showLogin();\r\n    showAlert('Sesión cerrada', 'info');\r\n}\r\n\r\n// Mostrar tareas del estudiante\r\nasync function showStudentTasks() {\r\n    setActiveTab('tasksTab');\r\n    \r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/my-tasks`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${authToken}`\r\n            }\r\n        });\r\n        \r\n        if (response.ok) {\r\n            const tasks = await response.json();\r\n            renderStudentTasks(tasks);\r\n        } else {\r\n            showAlert('Error al cargar las tareas', 'error');\r\n        }\r\n    } catch (error) {\r\n        showAlert('Error de conexión', 'error');\r\n    }\r\n}\r\n\r\n// Renderizar tareas del estudiante\r\nfunction renderStudentTasks(tasks) {\r\n    const container = document.getElementById('studentTasksList');\r\n    \r\n    if (tasks.length === 0) {\r\n        container.innerHTML = '<p class=\"text-center text-muted\">No hay tareas asignadas</p>';\r\n        return;\r\n    }\r\n    \r\n    container.innerHTML = tasks.map(item => `\r\n        <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n                <div class=\"d-flex justify-content-between align-items-start mb-2\">\r\n                    <h5 class=\"card-title\">${item.task.title}</h5>\r\n                    <button class=\"btn btn-sm ${item.completed ? 'btn-success' : 'btn-warning'}\" \r\n                            onclick=\"toggleTaskCompletion(${item.task.id}, ${item.completed})\">\r\n                        ${item.completed ? 'Completada' : 'Pendiente'}\r\n                    </button>\r\n                </div>\r\n                <p class=\"card-text\">${item.task.description}</p>\r\n                ${item.task.image_path ? `\r\n                    <img src=\"${API_BASE_URL}${item.task.image_path}\" \r\n                         class=\"img-fluid mb-2\" style=\"max-height: 200px;\">\r\n                ` : ''}\r\n                ${item.task.due_date ? `\r\n                    <p class=\"text-danger\"><small>Fecha límite: ${formatDate(item.task.due_date)}</small></p>\r\n                ` : ''}\r\n                ${item.completed_at ? `\r\n                    <p class=\"text-success\"><small>Completada: ${formatDate(item.completed_at)}</small></p>\r\n                ` : ''}\r\n            </div>\r\n        </div>\r\n    `).join('');\r\n}\r\n\r\n// Alternar completado de tarea\r\nasync function toggleTaskCompletion(taskId, isCompleted) {\r\n    try {\r\n        const endpoint = isCompleted ? 'uncomplete' : 'complete';\r\n        const response = await fetch(`${API_BASE_URL}/tasks/${taskId}/${endpoint}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': `Bearer ${authToken}`\r\n            }\r\n        });\r\n        \r\n        if (response.ok) {\r\n            showAlert(`Tarea ${isCompleted ? 'marcada como pendiente' : 'completada'}`, 'success');\r\n            showStudentTasks(); // Recargar tareas\r\n        } else {\r\n            showAlert('Error al actualizar la tarea', 'error');\r\n        }\r\n    } catch (error) {\r\n        showAlert('Error de conexión', 'error');\r\n    }\r\n}\r\n\r\n// Mostrar formulario de crear tarea\r\nfunction showCreateTask() {\r\n    setActiveTab('createTaskTab');\r\n    document.getElementById('adminContent').innerHTML = `\r\n        <h3>Crear Nueva Tarea</h3>\r\n        <form id=\"createTaskForm\">\r\n            <div class=\"mb-3\">\r\n                <label for=\"taskTitle\" class=\"form-label\">Título</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"taskTitle\" required>\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <label for=\"taskDescription\" class=\"form-label\">Descripción</label>\r\n                <textarea class=\"form-control\" id=\"taskDescription\" rows=\"4\" required></textarea>\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <label for=\"taskDueDate\" class=\"form-label\">Fecha límite (opcional)</label>\r\n                <input type=\"date\" class=\"form-control\" id=\"taskDueDate\">\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <label class=\"form-label\">Imagen del robot</label>\r\n                <input type=\"file\" class=\"form-control\" id=\"taskImage\" accept=\"image/*\" style=\"display: none;\">\r\n                <button type=\"button\" class=\"btn btn-outline-primary\" id=\"selectImageBtn\">\r\n                    Seleccionar Imagen\r\n                </button>\r\n                <div id=\"imagePreview\" class=\"mt-2\"></div>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\" id=\"createTaskBtn\">\r\n                Crear Tarea\r\n            </button>\r\n        </form>\r\n    `;\r\n    \r\n    // Reconfigurar event listeners\r\n    document.getElementById('createTaskForm').addEventListener('submit', handleCreateTask);\r\n    document.getElementById('selectImageBtn').addEventListener('click', () => {\r\n        document.getElementById('taskImage').click();\r\n    });\r\n    document.getElementById('taskImage').addEventListener('change', handleImagePreview);\r\n}\r\n\r\n// Manejar preview de imagen\r\nfunction handleImagePreview(e) {\r\n    const file = e.target.files[0];\r\n    const preview = document.getElementById('imagePreview');\r\n    \r\n    if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = function(e) {\r\n            preview.innerHTML = `\r\n                <img src=\"${e.target.result}\" class=\"img-thumbnail\" style=\"max-height: 200px;\">\r\n                <p class=\"mt-1 text-muted\">${file.name}</p>\r\n            `;\r\n        };\r\n        reader.readAsDataURL(file);\r\n    } else {\r\n        preview.innerHTML = '';\r\n    }\r\n}\r\n\r\n// Manejar creación de tarea\r\nasync function handleCreateTask(e) {\r\n    e.preventDefault();\r\n    \r\n    const title = document.getElementById('taskTitle').value;\r\n    const description = document.getElementById('taskDescription').value;\r\n    const dueDate = document.getElementById('taskDueDate').value;\r\n    const imageFile = document.getElementById('taskImage').files[0];\r\n    \r\n    if (!title || !description || !imageFile) {\r\n        showAlert('Por favor completa todos los campos y selecciona una imagen', 'error');\r\n        return;\r\n    }\r\n    \r\n    showLoading('createTaskBtn', true);\r\n    \r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('description', description);\r\n        if (dueDate) {\r\n            formData.append('due_date', new Date(dueDate).toISOString());\r\n        }\r\n        formData.append('image', imageFile);\r\n        \r\n        const response = await fetch(`${API_BASE_URL}/tasks`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${authToken}`\r\n            },\r\n            body: formData\r\n        });\r\n        \r\n        if (response.ok) {\r\n            showAlert('Tarea creada correctamente', 'success');\r\n            document.getElementById('createTaskForm').reset();\r\n            document.getElementById('imagePreview').innerHTML = '';\r\n        } else {\r\n            const errorData = await response.json();\r\n            showAlert(errorData.detail || 'Error al crear la tarea', 'error');\r\n        }\r\n    } catch (error) {\r\n        showAlert('Error de conexión', 'error');\r\n    } finally {\r\n        showLoading('createTaskBtn', false);\r\n    }\r\n}\r\n\r\n// Mostrar estadísticas\r\nasync function showStatistics() {\r\n    setActiveTab('statisticsTab');\r\n    \r\n    try {\r\n        const [overviewResponse, tasksResponse] = await Promise.all([\r\n            fetch(`${API_BASE_URL}/statistics/overview`, {\r\n                headers: { 'Authorization': `Bearer ${authToken}` }\r\n            }),\r\n            fetch(`${API_BASE_URL}/statistics/tasks`, {\r\n                headers: { 'Authorization': `Bearer ${authToken}` }\r\n            })\r\n        ]);\r\n        \r\n        if (overviewResponse.ok && tasksResponse.ok) {\r\n            const overview = await overviewResponse.json();\r\n            const taskStats = await tasksResponse.json();\r\n            renderStatistics(overview, taskStats);\r\n        } else {\r\n            showAlert('Error al cargar las estadísticas', 'error');\r\n        }\r\n    } catch (error) {\r\n        showAlert('Error de conexión', 'error');\r\n    }\r\n}\r\n\r\n// Renderizar estadísticas\r\nfunction renderStatistics(overview, taskStats) {\r\n    document.getElementById('adminContent').innerHTML = `\r\n        <h3>Estadísticas</h3>\r\n        \r\n        <div class=\"row mb-4\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">Resumen General</h5>\r\n                        <p><strong>Total de Tareas:</strong> ${overview.total_tasks}</p>\r\n                        <p><strong>Total de Estudiantes:</strong> ${overview.total_students}</p>\r\n                        <p><strong>Tareas Completadas:</strong> ${overview.completed_submissions}</p>\r\n                        <p><strong>Tareas Pendientes:</strong> ${overview.pending_submissions}</p>\r\n                        <p><strong>Tasa de Finalización:</strong> ${overview.overall_completion_rate}%</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <h4>Estadísticas por Tarea</h4>\r\n        <div class=\"row\">\r\n            ${taskStats.map(task => `\r\n                <div class=\"col-md-6 mb-3\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <h6 class=\"card-title\">${task.task_title}</h6>\r\n                            <p class=\"mb-1\">Completadas: ${task.completed}</p>\r\n                            <p class=\"mb-1\">Pendientes: ${task.pending}</p>\r\n                            <p class=\"mb-0\">Tasa: ${task.completion_rate}%</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            `).join('')}\r\n        </div>\r\n    `;\r\n}\r\n\r\n// Funciones auxiliares\r\nfunction setActiveTab(activeTabId) {\r\n    // Remover clase active de todas las pestañas\r\n    document.querySelectorAll('.nav-link').forEach(tab => {\r\n        tab.classList.remove('active');\r\n    });\r\n    \r\n    // Agregar clase active a la pestaña seleccionada\r\n    document.getElementById(activeTabId).classList.add('active');\r\n}\r\n\r\nfunction showAlert(message, type) {\r\n    const alertDiv = document.createElement('div');\r\n    alertDiv.className = `alert alert-${type === 'error' ? 'danger' : type} alert-dismissible fade show`;\r\n    alertDiv.innerHTML = `\r\n        ${message}\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\r\n    `;\r\n    \r\n    // Insertar al inicio del body\r\n    document.body.insertBefore(alertDiv, document.body.firstChild);\r\n    \r\n    // Auto-remover después de 5 segundos\r\n    setTimeout(() => {\r\n        if (alertDiv.parentNode) {\r\n            alertDiv.remove();\r\n        }\r\n    }, 5000);\r\n}\r\n\r\nfunction showLoading(buttonId, isLoading) {\r\n    const button = document.getElementById(buttonId);\r\n    if (isLoading) {\r\n        button.disabled = true;\r\n        button.innerHTML = '<span class=\"spinner-border spinner-border-sm me-2\"></span>Cargando...';\r\n    } else {\r\n        button.disabled = false;\r\n        // Restaurar texto original basado en el ID\r\n        const originalTexts = {\r\n            'loginBtn': 'Iniciar Sesión',\r\n            'registerBtn': 'Registrarse',\r\n            'createTaskBtn': 'Crear Tarea'\r\n        };\r\n        button.innerHTML = originalTexts[buttonId] || 'Enviar';\r\n    }\r\n}\r\n\r\nfunction formatDate(dateString) {\r\n    return new Date(dateString).toLocaleDateString('es-ES');\r\n}\r\n\r\n// Función global para toggle de tareas (llamada desde HTML)\r\nwindow.toggleTaskCompletion = toggleTaskCompletion;\r\nwindow.toggleTaskCompletion = toggleTaskCompletion;"],"mappings":";;AACA,IAAMA,YAAY,GAAG,uBAAuB;AAG5C,IAAIC,WAAW,GAAG,IAAI;AACtB,IAAIC,SAAS,GAAG,IAAI;AAGpB,IAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;AAC1D,IAAMC,cAAc,GAAGF,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;AAChE,IAAME,eAAe,GAAGH,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;AAClE,IAAMG,WAAW,GAAGJ,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;AAC1D,IAAMI,SAAS,GAAGL,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;AAGtDD,QAAQ,CAACM,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;EACrDC,eAAe,CAAC,CAAC;EACjBC,mBAAmB,CAAC,CAAC;AACzB,CAAC,CAAC;AAGF,SAASD,eAAeA,CAAA,EAAG;EACvB,IAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAEhD,IAAIF,KAAK,IAAIG,IAAI,EAAE;IACfd,SAAS,GAAGW,KAAK;IACjBZ,WAAW,GAAGgB,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;IAC9BG,aAAa,CAAC,CAAC;EACnB,CAAC,MAAM;IACHC,SAAS,CAAC,CAAC;EACf;AACJ;AAGA,SAASR,mBAAmBA,CAAA,EAAG;EAE3BR,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACK,gBAAgB,CAAC,QAAQ,EAAEW,WAAW,CAAC;EAG5EjB,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACK,gBAAgB,CAAC,QAAQ,EAAEY,cAAc,CAAC;EAGlFlB,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACK,gBAAgB,CAAC,OAAO,EAAEa,YAAY,CAAC;EAC/EnB,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACK,gBAAgB,CAAC,OAAO,EAAEU,SAAS,CAAC;EACzEhB,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACK,gBAAgB,CAAC,OAAO,EAAEc,YAAY,CAAC;EAG5EpB,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACK,gBAAgB,CAAC,OAAO,EAAE;IAAA,OAAMe,gBAAgB,CAAC,CAAC;EAAA,EAAC;EACvFrB,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACK,gBAAgB,CAAC,OAAO,EAAE;IAAA,OAAMgB,cAAc,CAAC,CAAC;EAAA,EAAC;EAC1FtB,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACK,gBAAgB,CAAC,OAAO,EAAE;IAAA,OAAMiB,cAAc,CAAC,CAAC;EAAA,EAAC;EAG1FvB,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACK,gBAAgB,CAAC,QAAQ,EAAEkB,gBAAgB,CAAC;EAGtFxB,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACK,gBAAgB,CAAC,OAAO,EAAE,YAAM;IACtEN,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACwB,KAAK,CAAC,CAAC;EAChD,CAAC,CAAC;EAGFzB,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACK,gBAAgB,CAAC,QAAQ,EAAEoB,kBAAkB,CAAC;AACvF;AAGA,SAASV,SAASA,CAAA,EAAG;EACjBW,cAAc,CAAC,CAAC;EAChB5B,WAAW,CAAC6B,KAAK,CAACC,OAAO,GAAG,OAAO;EACnC7B,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC6B,KAAK,CAAC,CAAC;AACpD;AAGA,SAASX,YAAYA,CAAA,EAAG;EACpBQ,cAAc,CAAC,CAAC;EAChBzB,cAAc,CAAC0B,KAAK,CAACC,OAAO,GAAG,OAAO;EACtC7B,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC6B,KAAK,CAAC,CAAC;AACpD;AAGA,SAASf,aAAaA,CAAA,EAAG;EACrBY,cAAc,CAAC,CAAC;EAChBxB,eAAe,CAACyB,KAAK,CAACC,OAAO,GAAG,OAAO;EAGvC,IAAIhC,WAAW,CAACkC,QAAQ,EAAE;IACtBC,aAAa,CAAC,CAAC;EACnB,CAAC,MAAM;IACHC,eAAe,CAAC,CAAC;EACrB;EAGAjC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACiC,WAAW,GAC3C,GAAGrC,WAAW,CAACsC,QAAQ,KAAKtC,WAAW,CAACkC,QAAQ,GAAG,eAAe,GAAG,YAAY,GAAG;AAC5F;AAGA,SAASJ,cAAcA,CAAA,EAAG;EACtB5B,WAAW,CAAC6B,KAAK,CAACC,OAAO,GAAG,MAAM;EAClC3B,cAAc,CAAC0B,KAAK,CAACC,OAAO,GAAG,MAAM;EACrC1B,eAAe,CAACyB,KAAK,CAACC,OAAO,GAAG,MAAM;AAC1C;AAGA,SAASI,eAAeA,CAAA,EAAG;EACvB5B,SAAS,CAACuB,KAAK,CAACC,OAAO,GAAG,MAAM;EAChCzB,WAAW,CAACwB,KAAK,CAACC,OAAO,GAAG,OAAO;EAGnC7B,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC2B,KAAK,CAACC,OAAO,GAAG,MAAM;EAC/D7B,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC2B,KAAK,CAACC,OAAO,GAAG,MAAM;EAC/D7B,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAAC2B,KAAK,CAACC,OAAO,GAAG,OAAO;EAE3DR,gBAAgB,CAAC,CAAC;AACtB;AAGA,SAASW,aAAaA,CAAA,EAAG;EACrB5B,WAAW,CAACwB,KAAK,CAACC,OAAO,GAAG,MAAM;EAClCxB,SAAS,CAACuB,KAAK,CAACC,OAAO,GAAG,OAAO;EAGjC7B,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC2B,KAAK,CAACC,OAAO,GAAG,OAAO;EAChE7B,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC2B,KAAK,CAACC,OAAO,GAAG,OAAO;EAChE7B,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAAC2B,KAAK,CAACC,OAAO,GAAG,MAAM;EAE1DP,cAAc,CAAC,CAAC;AACpB;AAAC,SAGcL,WAAWA,CAAAmB,EAAA;EAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,aAAA;EAAAA,YAAA,GAAAG,iBAAA,CAA1B,WAA2BC,CAAC,EAAE;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAMP,QAAQ,GAAGnC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC0C,KAAK;IAC/D,IAAMC,QAAQ,GAAG5C,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC0C,KAAK;IAE/D,IAAI,CAACR,QAAQ,IAAI,CAACS,QAAQ,EAAE;MACxBC,SAAS,CAAC,qCAAqC,EAAE,OAAO,CAAC;MACzD;IACJ;IAEAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC;IAE7B,IAAI;MACA,IAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEd,QAAQ,CAAC;MACrCY,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEL,QAAQ,CAAC;MAErC,IAAMM,QAAQ,SAASC,KAAK,CAAC,GAAGvD,YAAY,QAAQ,EAAE;QAClDwD,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACb,IAAMC,IAAI,SAASL,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC1D,SAAS,GAAGyD,IAAI,CAACE,YAAY;QAG7B,IAAMC,YAAY,SAASP,KAAK,CAAC,GAAGvD,YAAY,KAAK,EAAE;UACnD+D,OAAO,EAAE;YACL,eAAe,EAAE,UAAU7D,SAAS;UACxC;QACJ,CAAC,CAAC;QAEF,IAAI4D,YAAY,CAACJ,EAAE,EAAE;UACjBzD,WAAW,SAAS6D,YAAY,CAACF,IAAI,CAAC,CAAC;UAGvC9C,YAAY,CAACkD,OAAO,CAAC,WAAW,EAAE9D,SAAS,CAAC;UAC5CY,YAAY,CAACkD,OAAO,CAAC,aAAa,EAAE/C,IAAI,CAACgD,SAAS,CAAChE,WAAW,CAAC,CAAC;UAEhEgD,SAAS,CAAC,eAAe,EAAE,SAAS,CAAC;UACrC9B,aAAa,CAAC,CAAC;QACnB;MACJ,CAAC,MAAM;QACH,IAAM+C,SAAS,SAASZ,QAAQ,CAACM,IAAI,CAAC,CAAC;QACvCX,SAAS,CAACiB,SAAS,CAACC,MAAM,IAAI,gBAAgB,EAAE,OAAO,CAAC;MAC5D;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZnB,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC;IAC3C,CAAC,SAAS;MACNC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC;IAClC;EACJ,CAAC;EAAA,OAAAT,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAGcrB,cAAcA,CAAA+C,GAAA;EAAA,OAAAC,eAAA,CAAA5B,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAA2B,gBAAA;EAAAA,eAAA,GAAA1B,iBAAA,CAA7B,WAA8BC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAMyB,KAAK,GAAGnE,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAAC0C,KAAK;IAC5D,IAAMR,QAAQ,GAAGnC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAAC0C,KAAK;IAClE,IAAMC,QAAQ,GAAG5C,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAAC0C,KAAK;IAClE,IAAMyB,OAAO,GAAGpE,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACoE,OAAO;IAElE,IAAI,CAACF,KAAK,IAAI,CAAChC,QAAQ,IAAI,CAACS,QAAQ,EAAE;MAClCC,SAAS,CAAC,qCAAqC,EAAE,OAAO,CAAC;MACzD;IACJ;IAEAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC;IAEhC,IAAI;MACA,IAAMI,QAAQ,SAASC,KAAK,CAAC,GAAGvD,YAAY,WAAW,EAAE;QACrDwD,MAAM,EAAE,MAAM;QACdO,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDN,IAAI,EAAExC,IAAI,CAACgD,SAAS,CAAC;UACjBM,KAAK,EAALA,KAAK;UACLhC,QAAQ,EAARA,QAAQ;UACRS,QAAQ,EAARA,QAAQ;UACRb,QAAQ,EAAEqC;QACd,CAAC;MACL,CAAC,CAAC;MAEF,IAAIlB,QAAQ,CAACI,EAAE,EAAE;QACbT,SAAS,CAAC,kCAAkC,EAAE,SAAS,CAAC;QACxD7C,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACqE,KAAK,CAAC,CAAC;QAC/CtD,SAAS,CAAC,CAAC;MACf,CAAC,MAAM;QACH,IAAM8C,SAAS,SAASZ,QAAQ,CAACM,IAAI,CAAC,CAAC;QACvCX,SAAS,CAACiB,SAAS,CAACC,MAAM,IAAI,mBAAmB,EAAE,OAAO,CAAC;MAC/D;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZnB,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC;IAC3C,CAAC,SAAS;MACNC,WAAW,CAAC,aAAa,EAAE,KAAK,CAAC;IACrC;EACJ,CAAC;EAAA,OAAAoB,eAAA,CAAA5B,KAAA,OAAAC,SAAA;AAAA;AAGD,SAASnB,YAAYA,CAAA,EAAG;EACpBV,YAAY,CAAC6D,UAAU,CAAC,WAAW,CAAC;EACpC7D,YAAY,CAAC6D,UAAU,CAAC,aAAa,CAAC;EACtCzE,SAAS,GAAG,IAAI;EAChBD,WAAW,GAAG,IAAI;EAClBmB,SAAS,CAAC,CAAC;EACX6B,SAAS,CAAC,gBAAgB,EAAE,MAAM,CAAC;AACvC;AAAC,SAGcxB,gBAAgBA,CAAA;EAAA,OAAAmD,iBAAA,CAAAlC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAiC,kBAAA;EAAAA,iBAAA,GAAAhC,iBAAA,CAA/B,aAAkC;IAC9BiC,YAAY,CAAC,UAAU,CAAC;IAExB,IAAI;MACA,IAAMvB,QAAQ,SAASC,KAAK,CAAC,GAAGvD,YAAY,WAAW,EAAE;QACrD+D,OAAO,EAAE;UACL,eAAe,EAAE,UAAU7D,SAAS;QACxC;MACJ,CAAC,CAAC;MAEF,IAAIoD,QAAQ,CAACI,EAAE,EAAE;QACb,IAAMoB,KAAK,SAASxB,QAAQ,CAACM,IAAI,CAAC,CAAC;QACnCmB,kBAAkB,CAACD,KAAK,CAAC;MAC7B,CAAC,MAAM;QACH7B,SAAS,CAAC,4BAA4B,EAAE,OAAO,CAAC;MACpD;IACJ,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZnB,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC;IAC3C;EACJ,CAAC;EAAA,OAAA2B,iBAAA,CAAAlC,KAAA,OAAAC,SAAA;AAAA;AAGD,SAASoC,kBAAkBA,CAACD,KAAK,EAAE;EAC/B,IAAME,SAAS,GAAG5E,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;EAE7D,IAAIyE,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;IACpBD,SAAS,CAACE,SAAS,GAAG,+DAA+D;IACrF;EACJ;EAEAF,SAAS,CAACE,SAAS,GAAGJ,KAAK,CAACK,GAAG,CAAC,UAAAC,IAAI;IAAA,OAAI;AAC5C;AACA;AACA;AACA,6CAA6CA,IAAI,CAACC,IAAI,CAACC,KAAK;AAC5D,gDAAgDF,IAAI,CAACG,SAAS,GAAG,aAAa,GAAG,aAAa;AAC9F,4DAA4DH,IAAI,CAACC,IAAI,CAACG,EAAE,KAAKJ,IAAI,CAACG,SAAS;AAC3F,0BAA0BH,IAAI,CAACG,SAAS,GAAG,YAAY,GAAG,WAAW;AACrE;AACA;AACA,uCAAuCH,IAAI,CAACC,IAAI,CAACI,WAAW;AAC5D,kBAAkBL,IAAI,CAACC,IAAI,CAACK,UAAU,GAAG;AACzC,gCAAgC1F,YAAY,GAAGoF,IAAI,CAACC,IAAI,CAACK,UAAU;AACnE;AACA,iBAAiB,GAAG,EAAE;AACtB,kBAAkBN,IAAI,CAACC,IAAI,CAACM,QAAQ,GAAG;AACvC,kEAAkEC,UAAU,CAACR,IAAI,CAACC,IAAI,CAACM,QAAQ,CAAC;AAChG,iBAAiB,GAAG,EAAE;AACtB,kBAAkBP,IAAI,CAACS,YAAY,GAAG;AACtC,iEAAiED,UAAU,CAACR,IAAI,CAACS,YAAY,CAAC;AAC9F,iBAAiB,GAAG,EAAE;AACtB;AACA;AACA,KAAK;EAAA,EAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AACf;AAAC,SAGcC,oBAAoBA,CAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,qBAAA,CAAAxD,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAuD,sBAAA;EAAAA,qBAAA,GAAAtD,iBAAA,CAAnC,WAAoCuD,MAAM,EAAEC,WAAW,EAAE;IACrD,IAAI;MACA,IAAMC,QAAQ,GAAGD,WAAW,GAAG,YAAY,GAAG,UAAU;MACxD,IAAM9C,QAAQ,SAASC,KAAK,CAAC,GAAGvD,YAAY,UAAUmG,MAAM,IAAIE,QAAQ,EAAE,EAAE;QACxE7C,MAAM,EAAE,KAAK;QACbO,OAAO,EAAE;UACL,eAAe,EAAE,UAAU7D,SAAS;QACxC;MACJ,CAAC,CAAC;MAEF,IAAIoD,QAAQ,CAACI,EAAE,EAAE;QACbT,SAAS,CAAC,SAASmD,WAAW,GAAG,wBAAwB,GAAG,YAAY,EAAE,EAAE,SAAS,CAAC;QACtF3E,gBAAgB,CAAC,CAAC;MACtB,CAAC,MAAM;QACHwB,SAAS,CAAC,8BAA8B,EAAE,OAAO,CAAC;MACtD;IACJ,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZnB,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC;IAC3C;EACJ,CAAC;EAAA,OAAAiD,qBAAA,CAAAxD,KAAA,OAAAC,SAAA;AAAA;AAGD,SAASjB,cAAcA,CAAA,EAAG;EACtBmD,YAAY,CAAC,eAAe,CAAC;EAC7BzE,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAAC6E,SAAS,GAAG;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;EAGD9E,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACK,gBAAgB,CAAC,QAAQ,EAAEkB,gBAAgB,CAAC;EACtFxB,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACK,gBAAgB,CAAC,OAAO,EAAE,YAAM;IACtEN,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACwB,KAAK,CAAC,CAAC;EAChD,CAAC,CAAC;EACFzB,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACK,gBAAgB,CAAC,QAAQ,EAAEoB,kBAAkB,CAAC;AACvF;AAGA,SAASA,kBAAkBA,CAACe,CAAC,EAAE;EAC3B,IAAMyD,IAAI,GAAGzD,CAAC,CAAC0D,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC9B,IAAMC,OAAO,GAAGrG,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;EAEvD,IAAIiG,IAAI,EAAE;IACN,IAAMI,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,UAAS/D,CAAC,EAAE;MACxB4D,OAAO,CAACvB,SAAS,GAAG;AAChC,4BAA4BrC,CAAC,CAAC0D,MAAM,CAACM,MAAM;AAC3C,6CAA6CP,IAAI,CAACQ,IAAI;AACtD,aAAa;IACL,CAAC;IACDJ,MAAM,CAACK,aAAa,CAACT,IAAI,CAAC;EAC9B,CAAC,MAAM;IACHG,OAAO,CAACvB,SAAS,GAAG,EAAE;EAC1B;AACJ;AAAC,SAGctD,gBAAgBA,CAAAoF,GAAA;EAAA,OAAAC,iBAAA,CAAAvE,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAsE,kBAAA;EAAAA,iBAAA,GAAArE,iBAAA,CAA/B,WAAgCC,CAAC,EAAE;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAMwC,KAAK,GAAGlF,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAAC0C,KAAK;IACxD,IAAM0C,WAAW,GAAGrF,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAAC0C,KAAK;IACpE,IAAMmE,OAAO,GAAG9G,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAAC0C,KAAK;IAC5D,IAAMoE,SAAS,GAAG/G,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACmG,KAAK,CAAC,CAAC,CAAC;IAE/D,IAAI,CAAClB,KAAK,IAAI,CAACG,WAAW,IAAI,CAAC0B,SAAS,EAAE;MACtClE,SAAS,CAAC,6DAA6D,EAAE,OAAO,CAAC;MACjF;IACJ;IAEAC,WAAW,CAAC,eAAe,EAAE,IAAI,CAAC;IAElC,IAAI;MACA,IAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEiC,KAAK,CAAC;MAC/BnC,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEoC,WAAW,CAAC;MAC3C,IAAIyB,OAAO,EAAE;QACT/D,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI+D,IAAI,CAACF,OAAO,CAAC,CAACG,WAAW,CAAC,CAAC,CAAC;MAChE;MACAlE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE8D,SAAS,CAAC;MAEnC,IAAM7D,QAAQ,SAASC,KAAK,CAAC,GAAGvD,YAAY,QAAQ,EAAE;QAClDwD,MAAM,EAAE,MAAM;QACdO,OAAO,EAAE;UACL,eAAe,EAAE,UAAU7D,SAAS;QACxC,CAAC;QACDuD,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACbT,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;QAClD7C,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACqE,KAAK,CAAC,CAAC;QACjDtE,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAAC6E,SAAS,GAAG,EAAE;MAC1D,CAAC,MAAM;QACH,IAAMhB,SAAS,SAASZ,QAAQ,CAACM,IAAI,CAAC,CAAC;QACvCX,SAAS,CAACiB,SAAS,CAACC,MAAM,IAAI,yBAAyB,EAAE,OAAO,CAAC;MACrE;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZnB,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC;IAC3C,CAAC,SAAS;MACNC,WAAW,CAAC,eAAe,EAAE,KAAK,CAAC;IACvC;EACJ,CAAC;EAAA,OAAA+D,iBAAA,CAAAvE,KAAA,OAAAC,SAAA;AAAA;AAAA,SAGchB,cAAcA,CAAA;EAAA,OAAA2F,eAAA,CAAA5E,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAA2E,gBAAA;EAAAA,eAAA,GAAA1E,iBAAA,CAA7B,aAAgC;IAC5BiC,YAAY,CAAC,eAAe,CAAC;IAE7B,IAAI;MACA,IAAA0C,kBAAA,SAAgDC,OAAO,CAACC,GAAG,CAAC,CACxDlE,KAAK,CAAC,GAAGvD,YAAY,sBAAsB,EAAE;UACzC+D,OAAO,EAAE;YAAE,eAAe,EAAE,UAAU7D,SAAS;UAAG;QACtD,CAAC,CAAC,EACFqD,KAAK,CAAC,GAAGvD,YAAY,mBAAmB,EAAE;UACtC+D,OAAO,EAAE;YAAE,eAAe,EAAE,UAAU7D,SAAS;UAAG;QACtD,CAAC,CAAC,CACL,CAAC;QAAAwH,mBAAA,GAAAC,cAAA,CAAAJ,kBAAA;QAPKK,gBAAgB,GAAAF,mBAAA;QAAEG,aAAa,GAAAH,mBAAA;MAStC,IAAIE,gBAAgB,CAAClE,EAAE,IAAImE,aAAa,CAACnE,EAAE,EAAE;QACzC,IAAMoE,QAAQ,SAASF,gBAAgB,CAAChE,IAAI,CAAC,CAAC;QAC9C,IAAMmE,SAAS,SAASF,aAAa,CAACjE,IAAI,CAAC,CAAC;QAC5CoE,gBAAgB,CAACF,QAAQ,EAAEC,SAAS,CAAC;MACzC,CAAC,MAAM;QACH9E,SAAS,CAAC,kCAAkC,EAAE,OAAO,CAAC;MAC1D;IACJ,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZnB,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC;IAC3C;EACJ,CAAC;EAAA,OAAAqE,eAAA,CAAA5E,KAAA,OAAAC,SAAA;AAAA;AAGD,SAASqF,gBAAgBA,CAACF,QAAQ,EAAEC,SAAS,EAAE;EAC3C3H,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAAC6E,SAAS,GAAG;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D4C,QAAQ,CAACG,WAAW;AACnF,oEAAoEH,QAAQ,CAACI,cAAc;AAC3F,kEAAkEJ,QAAQ,CAACK,qBAAqB;AAChG,iEAAiEL,QAAQ,CAACM,mBAAmB;AAC7F,oEAAoEN,QAAQ,CAACO,uBAAuB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAcN,SAAS,CAAC5C,GAAG,CAAC,UAAAE,IAAI;IAAA,OAAI;AACpC;AACA;AACA;AACA,qDAAqDA,IAAI,CAACiD,UAAU;AACpE,2DAA2DjD,IAAI,CAACE,SAAS;AACzE,0DAA0DF,IAAI,CAACkD,OAAO;AACtE,oDAAoDlD,IAAI,CAACmD,eAAe;AACxE;AACA;AACA;AACA,aAAa;EAAA,EAAC,CAAC1C,IAAI,CAAC,EAAE,CAAC;AACvB;AACA,KAAK;AACL;AAGA,SAASjB,YAAYA,CAAC4D,WAAW,EAAE;EAE/BrI,QAAQ,CAACsI,gBAAgB,CAAC,WAAW,CAAC,CAACC,OAAO,CAAC,UAAAC,GAAG,EAAI;IAClDA,GAAG,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;EAClC,CAAC,CAAC;EAGF1I,QAAQ,CAACC,cAAc,CAACoI,WAAW,CAAC,CAACI,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;AAChE;AAEA,SAAS9F,SAASA,CAAC+F,OAAO,EAAEC,IAAI,EAAE;EAC9B,IAAMC,QAAQ,GAAG9I,QAAQ,CAAC+I,aAAa,CAAC,KAAK,CAAC;EAC9CD,QAAQ,CAACE,SAAS,GAAG,eAAeH,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAGA,IAAI,8BAA8B;EACpGC,QAAQ,CAAChE,SAAS,GAAG;AACzB,UAAU8D,OAAO;AACjB;AACA,KAAK;EAGD5I,QAAQ,CAACqD,IAAI,CAAC4F,YAAY,CAACH,QAAQ,EAAE9I,QAAQ,CAACqD,IAAI,CAAC6F,UAAU,CAAC;EAG9DC,UAAU,CAAC,YAAM;IACb,IAAIL,QAAQ,CAACM,UAAU,EAAE;MACrBN,QAAQ,CAACJ,MAAM,CAAC,CAAC;IACrB;EACJ,CAAC,EAAE,IAAI,CAAC;AACZ;AAEA,SAAS5F,WAAWA,CAACuG,QAAQ,EAAEC,SAAS,EAAE;EACtC,IAAMC,MAAM,GAAGvJ,QAAQ,CAACC,cAAc,CAACoJ,QAAQ,CAAC;EAChD,IAAIC,SAAS,EAAE;IACXC,MAAM,CAACC,QAAQ,GAAG,IAAI;IACtBD,MAAM,CAACzE,SAAS,GAAG,wEAAwE;EAC/F,CAAC,MAAM;IACHyE,MAAM,CAACC,QAAQ,GAAG,KAAK;IAEvB,IAAMC,aAAa,GAAG;MAClB,UAAU,EAAE,gBAAgB;MAC5B,aAAa,EAAE,aAAa;MAC5B,eAAe,EAAE;IACrB,CAAC;IACDF,MAAM,CAACzE,SAAS,GAAG2E,aAAa,CAACJ,QAAQ,CAAC,IAAI,QAAQ;EAC1D;AACJ;AAEA,SAAS7D,UAAUA,CAACkE,UAAU,EAAE;EAC5B,OAAO,IAAI1C,IAAI,CAAC0C,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC;AAC3D;AAGAC,MAAM,CAACjE,oBAAoB,GAAGA,oBAAoB;AAClDiE,MAAM,CAACjE,oBAAoB,GAAGA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}