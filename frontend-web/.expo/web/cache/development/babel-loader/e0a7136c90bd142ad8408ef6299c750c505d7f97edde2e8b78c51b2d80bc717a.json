{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar API_URL = 'http://localhost:8000';\nexport var login = function () {\n  var _ref = _asyncToGenerator(function* (username, password) {\n    try {\n      console.log('Attempting login for:', username);\n      var response = yield fetch(`${API_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          username: username,\n          password: password\n        })\n      });\n      console.log('Login response status:', response.status);\n      if (!response.ok) {\n        var errorData = yield response.json();\n        console.log('Login error:', errorData);\n        throw new Error(errorData.detail || 'Error de autenticación');\n      }\n      var data = yield response.json();\n      console.log('Login successful, response data:', data);\n      yield AsyncStorage.setItem('access_token', data.access_token);\n      console.log('Token saved to AsyncStorage');\n      var userResponse = yield fetch(`${API_URL}/me`, {\n        headers: {\n          'Authorization': `Bearer ${data.access_token}`\n        }\n      });\n      if (!userResponse.ok) {\n        throw new Error('No se pudo obtener información del usuario');\n      }\n      var userData = yield userResponse.json();\n      console.log('User data:', userData);\n      var userRole = userData.role || 'student';\n      yield AsyncStorage.setItem('user_role', userRole);\n      console.log('User role saved:', userRole);\n      return {\n        access_token: data.access_token,\n        token_type: data.token_type,\n        username: userData.username,\n        role: userRole\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  });\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var logout = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      yield AsyncStorage.multiRemove(['access_token', 'user_role', 'username']);\n      console.log('Logout successful - all tokens removed');\n    } catch (error) {\n      console.error('Logout error:', error);\n      throw error;\n    }\n  });\n  return function logout() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getStoredAuth = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    try {\n      var token = yield AsyncStorage.getItem('access_token');\n      var role = yield AsyncStorage.getItem('user_role');\n      var username = yield AsyncStorage.getItem('username');\n      return {\n        token: token,\n        role: role,\n        username: username\n      };\n    } catch (error) {\n      console.error('Error getting stored auth:', error);\n      return {\n        token: null,\n        role: null,\n        username: null\n      };\n    }\n  });\n  return function getStoredAuth() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["AsyncStorage","API_URL","login","_ref","_asyncToGenerator","username","password","console","log","response","fetch","method","headers","body","URLSearchParams","status","ok","errorData","json","Error","detail","data","setItem","access_token","userResponse","userData","userRole","role","token_type","error","_x","_x2","apply","arguments","logout","_ref2","multiRemove","getStoredAuth","_ref3","token","getItem"],"sources":["C:/Users/raulv/Desktop/proyectoCantera/webRobotica/frontend-web/auth.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nexport const login = async (username, password) => {\r\n  try {\r\n    console.log('Attempting login for:', username);\r\n    \r\n    const response = await fetch(`${API_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: new URLSearchParams({\r\n        username: username,\r\n        password: password\r\n      })\r\n    });\r\n\r\n    console.log('Login response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      console.log('Login error:', errorData);\r\n      throw new Error(errorData.detail || 'Error de autenticación');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('Login successful, response data:', data);\r\n\r\n    // Guardar el token\r\n    await AsyncStorage.setItem('access_token', data.access_token);\r\n    console.log('Token saved to AsyncStorage');\r\n\r\n    // Obtener información del usuario usando el token\r\n    const userResponse = await fetch(`${API_URL}/me`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${data.access_token}`\r\n      }\r\n    });\r\n\r\n    if (!userResponse.ok) {\r\n      throw new Error('No se pudo obtener información del usuario');\r\n    }\r\n\r\n    const userData = await userResponse.json();\r\n    console.log('User data:', userData);\r\n\r\n    // Guardar el rol del usuario (asumiendo que está en userData.role)\r\n    const userRole = userData.role || 'student'; // Default a 'student' si no hay rol\r\n    await AsyncStorage.setItem('user_role', userRole);\r\n    console.log('User role saved:', userRole);\r\n\r\n    return {\r\n      access_token: data.access_token,\r\n      token_type: data.token_type,\r\n      username: userData.username,\r\n      role: userRole\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    await AsyncStorage.multiRemove(['access_token', 'user_role', 'username']);\r\n    console.log('Logout successful - all tokens removed');\r\n  } catch (error) {\r\n    console.error('Logout error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getStoredAuth = async () => {\r\n  try {\r\n    const token = await AsyncStorage.getItem('access_token');\r\n    const role = await AsyncStorage.getItem('user_role');\r\n    const username = await AsyncStorage.getItem('username');\r\n    \r\n    return {\r\n      token,\r\n      role,\r\n      username\r\n    };\r\n  } catch (error) {\r\n    console.error('Error getting stored auth:', error);\r\n    return {\r\n      token: null,\r\n      role: null,\r\n      username: null\r\n    };\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}