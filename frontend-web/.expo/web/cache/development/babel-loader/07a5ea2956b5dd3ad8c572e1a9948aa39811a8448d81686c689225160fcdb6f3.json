{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_URL = 'http://localhost:8000/tasks';\nvar StudentDashboard = function StudentDashboard(_ref) {\n  var _selectedTask$task, _selectedTask$task2, _selectedTask$task3;\n  var token = _ref.token,\n    username = _ref.username;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState({\n      completed: 0,\n      pending: 0,\n      progress: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stats = _useState4[0],\n    setStats = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedTask = _useState8[0],\n    setSelectedTask = _useState8[1];\n  var _useState9 = useState(''),\n    _useState0 = _slicedToArray(_useState9, 2),\n    debugInfo = _useState0[0],\n    setDebugInfo = _useState0[1];\n  useEffect(function () {\n    var timeoutId = setTimeout(function () {\n      if (loading) {\n        setLoading(false);\n        Alert.alert('Timeout', 'La carga está tardando demasiado. Verifica la conexión.');\n      }\n    }, 15000);\n    testConnection();\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  }, [token]);\n  var testConnection = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var endpoints = ['/tasks'];\n      for (var endpoint of endpoints) {\n        try {\n          console.log(`Testing endpoint: ${API_URL}${endpoint}`);\n          setDebugInfo(`Probando: ${endpoint}`);\n          var response = yield fetch(`${API_URL}${endpoint}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            timeout: 5000\n          });\n          console.log(`${endpoint} - Status:`, response.status);\n          if (response.ok) {\n            var data = yield response.json();\n            console.log(`${endpoint} - Data:`, data);\n            setTasks(Array.isArray(data) ? data : []);\n            var completed = (Array.isArray(data) ? data : []).filter(function (t) {\n              return t.completed;\n            }).length;\n            var total = (Array.isArray(data) ? data : []).length;\n            setStats({\n              completed: completed,\n              pending: total - completed,\n              progress: total > 0 ? Math.round(completed / total * 100) : 0\n            });\n            setDebugInfo(`Conectado exitosamente a: ${endpoint}`);\n            setLoading(false);\n            return;\n          }\n        } catch (error) {\n          console.log(`${endpoint} failed:`, error.message);\n        }\n      }\n      setDebugInfo('No se pudo conectar a ningún endpoint');\n      Alert.alert('Error de Conexión', `No se pudo conectar al servidor en ${API_URL}\\n\\n` + 'Endpoints probados:\\n' + endpoints.join('\\n') + '\\n\\n' + '¿Está el servidor corriendo?');\n      setTasks([]);\n      setStats({\n        completed: 0,\n        pending: 0,\n        progress: 0\n      });\n      setLoading(false);\n    });\n    return function testConnection() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var toggleTaskCompletion = function () {\n    var _ref3 = _asyncToGenerator(function* (taskId, currentStatus) {\n      var endpoint = currentStatus ? 'uncomplete' : 'complete';\n      try {\n        var response = yield fetch(`${API_URL}/tasks/${taskId}/${endpoint}`, {\n          method: 'PUT',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          testConnection();\n        } else {\n          throw new Error(`Error: ${response.status}`);\n        }\n      } catch (error) {\n        console.error('Error updating task:', error);\n        Alert.alert('Error', 'No se pudo actualizar la tarea');\n      }\n    });\n    return function toggleTaskCompletion(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.centerContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#7c3aed\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Cargando tareas...\"\n      }), _jsx(Text, {\n        style: styles.debugText,\n        children: debugInfo\n      }), _jsx(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: function onPress() {\n          setLoading(true);\n          testConnection();\n        },\n        children: _jsx(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar Conexi\\xF3n\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.skipButton,\n        onPress: function onPress() {\n          setLoading(false);\n          setTasks([]);\n        },\n        children: _jsx(Text, {\n          style: styles.skipButtonText,\n          children: \"Continuar Sin Datos\"\n        })\n      })]\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerTitle,\n        children: \"\\uD83E\\uDD16 Cantera de Empresas\"\n      }), _jsxs(Text, {\n        style: styles.welcomeText,\n        children: [\"Bienvenido, \", username || 'Usuario']\n      }), debugInfo && _jsx(Text, {\n        style: styles.debugInfo,\n        children: debugInfo\n      })]\n    }), _jsxs(View, {\n      style: styles.statsContainer,\n      children: [_jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Completadas\"\n        }), _jsx(Text, {\n          style: styles.statValue,\n          children: stats.completed\n        })]\n      }), _jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Pendientes\"\n        }), _jsx(Text, {\n          style: [styles.statValue, {\n            color: '#f97316'\n          }],\n          children: stats.pending\n        })]\n      }), _jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Progreso Total\"\n        }), _jsxs(Text, {\n          style: [styles.statValue, {\n            color: '#7c3aed'\n          }],\n          children: [stats.progress, \"%\"]\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.tasksSection,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: function onPress() {\n          setLoading(true);\n          testConnection();\n        },\n        children: _jsx(Text, {\n          style: styles.refreshButtonText,\n          children: \"\\uD83D\\uDD04 Actualizar\"\n        })\n      }), tasks.length === 0 ? _jsxs(View, {\n        style: styles.emptyState,\n        children: [_jsx(Text, {\n          style: styles.emptyText,\n          children: \"No hay tareas disponibles\"\n        }), _jsx(Text, {\n          style: styles.emptySubtext,\n          children: debugInfo || 'Verifica tu conexión al servidor'\n        })]\n      }) : tasks.map(function (item, index) {\n        var _item$task, _item$task2, _item$task3;\n        return _jsxs(TouchableOpacity, {\n          style: styles.taskCard,\n          onPress: function onPress() {\n            return setSelectedTask(item);\n          },\n          children: [((_item$task = item.task) == null ? void 0 : _item$task.image_path) && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${item.task.image_path}`\n            },\n            style: styles.taskImage,\n            onError: function onError() {\n              return console.log('Error loading image');\n            }\n          }), _jsxs(View, {\n            style: styles.taskInfo,\n            children: [_jsx(Text, {\n              style: styles.taskTitle,\n              children: ((_item$task2 = item.task) == null ? void 0 : _item$task2.title) || item.title || 'Sin título'\n            }), _jsx(Text, {\n              style: styles.taskDescription,\n              children: ((_item$task3 = item.task) == null ? void 0 : _item$task3.description) || item.description || 'Sin descripción'\n            }), _jsx(TouchableOpacity, {\n              style: [styles.taskButton, item.completed && styles.completedButton],\n              onPress: function onPress() {\n                var _item$task4;\n                return toggleTaskCompletion(((_item$task4 = item.task) == null ? void 0 : _item$task4.id) || item.id, item.completed);\n              },\n              children: _jsx(Text, {\n                style: styles.taskButtonText,\n                children: item.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'\n              })\n            })]\n          })]\n        }, item.submission_id || item.id || index);\n      })]\n    }), _jsx(Modal, {\n      visible: selectedTask !== null,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setSelectedTask(null);\n      },\n      children: selectedTask && _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: ((_selectedTask$task = selectedTask.task) == null ? void 0 : _selectedTask$task.title) || selectedTask.title || 'Sin título'\n          }), ((_selectedTask$task2 = selectedTask.task) == null ? void 0 : _selectedTask$task2.image_path) && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${selectedTask.task.image_path}`\n            },\n            style: styles.modalImage,\n            onError: function onError() {\n              return console.log('Error loading modal image');\n            }\n          }), _jsx(Text, {\n            style: styles.modalDescription,\n            children: ((_selectedTask$task3 = selectedTask.task) == null ? void 0 : _selectedTask$task3.description) || selectedTask.description || 'Sin descripción'\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, selectedTask.completed && styles.completedButton],\n            onPress: function onPress() {\n              var _selectedTask$task4;\n              toggleTaskCompletion(((_selectedTask$task4 = selectedTask.task) == null ? void 0 : _selectedTask$task4.id) || selectedTask.id, selectedTask.completed);\n              setSelectedTask(null);\n            },\n            children: _jsx(Text, {\n              style: styles.taskButtonText,\n              children: selectedTask.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.closeButton,\n            onPress: function onPress() {\n              return setSelectedTask(null);\n            },\n            children: _jsx(Text, {\n              style: styles.closeButtonText,\n              children: \"Cerrar\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f3f4f6'\n  },\n  centerContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#6b7280',\n    textAlign: 'center'\n  },\n  debugText: {\n    marginTop: 5,\n    fontSize: 12,\n    color: '#9ca3af',\n    textAlign: 'center'\n  },\n  debugInfo: {\n    fontSize: 12,\n    color: '#9ca3af',\n    marginTop: 5\n  },\n  header: {\n    backgroundColor: 'white',\n    padding: 20,\n    paddingTop: Platform.OS === 'ios' ? 50 : 20\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#7c3aed'\n  },\n  welcomeText: {\n    fontSize: 16,\n    color: '#6b7280',\n    marginTop: 5\n  },\n  statsContainer: {\n    padding: 20,\n    gap: 15\n  },\n  statCard: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 15,\n    elevation: 3\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#6b7280'\n  },\n  statValue: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#10b981'\n  },\n  tasksSection: {\n    padding: 20\n  },\n  refreshButton: {\n    backgroundColor: '#7c3aed',\n    padding: 10,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  refreshButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  emptyState: {\n    backgroundColor: 'white',\n    padding: 40,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#6b7280',\n    marginBottom: 5\n  },\n  emptySubtext: {\n    fontSize: 12,\n    color: '#9ca3af',\n    textAlign: 'center'\n  },\n  taskCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    marginBottom: 15,\n    elevation: 3,\n    overflow: 'hidden'\n  },\n  taskImage: {\n    width: '100%',\n    height: 200\n  },\n  taskInfo: {\n    padding: 15\n  },\n  taskTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  taskDescription: {\n    fontSize: 14,\n    color: '#6b7280',\n    marginBottom: 10\n  },\n  taskButton: {\n    backgroundColor: '#7c3aed',\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  completedButton: {\n    backgroundColor: '#10b981'\n  },\n  taskButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    width: '90%',\n    maxWidth: 500\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 15\n  },\n  modalImage: {\n    width: '100%',\n    height: 300,\n    marginBottom: 15\n  },\n  modalDescription: {\n    fontSize: 16,\n    color: '#4b5563',\n    marginBottom: 20,\n    lineHeight: 24\n  },\n  modalButton: {\n    backgroundColor: '#7c3aed',\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  closeButton: {\n    backgroundColor: '#e5e7eb',\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  closeButtonText: {\n    color: '#6b7280',\n    fontWeight: 'bold'\n  },\n  retryButton: {\n    backgroundColor: '#7c3aed',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 15\n  },\n  retryButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  skipButton: {\n    backgroundColor: '#6b7280',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 10\n  },\n  skipButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default StudentDashboard;","map":{"version":3,"names":["React","useEffect","useState","View","Text","ScrollView","Alert","Modal","TouchableOpacity","Image","ActivityIndicator","StyleSheet","Platform","jsx","_jsx","jsxs","_jsxs","API_URL","StudentDashboard","_ref","_selectedTask$task","_selectedTask$task2","_selectedTask$task3","token","username","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","completed","pending","progress","_useState4","stats","setStats","_useState5","_useState6","loading","setLoading","_useState7","_useState8","selectedTask","setSelectedTask","_useState9","_useState0","debugInfo","setDebugInfo","timeoutId","setTimeout","alert","testConnection","clearTimeout","_ref2","_asyncToGenerator","endpoints","endpoint","console","log","response","fetch","headers","timeout","status","ok","data","json","Array","isArray","filter","t","length","total","Math","round","error","message","join","apply","arguments","toggleTaskCompletion","_ref3","taskId","currentStatus","method","Error","_x","_x2","style","styles","centerContainer","children","size","color","loadingText","debugText","retryButton","onPress","retryButtonText","skipButton","skipButtonText","container","header","headerTitle","welcomeText","statsContainer","statCard","statLabel","statValue","tasksSection","refreshButton","refreshButtonText","emptyState","emptyText","emptySubtext","map","item","index","_item$task","_item$task2","_item$task3","taskCard","task","image_path","source","uri","taskImage","onError","taskInfo","taskTitle","title","taskDescription","description","taskButton","completedButton","_item$task4","id","taskButtonText","submission_id","visible","animationType","transparent","onRequestClose","modalOverlay","modalContent","modalTitle","modalImage","modalDescription","modalButton","_selectedTask$task4","closeButton","closeButtonText","create","flex","backgroundColor","justifyContent","alignItems","padding","marginTop","fontSize","textAlign","paddingTop","OS","fontWeight","gap","borderRadius","marginBottom","elevation","overflow","width","height","maxWidth","lineHeight","paddingHorizontal","paddingVertical"],"sources":["C:/Users/raulv/Desktop/proyectoCantera/webRobotica/frontend-web/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  Alert,\r\n  Modal,\r\n  TouchableOpacity,\r\n  Image,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  Platform\r\n} from 'react-native';\r\n\r\nconst API_URL = 'http://localhost:8000/tasks';\r\n\r\nconst StudentDashboard = ({ token, username }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [stats, setStats] = useState({ completed: 0, pending: 0, progress: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      if (loading) {\r\n        setLoading(false);\r\n        Alert.alert('Timeout', 'La carga está tardando demasiado. Verifica la conexión.');\r\n      }\r\n    }, 15000);\r\n\r\n    testConnection();\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [token]);\r\n\r\n  const testConnection = async () => {\r\n    const endpoints = [\r\n      '/tasks',\r\n    ];\r\n\r\n    for (const endpoint of endpoints) {\r\n      try {\r\n        console.log(`Testing endpoint: ${API_URL}${endpoint}`);\r\n        setDebugInfo(`Probando: ${endpoint}`);\r\n        \r\n        const response = await fetch(`${API_URL}${endpoint}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          timeout: 5000\r\n        });\r\n\r\n        console.log(`${endpoint} - Status:`, response.status);\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log(`${endpoint} - Data:`, data);\r\n          \r\n          setTasks(Array.isArray(data) ? data : []);\r\n          const completed = (Array.isArray(data) ? data : []).filter(t => t.completed).length;\r\n          const total = (Array.isArray(data) ? data : []).length;\r\n          \r\n          setStats({\r\n            completed,\r\n            pending: total - completed,\r\n            progress: total > 0 ? Math.round((completed / total) * 100) : 0\r\n          });\r\n          \r\n          setDebugInfo(`Conectado exitosamente a: ${endpoint}`);\r\n          setLoading(false);\r\n          return; // Exit on first successful connection\r\n        }\r\n      } catch (error) {\r\n        console.log(`${endpoint} failed:`, error.message);\r\n      }\r\n    }\r\n\r\n    // Si ningún endpoint funciona\r\n    setDebugInfo('No se pudo conectar a ningún endpoint');\r\n    Alert.alert(\r\n      'Error de Conexión', \r\n      `No se pudo conectar al servidor en ${API_URL}\\n\\n` +\r\n      'Endpoints probados:\\n' + endpoints.join('\\n') + '\\n\\n' +\r\n      '¿Está el servidor corriendo?'\r\n    );\r\n    setTasks([]);\r\n    setStats({ completed: 0, pending: 0, progress: 0 });\r\n    setLoading(false);\r\n  };\r\n\r\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\r\n    const endpoint = currentStatus ? 'uncomplete' : 'complete';\r\n    try {\r\n      const response = await fetch(`${API_URL}/tasks/${taskId}/${endpoint}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      if (response.ok) {\r\n        testConnection(); // Refresh data\r\n      } else {\r\n        throw new Error(`Error: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n      Alert.alert('Error', 'No se pudo actualizar la tarea');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.centerContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#7c3aed\" />\r\n        <Text style={styles.loadingText}>Cargando tareas...</Text>\r\n        <Text style={styles.debugText}>{debugInfo}</Text>\r\n        <TouchableOpacity \r\n          style={styles.retryButton} \r\n          onPress={() => {\r\n            setLoading(true);\r\n            testConnection();\r\n          }}\r\n        >\r\n          <Text style={styles.retryButtonText}>Reintentar Conexión</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity \r\n          style={styles.skipButton} \r\n          onPress={() => {\r\n            setLoading(false);\r\n            setTasks([]);\r\n          }}\r\n        >\r\n          <Text style={styles.skipButtonText}>Continuar Sin Datos</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>🤖 Cantera de Empresas</Text>\r\n        <Text style={styles.welcomeText}>Bienvenido, {username || 'Usuario'}</Text>\r\n        {debugInfo && <Text style={styles.debugInfo}>{debugInfo}</Text>}\r\n      </View>\r\n\r\n      <View style={styles.statsContainer}>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Completadas</Text>\r\n          <Text style={styles.statValue}>{stats.completed}</Text>\r\n        </View>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Pendientes</Text>\r\n          <Text style={[styles.statValue, { color: '#f97316' }]}>{stats.pending}</Text>\r\n        </View>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Progreso Total</Text>\r\n          <Text style={[styles.statValue, { color: '#7c3aed' }]}>{stats.progress}%</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.tasksSection}>\r\n        <TouchableOpacity \r\n          style={styles.refreshButton} \r\n          onPress={() => {\r\n            setLoading(true);\r\n            testConnection();\r\n          }}\r\n        >\r\n          <Text style={styles.refreshButtonText}>🔄 Actualizar</Text>\r\n        </TouchableOpacity>\r\n\r\n        {tasks.length === 0 ? (\r\n          <View style={styles.emptyState}>\r\n            <Text style={styles.emptyText}>No hay tareas disponibles</Text>\r\n            <Text style={styles.emptySubtext}>\r\n              {debugInfo || 'Verifica tu conexión al servidor'}\r\n            </Text>\r\n          </View>\r\n        ) : (\r\n          tasks.map((item, index) => (\r\n            <TouchableOpacity \r\n              key={item.submission_id || item.id || index} \r\n              style={styles.taskCard} \r\n              onPress={() => setSelectedTask(item)}\r\n            >\r\n              {item.task?.image_path && (\r\n                <Image \r\n                  source={{ uri: `${API_URL}${item.task.image_path}` }} \r\n                  style={styles.taskImage}\r\n                  onError={() => console.log('Error loading image')}\r\n                />\r\n              )}\r\n              <View style={styles.taskInfo}>\r\n                <Text style={styles.taskTitle}>{item.task?.title || item.title || 'Sin título'}</Text>\r\n                <Text style={styles.taskDescription}>{item.task?.description || item.description || 'Sin descripción'}</Text>\r\n                <TouchableOpacity \r\n                  style={[styles.taskButton, item.completed && styles.completedButton]} \r\n                  onPress={() => toggleTaskCompletion(item.task?.id || item.id, item.completed)}\r\n                >\r\n                  <Text style={styles.taskButtonText}>\r\n                    {item.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </TouchableOpacity>\r\n          ))\r\n        )}\r\n      </View>\r\n\r\n      <Modal visible={selectedTask !== null} animationType=\"slide\" transparent={true} onRequestClose={() => setSelectedTask(null)}>\r\n        {selectedTask && (\r\n          <View style={styles.modalOverlay}>\r\n            <View style={styles.modalContent}>\r\n              <Text style={styles.modalTitle}>{selectedTask.task?.title || selectedTask.title || 'Sin título'}</Text>\r\n              {selectedTask.task?.image_path && (\r\n                <Image \r\n                  source={{ uri: `${API_URL}${selectedTask.task.image_path}` }} \r\n                  style={styles.modalImage}\r\n                  onError={() => console.log('Error loading modal image')}\r\n                />\r\n              )}\r\n              <Text style={styles.modalDescription}>{selectedTask.task?.description || selectedTask.description || 'Sin descripción'}</Text>\r\n              <TouchableOpacity \r\n                style={[styles.modalButton, selectedTask.completed && styles.completedButton]} \r\n                onPress={() => {\r\n                  toggleTaskCompletion(selectedTask.task?.id || selectedTask.id, selectedTask.completed);\r\n                  setSelectedTask(null);\r\n                }}\r\n              >\r\n                <Text style={styles.taskButtonText}>\r\n                  {selectedTask.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity \r\n                style={styles.closeButton} \r\n                onPress={() => setSelectedTask(null)}\r\n              >\r\n                <Text style={styles.closeButtonText}>Cerrar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        )}\r\n      </Modal>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#f3f4f6' },\r\n  centerContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', padding: 20 },\r\n  loadingText: { marginTop: 10, fontSize: 16, color: '#6b7280', textAlign: 'center' },\r\n  debugText: { marginTop: 5, fontSize: 12, color: '#9ca3af', textAlign: 'center' },\r\n  debugInfo: { fontSize: 12, color: '#9ca3af', marginTop: 5 },\r\n  header: { backgroundColor: 'white', padding: 20, paddingTop: Platform.OS === 'ios' ? 50 : 20 },\r\n  headerTitle: { fontSize: 24, fontWeight: 'bold', color: '#7c3aed' },\r\n  welcomeText: { fontSize: 16, color: '#6b7280', marginTop: 5 },\r\n  statsContainer: { padding: 20, gap: 15 },\r\n  statCard: { backgroundColor: 'white', padding: 20, borderRadius: 10, marginBottom: 15, elevation: 3 },\r\n  statLabel: { fontSize: 14, color: '#6b7280' },\r\n  statValue: { fontSize: 32, fontWeight: 'bold', color: '#10b981' },\r\n  tasksSection: { padding: 20 },\r\n  refreshButton: { backgroundColor: '#7c3aed', padding: 10, borderRadius: 8, alignItems: 'center', marginBottom: 15 },\r\n  refreshButtonText: { color: 'white', fontWeight: 'bold' },\r\n  emptyState: { backgroundColor: 'white', padding: 40, borderRadius: 10, alignItems: 'center' },\r\n  emptyText: { fontSize: 16, color: '#6b7280', marginBottom: 5 },\r\n  emptySubtext: { fontSize: 12, color: '#9ca3af', textAlign: 'center' },\r\n  taskCard: { backgroundColor: 'white', borderRadius: 10, marginBottom: 15, elevation: 3, overflow: 'hidden' },\r\n  taskImage: { width: '100%', height: 200 },\r\n  taskInfo: { padding: 15 },\r\n  taskTitle: { fontSize: 18, fontWeight: 'bold', marginBottom: 5 },\r\n  taskDescription: { fontSize: 14, color: '#6b7280', marginBottom: 10 },\r\n  taskButton: { backgroundColor: '#7c3aed', padding: 12, borderRadius: 8, alignItems: 'center' },\r\n  completedButton: { backgroundColor: '#10b981' },\r\n  taskButtonText: { color: 'white', fontWeight: 'bold' },\r\n  modalOverlay: { flex: 1, backgroundColor: 'rgba(0, 0, 0, 0.5)', justifyContent: 'center', alignItems: 'center' },\r\n  modalContent: { backgroundColor: 'white', borderRadius: 10, padding: 20, width: '90%', maxWidth: 500 },\r\n  modalTitle: { fontSize: 24, fontWeight: 'bold', marginBottom: 15 },\r\n  modalImage: { width: '100%', height: 300, marginBottom: 15 },\r\n  modalDescription: { fontSize: 16, color: '#4b5563', marginBottom: 20, lineHeight: 24 },\r\n  modalButton: { backgroundColor: '#7c3aed', padding: 15, borderRadius: 8, alignItems: 'center', marginBottom: 10 },\r\n  closeButton: { backgroundColor: '#e5e7eb', padding: 15, borderRadius: 8, alignItems: 'center' },\r\n  closeButtonText: { color: '#6b7280', fontWeight: 'bold' },\r\n  retryButton: { backgroundColor: '#7c3aed', paddingHorizontal: 20, paddingVertical: 10, borderRadius: 8, marginTop: 15 },\r\n  retryButtonText: { color: 'white', fontWeight: 'bold' },\r\n  skipButton: { backgroundColor: '#6b7280', paddingHorizontal: 20, paddingVertical: 10, borderRadius: 8, marginTop: 10 },\r\n  skipButtonText: { color: 'white', fontWeight: 'bold' }\r\n});\r\n\r\nexport default StudentDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}