{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_URL = 'http://localhost:8000';\nvar StudentDashboard = function StudentDashboard(_ref) {\n  var username = _ref.username;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState({\n      completed: 0,\n      pending: 0,\n      progress: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stats = _useState4[0],\n    setStats = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedTask = _useState8[0],\n    setSelectedTask = _useState8[1];\n  var _useState9 = useState(''),\n    _useState0 = _slicedToArray(_useState9, 2),\n    debugInfo = _useState0[0],\n    setDebugInfo = _useState0[1];\n  useEffect(function () {\n    var timeoutId = setTimeout(function () {\n      if (loading) {\n        setLoading(false);\n        Alert.alert('Timeout', 'La carga está tardando demasiado. Verifica la conexión.');\n      }\n    }, 15000);\n    fetchTasks();\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  }, []);\n  var fetchTasks = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setDebugInfo('Cargando tareas generales...');\n        var response = yield fetch(`${API_URL}/tasks`);\n        console.log('/tasks - Status:', response.status);\n        if (response.ok) {\n          var data = yield response.json();\n          console.log('/tasks - Data:', data);\n          setTasks(Array.isArray(data) ? data : []);\n          var total = Array.isArray(data) ? data.length : 0;\n          setStats({\n            completed: 0,\n            pending: total,\n            progress: 0\n          });\n          setDebugInfo('Tareas generales cargadas correctamente');\n          setLoading(false);\n        } else {\n          throw new Error(`Status ${response.status}`);\n        }\n      } catch (error) {\n        console.log('Error fetchTasks:', error.message);\n        setDebugInfo('Error al cargar tareas');\n        Alert.alert('Error', 'No se pudieron cargar las tareas generales.');\n        setLoading(false);\n        setTasks([]);\n        setStats({\n          completed: 0,\n          pending: 0,\n          progress: 0\n        });\n      }\n    });\n    return function fetchTasks() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.centerContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#7c3aed\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Cargando tareas...\"\n      }), _jsx(Text, {\n        style: styles.debugText,\n        children: debugInfo\n      }), _jsx(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: function onPress() {\n          setLoading(true);\n          fetchTasks();\n        },\n        children: _jsx(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar Carga\"\n        })\n      })]\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerTitle,\n        children: \"\\uD83E\\uDD16 Cantera de Empresas\"\n      }), _jsxs(Text, {\n        style: styles.welcomeText,\n        children: [\"Bienvenido, \", username || 'Usuario']\n      }), debugInfo && _jsx(Text, {\n        style: styles.debugInfo,\n        children: debugInfo\n      })]\n    }), _jsx(View, {\n      style: styles.statsContainer,\n      children: _jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Disponibles\"\n        }), _jsx(Text, {\n          style: [styles.statValue, {\n            color: '#f97316'\n          }],\n          children: stats.pending\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.tasksSection,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: function onPress() {\n          setLoading(true);\n          fetchTasks();\n        },\n        children: _jsx(Text, {\n          style: styles.refreshButtonText,\n          children: \"\\uD83D\\uDD04 Actualizar\"\n        })\n      }), tasks.length === 0 ? _jsxs(View, {\n        style: styles.emptyState,\n        children: [_jsx(Text, {\n          style: styles.emptyText,\n          children: \"No hay tareas disponibles\"\n        }), _jsx(Text, {\n          style: styles.emptySubtext,\n          children: debugInfo || 'Verifica tu conexión al servidor'\n        })]\n      }) : tasks.map(function (item, index) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.taskCard,\n          onPress: function onPress() {\n            return setSelectedTask(item);\n          },\n          children: [item.image_path && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${item.image_path}`\n            },\n            style: styles.taskImage,\n            onError: function onError() {\n              return console.log('Error loading image');\n            }\n          }), _jsxs(View, {\n            style: styles.taskInfo,\n            children: [_jsx(Text, {\n              style: styles.taskTitle,\n              children: item.title || 'Sin título'\n            }), _jsx(Text, {\n              style: styles.taskDescription,\n              children: item.description || 'Sin descripción'\n            })]\n          })]\n        }, item.id || index);\n      })]\n    }), _jsx(Modal, {\n      visible: selectedTask !== null,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setSelectedTask(null);\n      },\n      children: selectedTask && _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: selectedTask.title || 'Sin título'\n          }), selectedTask.image_path && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${selectedTask.image_path}`\n            },\n            style: styles.modalImage,\n            onError: function onError() {\n              return console.log('Error loading modal image');\n            }\n          }), _jsx(Text, {\n            style: styles.modalDescription,\n            children: selectedTask.description || 'Sin descripción'\n          }), _jsx(TouchableOpacity, {\n            style: styles.closeButton,\n            onPress: function onPress() {\n              return setSelectedTask(null);\n            },\n            children: _jsx(Text, {\n              style: styles.closeButtonText,\n              children: \"Cerrar\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f3f4f6'\n  },\n  centerContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#6b7280',\n    textAlign: 'center'\n  },\n  debugText: {\n    marginTop: 5,\n    fontSize: 12,\n    color: '#9ca3af',\n    textAlign: 'center'\n  },\n  debugInfo: {\n    fontSize: 12,\n    color: '#9ca3af',\n    marginTop: 5\n  },\n  header: {\n    backgroundColor: 'white',\n    padding: 20,\n    paddingTop: Platform.OS === 'ios' ? 50 : 20\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#7c3aed'\n  },\n  welcomeText: {\n    fontSize: 16,\n    color: '#6b7280',\n    marginTop: 5\n  },\n  statsContainer: {\n    padding: 20,\n    gap: 15\n  },\n  statCard: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 15,\n    elevation: 3\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#6b7280'\n  },\n  statValue: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#f97316'\n  },\n  tasksSection: {\n    padding: 20\n  },\n  refreshButton: {\n    backgroundColor: '#7c3aed',\n    padding: 10,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  refreshButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  emptyState: {\n    backgroundColor: 'white',\n    padding: 40,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#6b7280',\n    marginBottom: 5\n  },\n  emptySubtext: {\n    fontSize: 12,\n    color: '#9ca3af',\n    textAlign: 'center'\n  },\n  taskCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    marginBottom: 15,\n    elevation: 3,\n    overflow: 'hidden'\n  },\n  taskImage: {\n    width: '100%',\n    height: 200\n  },\n  taskInfo: {\n    padding: 15\n  },\n  taskTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  taskDescription: {\n    fontSize: 14,\n    color: '#6b7280',\n    marginBottom: 10\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    width: '90%',\n    maxWidth: 500\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 15\n  },\n  modalImage: {\n    width: '100%',\n    height: 300,\n    marginBottom: 15\n  },\n  modalDescription: {\n    fontSize: 16,\n    color: '#4b5563',\n    marginBottom: 20,\n    lineHeight: 24\n  },\n  closeButton: {\n    backgroundColor: '#e5e7eb',\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  closeButtonText: {\n    color: '#6b7280',\n    fontWeight: 'bold'\n  },\n  retryButton: {\n    backgroundColor: '#7c3aed',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 15\n  },\n  retryButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default StudentDashboard;","map":{"version":3,"names":["React","useEffect","useState","View","Text","ScrollView","Alert","Modal","TouchableOpacity","Image","ActivityIndicator","StyleSheet","Platform","jsx","_jsx","jsxs","_jsxs","API_URL","StudentDashboard","_ref","username","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","completed","pending","progress","_useState4","stats","setStats","_useState5","_useState6","loading","setLoading","_useState7","_useState8","selectedTask","setSelectedTask","_useState9","_useState0","debugInfo","setDebugInfo","timeoutId","setTimeout","alert","fetchTasks","clearTimeout","_ref2","_asyncToGenerator","response","fetch","console","log","status","ok","data","json","Array","isArray","total","length","Error","error","message","apply","arguments","style","styles","centerContainer","children","size","color","loadingText","debugText","retryButton","onPress","retryButtonText","container","header","headerTitle","welcomeText","statsContainer","statCard","statLabel","statValue","tasksSection","refreshButton","refreshButtonText","emptyState","emptyText","emptySubtext","map","item","index","taskCard","image_path","source","uri","taskImage","onError","taskInfo","taskTitle","title","taskDescription","description","id","visible","animationType","transparent","onRequestClose","modalOverlay","modalContent","modalTitle","modalImage","modalDescription","closeButton","closeButtonText","create","flex","backgroundColor","justifyContent","alignItems","padding","marginTop","fontSize","textAlign","paddingTop","OS","fontWeight","gap","borderRadius","marginBottom","elevation","overflow","width","height","maxWidth","lineHeight","paddingHorizontal","paddingVertical"],"sources":["C:/Users/raulv/Desktop/proyectoCantera/webRobotica/frontend-web/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  Alert,\r\n  Modal,\r\n  TouchableOpacity,\r\n  Image,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  Platform\r\n} from 'react-native';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst StudentDashboard = ({ username }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [stats, setStats] = useState({ completed: 0, pending: 0, progress: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      if (loading) {\r\n        setLoading(false);\r\n        Alert.alert('Timeout', 'La carga está tardando demasiado. Verifica la conexión.');\r\n      }\r\n    }, 15000);\r\n\r\n    fetchTasks();\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      setDebugInfo('Cargando tareas generales...');\r\n      // Asumiendo que no es necesario enviar token porque las tareas son públicas\r\n      const response = await fetch(`${API_URL}/tasks`);\r\n\r\n      console.log('/tasks - Status:', response.status);\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('/tasks - Data:', data);\r\n\r\n        // En este caso no hay \"completadas\" ni \"pendientes\" individuales,\r\n        // así que mostramos todas como pendientes (o adaptas según tu lógica)\r\n        setTasks(Array.isArray(data) ? data : []);\r\n        const total = Array.isArray(data) ? data.length : 0;\r\n\r\n        setStats({\r\n          completed: 0, // No trackeamos completadas porque son generales\r\n          pending: total,\r\n          progress: 0,\r\n        });\r\n\r\n        setDebugInfo('Tareas generales cargadas correctamente');\r\n        setLoading(false);\r\n      } else {\r\n        throw new Error(`Status ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error fetchTasks:', error.message);\r\n      setDebugInfo('Error al cargar tareas');\r\n      Alert.alert('Error', 'No se pudieron cargar las tareas generales.');\r\n      setLoading(false);\r\n      setTasks([]);\r\n      setStats({ completed: 0, pending: 0, progress: 0 });\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.centerContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#7c3aed\" />\r\n        <Text style={styles.loadingText}>Cargando tareas...</Text>\r\n        <Text style={styles.debugText}>{debugInfo}</Text>\r\n        <TouchableOpacity \r\n          style={styles.retryButton} \r\n          onPress={() => {\r\n            setLoading(true);\r\n            fetchTasks();\r\n          }}\r\n        >\r\n          <Text style={styles.retryButtonText}>Reintentar Carga</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>🤖 Cantera de Empresas</Text>\r\n        <Text style={styles.welcomeText}>Bienvenido, {username || 'Usuario'}</Text>\r\n        {debugInfo && <Text style={styles.debugInfo}>{debugInfo}</Text>}\r\n      </View>\r\n\r\n      <View style={styles.statsContainer}>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Disponibles</Text>\r\n          <Text style={[styles.statValue, { color: '#f97316' }]}>{stats.pending}</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.tasksSection}>\r\n        <TouchableOpacity \r\n          style={styles.refreshButton} \r\n          onPress={() => {\r\n            setLoading(true);\r\n            fetchTasks();\r\n          }}\r\n        >\r\n          <Text style={styles.refreshButtonText}>🔄 Actualizar</Text>\r\n        </TouchableOpacity>\r\n\r\n        {tasks.length === 0 ? (\r\n          <View style={styles.emptyState}>\r\n            <Text style={styles.emptyText}>No hay tareas disponibles</Text>\r\n            <Text style={styles.emptySubtext}>{debugInfo || 'Verifica tu conexión al servidor'}</Text>\r\n          </View>\r\n        ) : (\r\n          tasks.map((item, index) => (\r\n            <TouchableOpacity \r\n              key={item.id || index} \r\n              style={styles.taskCard} \r\n              onPress={() => setSelectedTask(item)}\r\n            >\r\n              {item.image_path && (\r\n                <Image \r\n                  source={{ uri: `${API_URL}${item.image_path}` }} \r\n                  style={styles.taskImage}\r\n                  onError={() => console.log('Error loading image')}\r\n                />\r\n              )}\r\n              <View style={styles.taskInfo}>\r\n                <Text style={styles.taskTitle}>{item.title || 'Sin título'}</Text>\r\n                <Text style={styles.taskDescription}>{item.description || 'Sin descripción'}</Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          ))\r\n        )}\r\n      </View>\r\n\r\n      <Modal visible={selectedTask !== null} animationType=\"slide\" transparent={true} onRequestClose={() => setSelectedTask(null)}>\r\n        {selectedTask && (\r\n          <View style={styles.modalOverlay}>\r\n            <View style={styles.modalContent}>\r\n              <Text style={styles.modalTitle}>{selectedTask.title || 'Sin título'}</Text>\r\n              {selectedTask.image_path && (\r\n                <Image \r\n                  source={{ uri: `${API_URL}${selectedTask.image_path}` }} \r\n                  style={styles.modalImage}\r\n                  onError={() => console.log('Error loading modal image')}\r\n                />\r\n              )}\r\n              <Text style={styles.modalDescription}>{selectedTask.description || 'Sin descripción'}</Text>\r\n              <TouchableOpacity \r\n                style={styles.closeButton} \r\n                onPress={() => setSelectedTask(null)}\r\n              >\r\n                <Text style={styles.closeButtonText}>Cerrar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        )}\r\n      </Modal>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#f3f4f6' },\r\n  centerContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', padding: 20 },\r\n  loadingText: { marginTop: 10, fontSize: 16, color: '#6b7280', textAlign: 'center' },\r\n  debugText: { marginTop: 5, fontSize: 12, color: '#9ca3af', textAlign: 'center' },\r\n  debugInfo: { fontSize: 12, color: '#9ca3af', marginTop: 5 },\r\n  header: { backgroundColor: 'white', padding: 20, paddingTop: Platform.OS === 'ios' ? 50 : 20 },\r\n  headerTitle: { fontSize: 24, fontWeight: 'bold', color: '#7c3aed' },\r\n  welcomeText: { fontSize: 16, color: '#6b7280', marginTop: 5 },\r\n  statsContainer: { padding: 20, gap: 15 },\r\n  statCard: { backgroundColor: 'white', padding: 20, borderRadius: 10, marginBottom: 15, elevation: 3 },\r\n  statLabel: { fontSize: 14, color: '#6b7280' },\r\n  statValue: { fontSize: 32, fontWeight: 'bold', color: '#f97316' },\r\n  tasksSection: { padding: 20 },\r\n  refreshButton: { backgroundColor: '#7c3aed', padding: 10, borderRadius: 8, alignItems: 'center', marginBottom: 15 },\r\n  refreshButtonText: { color: 'white', fontWeight: 'bold' },\r\n  emptyState: { backgroundColor: 'white', padding: 40, borderRadius: 10, alignItems: 'center' },\r\n  emptyText: { fontSize: 16, color: '#6b7280', marginBottom: 5 },\r\n  emptySubtext: { fontSize: 12, color: '#9ca3af', textAlign: 'center' },\r\n  taskCard: { backgroundColor: 'white', borderRadius: 10, marginBottom: 15, elevation: 3, overflow: 'hidden' },\r\n  taskImage: { width: '100%', height: 200 },\r\n  taskInfo: { padding: 15 },\r\n  taskTitle: { fontSize: 18, fontWeight: 'bold', marginBottom: 5 },\r\n  taskDescription: { fontSize: 14, color: '#6b7280', marginBottom: 10 },\r\n  modalOverlay: { flex: 1, backgroundColor: 'rgba(0, 0, 0, 0.5)', justifyContent: 'center', alignItems: 'center' },\r\n  modalContent: { backgroundColor: 'white', borderRadius: 10, padding: 20, width: '90%', maxWidth: 500 },\r\n  modalTitle: { fontSize: 24, fontWeight: 'bold', marginBottom: 15 },\r\n  modalImage: { width: '100%', height: 300, marginBottom: 15 },\r\n  modalDescription: { fontSize: 16, color: '#4b5563', marginBottom: 20, lineHeight: 24 },\r\n  closeButton: { backgroundColor: '#e5e7eb', padding: 15, borderRadius: 8, alignItems: 'center' },\r\n  closeButtonText: { color: '#6b7280', fontWeight: 'bold' },\r\n  retryButton: { backgroundColor: '#7c3aed', paddingHorizontal: 20, paddingVertical: 10, borderRadius: 8, marginTop: 15 },\r\n  retryButtonText: { color: 'white', fontWeight: 'bold' },\r\n});\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAcnD,IAAMC,OAAO,GAAG,uBAAuB;AAEvC,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAClC,IAAAC,SAAA,GAA0BnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAA0BxB,QAAQ,CAAC;MAAEyB,SAAS,EAAE,CAAC;MAAEC,OAAO,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAE,CAAC,CAAC;IAAAC,UAAA,GAAAP,cAAA,CAAAG,UAAA;IAAtEK,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAA8B/B,QAAQ,CAAC,IAAI,CAAC;IAAAgC,UAAA,GAAAX,cAAA,CAAAU,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAwCnC,QAAQ,CAAC,IAAI,CAAC;IAAAoC,UAAA,GAAAf,cAAA,CAAAc,UAAA;IAA/CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAAkCvC,QAAQ,CAAC,EAAE,CAAC;IAAAwC,UAAA,GAAAnB,cAAA,CAAAkB,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9BzC,SAAS,CAAC,YAAM;IACd,IAAM4C,SAAS,GAAGC,UAAU,CAAC,YAAM;MACjC,IAAIX,OAAO,EAAE;QACXC,UAAU,CAAC,KAAK,CAAC;QACjB9B,KAAK,CAACyC,KAAK,CAAC,SAAS,EAAE,yDAAyD,CAAC;MACnF;IACF,CAAC,EAAE,KAAK,CAAC;IAETC,UAAU,CAAC,CAAC;IAEZ,OAAO;MAAA,OAAMC,YAAY,CAACJ,SAAS,CAAC;IAAA;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,UAAU;IAAA,IAAAE,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC7B,IAAI;QACFP,YAAY,CAAC,8BAA8B,CAAC;QAE5C,IAAMQ,QAAQ,SAASC,KAAK,CAAC,GAAGpC,OAAO,QAAQ,CAAC;QAEhDqC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,MAAM,CAAC;QAEhD,IAAIJ,QAAQ,CAACK,EAAE,EAAE;UACf,IAAMC,IAAI,SAASN,QAAQ,CAACO,IAAI,CAAC,CAAC;UAClCL,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEG,IAAI,CAAC;UAInCjC,QAAQ,CAACmC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC;UACzC,IAAMI,KAAK,GAAGF,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,CAACK,MAAM,GAAG,CAAC;UAEnD/B,QAAQ,CAAC;YACPL,SAAS,EAAE,CAAC;YACZC,OAAO,EAAEkC,KAAK;YACdjC,QAAQ,EAAE;UACZ,CAAC,CAAC;UAEFe,YAAY,CAAC,yCAAyC,CAAC;UACvDR,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,MAAM;UACL,MAAM,IAAI4B,KAAK,CAAC,UAAUZ,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdX,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEU,KAAK,CAACC,OAAO,CAAC;QAC/CtB,YAAY,CAAC,wBAAwB,CAAC;QACtCtC,KAAK,CAACyC,KAAK,CAAC,OAAO,EAAE,6CAA6C,CAAC;QACnEX,UAAU,CAAC,KAAK,CAAC;QACjBX,QAAQ,CAAC,EAAE,CAAC;QACZO,QAAQ,CAAC;UAAEL,SAAS,EAAE,CAAC;UAAEC,OAAO,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC;MACrD;IACF,CAAC;IAAA,gBApCKmB,UAAUA,CAAA;MAAA,OAAAE,KAAA,CAAAiB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAoCf;EAED,IAAIjC,OAAO,EAAE;IACX,OACEnB,KAAA,CAACb,IAAI;MAACkE,KAAK,EAAEC,MAAM,CAACC,eAAgB;MAAAC,QAAA,GAClC1D,IAAA,CAACJ,iBAAiB;QAAC+D,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS,CAAE,CAAC,EAClD5D,IAAA,CAACV,IAAI;QAACiE,KAAK,EAAEC,MAAM,CAACK,WAAY;QAAAH,QAAA,EAAC;MAAkB,CAAM,CAAC,EAC1D1D,IAAA,CAACV,IAAI;QAACiE,KAAK,EAAEC,MAAM,CAACM,SAAU;QAAAJ,QAAA,EAAE7B;MAAS,CAAO,CAAC,EACjD7B,IAAA,CAACN,gBAAgB;QACf6D,KAAK,EAAEC,MAAM,CAACO,WAAY;QAC1BC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;UACb1C,UAAU,CAAC,IAAI,CAAC;UAChBY,UAAU,CAAC,CAAC;QACd,CAAE;QAAAwB,QAAA,EAEF1D,IAAA,CAACV,IAAI;UAACiE,KAAK,EAAEC,MAAM,CAACS,eAAgB;UAAAP,QAAA,EAAC;QAAgB,CAAM;MAAC,CAC5C,CAAC;IAAA,CACf,CAAC;EAEX;EAEA,OACExD,KAAA,CAACX,UAAU;IAACgE,KAAK,EAAEC,MAAM,CAACU,SAAU;IAAAR,QAAA,GAClCxD,KAAA,CAACb,IAAI;MAACkE,KAAK,EAAEC,MAAM,CAACW,MAAO;MAAAT,QAAA,GACzB1D,IAAA,CAACV,IAAI;QAACiE,KAAK,EAAEC,MAAM,CAACY,WAAY;QAAAV,QAAA,EAAC;MAAsB,CAAM,CAAC,EAC9DxD,KAAA,CAACZ,IAAI;QAACiE,KAAK,EAAEC,MAAM,CAACa,WAAY;QAAAX,QAAA,GAAC,cAAY,EAACpD,QAAQ,IAAI,SAAS;MAAA,CAAO,CAAC,EAC1EuB,SAAS,IAAI7B,IAAA,CAACV,IAAI;QAACiE,KAAK,EAAEC,MAAM,CAAC3B,SAAU;QAAA6B,QAAA,EAAE7B;MAAS,CAAO,CAAC;IAAA,CAC3D,CAAC,EAEP7B,IAAA,CAACX,IAAI;MAACkE,KAAK,EAAEC,MAAM,CAACc,cAAe;MAAAZ,QAAA,EACjCxD,KAAA,CAACb,IAAI;QAACkE,KAAK,EAAEC,MAAM,CAACe,QAAS;QAAAb,QAAA,GAC3B1D,IAAA,CAACV,IAAI;UAACiE,KAAK,EAAEC,MAAM,CAACgB,SAAU;UAAAd,QAAA,EAAC;QAAkB,CAAM,CAAC,EACxD1D,IAAA,CAACV,IAAI;UAACiE,KAAK,EAAE,CAACC,MAAM,CAACiB,SAAS,EAAE;YAAEb,KAAK,EAAE;UAAU,CAAC,CAAE;UAAAF,QAAA,EAAEzC,KAAK,CAACH;QAAO,CAAO,CAAC;MAAA,CACzE;IAAC,CACH,CAAC,EAEPZ,KAAA,CAACb,IAAI;MAACkE,KAAK,EAAEC,MAAM,CAACkB,YAAa;MAAAhB,QAAA,GAC/B1D,IAAA,CAACN,gBAAgB;QACf6D,KAAK,EAAEC,MAAM,CAACmB,aAAc;QAC5BX,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;UACb1C,UAAU,CAAC,IAAI,CAAC;UAChBY,UAAU,CAAC,CAAC;QACd,CAAE;QAAAwB,QAAA,EAEF1D,IAAA,CAACV,IAAI;UAACiE,KAAK,EAAEC,MAAM,CAACoB,iBAAkB;UAAAlB,QAAA,EAAC;QAAa,CAAM;MAAC,CAC3C,CAAC,EAElBhD,KAAK,CAACuC,MAAM,KAAK,CAAC,GACjB/C,KAAA,CAACb,IAAI;QAACkE,KAAK,EAAEC,MAAM,CAACqB,UAAW;QAAAnB,QAAA,GAC7B1D,IAAA,CAACV,IAAI;UAACiE,KAAK,EAAEC,MAAM,CAACsB,SAAU;UAAApB,QAAA,EAAC;QAAyB,CAAM,CAAC,EAC/D1D,IAAA,CAACV,IAAI;UAACiE,KAAK,EAAEC,MAAM,CAACuB,YAAa;UAAArB,QAAA,EAAE7B,SAAS,IAAI;QAAkC,CAAO,CAAC;MAAA,CACtF,CAAC,GAEPnB,KAAK,CAACsE,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;QAAA,OACpBhF,KAAA,CAACR,gBAAgB;UAEf6D,KAAK,EAAEC,MAAM,CAAC2B,QAAS;UACvBnB,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQtC,eAAe,CAACuD,IAAI,CAAC;UAAA,CAAC;UAAAvB,QAAA,GAEpCuB,IAAI,CAACG,UAAU,IACdpF,IAAA,CAACL,KAAK;YACJ0F,MAAM,EAAE;cAAEC,GAAG,EAAE,GAAGnF,OAAO,GAAG8E,IAAI,CAACG,UAAU;YAAG,CAAE;YAChD7B,KAAK,EAAEC,MAAM,CAAC+B,SAAU;YACxBC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQhD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;YAAA;UAAC,CACnD,CACF,EACDvC,KAAA,CAACb,IAAI;YAACkE,KAAK,EAAEC,MAAM,CAACiC,QAAS;YAAA/B,QAAA,GAC3B1D,IAAA,CAACV,IAAI;cAACiE,KAAK,EAAEC,MAAM,CAACkC,SAAU;cAAAhC,QAAA,EAAEuB,IAAI,CAACU,KAAK,IAAI;YAAY,CAAO,CAAC,EAClE3F,IAAA,CAACV,IAAI;cAACiE,KAAK,EAAEC,MAAM,CAACoC,eAAgB;cAAAlC,QAAA,EAAEuB,IAAI,CAACY,WAAW,IAAI;YAAiB,CAAO,CAAC;UAAA,CAC/E,CAAC;QAAA,GAdFZ,IAAI,CAACa,EAAE,IAAIZ,KAeA,CAAC;MAAA,CACpB,CACF;IAAA,CACG,CAAC,EAEPlF,IAAA,CAACP,KAAK;MAACsG,OAAO,EAAEtE,YAAY,KAAK,IAAK;MAACuE,aAAa,EAAC,OAAO;MAACC,WAAW,EAAE,IAAK;MAACC,cAAc,EAAE,SAAhBA,cAAcA,CAAA;QAAA,OAAQxE,eAAe,CAAC,IAAI,CAAC;MAAA,CAAC;MAAAgC,QAAA,EACzHjC,YAAY,IACXzB,IAAA,CAACX,IAAI;QAACkE,KAAK,EAAEC,MAAM,CAAC2C,YAAa;QAAAzC,QAAA,EAC/BxD,KAAA,CAACb,IAAI;UAACkE,KAAK,EAAEC,MAAM,CAAC4C,YAAa;UAAA1C,QAAA,GAC/B1D,IAAA,CAACV,IAAI;YAACiE,KAAK,EAAEC,MAAM,CAAC6C,UAAW;YAAA3C,QAAA,EAAEjC,YAAY,CAACkE,KAAK,IAAI;UAAY,CAAO,CAAC,EAC1ElE,YAAY,CAAC2D,UAAU,IACtBpF,IAAA,CAACL,KAAK;YACJ0F,MAAM,EAAE;cAAEC,GAAG,EAAE,GAAGnF,OAAO,GAAGsB,YAAY,CAAC2D,UAAU;YAAG,CAAE;YACxD7B,KAAK,EAAEC,MAAM,CAAC8C,UAAW;YACzBd,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQhD,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;YAAA;UAAC,CACzD,CACF,EACDzC,IAAA,CAACV,IAAI;YAACiE,KAAK,EAAEC,MAAM,CAAC+C,gBAAiB;YAAA7C,QAAA,EAAEjC,YAAY,CAACoE,WAAW,IAAI;UAAiB,CAAO,CAAC,EAC5F7F,IAAA,CAACN,gBAAgB;YACf6D,KAAK,EAAEC,MAAM,CAACgD,WAAY;YAC1BxC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQtC,eAAe,CAAC,IAAI,CAAC;YAAA,CAAC;YAAAgC,QAAA,EAErC1D,IAAA,CAACV,IAAI;cAACiE,KAAK,EAAEC,MAAM,CAACiD,eAAgB;cAAA/C,QAAA,EAAC;YAAM,CAAM;UAAC,CAClC,CAAC;QAAA,CACf;MAAC,CACH;IACP,CACI,CAAC;EAAA,CACE,CAAC;AAEjB,CAAC;AAED,IAAMF,MAAM,GAAG3D,UAAU,CAAC6G,MAAM,CAAC;EAC/BxC,SAAS,EAAE;IAAEyC,IAAI,EAAE,CAAC;IAAEC,eAAe,EAAE;EAAU,CAAC;EAClDnD,eAAe,EAAE;IAAEkD,IAAI,EAAE,CAAC;IAAEE,cAAc,EAAE,QAAQ;IAAEC,UAAU,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAG,CAAC;EACzFlD,WAAW,EAAE;IAAEmD,SAAS,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAErD,KAAK,EAAE,SAAS;IAAEsD,SAAS,EAAE;EAAS,CAAC;EACnFpD,SAAS,EAAE;IAAEkD,SAAS,EAAE,CAAC;IAAEC,QAAQ,EAAE,EAAE;IAAErD,KAAK,EAAE,SAAS;IAAEsD,SAAS,EAAE;EAAS,CAAC;EAChFrF,SAAS,EAAE;IAAEoF,QAAQ,EAAE,EAAE;IAAErD,KAAK,EAAE,SAAS;IAAEoD,SAAS,EAAE;EAAE,CAAC;EAC3D7C,MAAM,EAAE;IAAEyC,eAAe,EAAE,OAAO;IAAEG,OAAO,EAAE,EAAE;IAAEI,UAAU,EAAErH,QAAQ,CAACsH,EAAE,KAAK,KAAK,GAAG,EAAE,GAAG;EAAG,CAAC;EAC9FhD,WAAW,EAAE;IAAE6C,QAAQ,EAAE,EAAE;IAAEI,UAAU,EAAE,MAAM;IAAEzD,KAAK,EAAE;EAAU,CAAC;EACnES,WAAW,EAAE;IAAE4C,QAAQ,EAAE,EAAE;IAAErD,KAAK,EAAE,SAAS;IAAEoD,SAAS,EAAE;EAAE,CAAC;EAC7D1C,cAAc,EAAE;IAAEyC,OAAO,EAAE,EAAE;IAAEO,GAAG,EAAE;EAAG,CAAC;EACxC/C,QAAQ,EAAE;IAAEqC,eAAe,EAAE,OAAO;IAAEG,OAAO,EAAE,EAAE;IAAEQ,YAAY,EAAE,EAAE;IAAEC,YAAY,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAE,CAAC;EACrGjD,SAAS,EAAE;IAAEyC,QAAQ,EAAE,EAAE;IAAErD,KAAK,EAAE;EAAU,CAAC;EAC7Ca,SAAS,EAAE;IAAEwC,QAAQ,EAAE,EAAE;IAAEI,UAAU,EAAE,MAAM;IAAEzD,KAAK,EAAE;EAAU,CAAC;EACjEc,YAAY,EAAE;IAAEqC,OAAO,EAAE;EAAG,CAAC;EAC7BpC,aAAa,EAAE;IAAEiC,eAAe,EAAE,SAAS;IAAEG,OAAO,EAAE,EAAE;IAAEQ,YAAY,EAAE,CAAC;IAAET,UAAU,EAAE,QAAQ;IAAEU,YAAY,EAAE;EAAG,CAAC;EACnH5C,iBAAiB,EAAE;IAAEhB,KAAK,EAAE,OAAO;IAAEyD,UAAU,EAAE;EAAO,CAAC;EACzDxC,UAAU,EAAE;IAAE+B,eAAe,EAAE,OAAO;IAAEG,OAAO,EAAE,EAAE;IAAEQ,YAAY,EAAE,EAAE;IAAET,UAAU,EAAE;EAAS,CAAC;EAC7FhC,SAAS,EAAE;IAAEmC,QAAQ,EAAE,EAAE;IAAErD,KAAK,EAAE,SAAS;IAAE4D,YAAY,EAAE;EAAE,CAAC;EAC9DzC,YAAY,EAAE;IAAEkC,QAAQ,EAAE,EAAE;IAAErD,KAAK,EAAE,SAAS;IAAEsD,SAAS,EAAE;EAAS,CAAC;EACrE/B,QAAQ,EAAE;IAAEyB,eAAe,EAAE,OAAO;IAAEW,YAAY,EAAE,EAAE;IAAEC,YAAY,EAAE,EAAE;IAAEC,SAAS,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAS,CAAC;EAC5GnC,SAAS,EAAE;IAAEoC,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAI,CAAC;EACzCnC,QAAQ,EAAE;IAAEsB,OAAO,EAAE;EAAG,CAAC;EACzBrB,SAAS,EAAE;IAAEuB,QAAQ,EAAE,EAAE;IAAEI,UAAU,EAAE,MAAM;IAAEG,YAAY,EAAE;EAAE,CAAC;EAChE5B,eAAe,EAAE;IAAEqB,QAAQ,EAAE,EAAE;IAAErD,KAAK,EAAE,SAAS;IAAE4D,YAAY,EAAE;EAAG,CAAC;EACrErB,YAAY,EAAE;IAAEQ,IAAI,EAAE,CAAC;IAAEC,eAAe,EAAE,oBAAoB;IAAEC,cAAc,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAS,CAAC;EAChHV,YAAY,EAAE;IAAEQ,eAAe,EAAE,OAAO;IAAEW,YAAY,EAAE,EAAE;IAAER,OAAO,EAAE,EAAE;IAAEY,KAAK,EAAE,KAAK;IAAEE,QAAQ,EAAE;EAAI,CAAC;EACtGxB,UAAU,EAAE;IAAEY,QAAQ,EAAE,EAAE;IAAEI,UAAU,EAAE,MAAM;IAAEG,YAAY,EAAE;EAAG,CAAC;EAClElB,UAAU,EAAE;IAAEqB,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE,GAAG;IAAEJ,YAAY,EAAE;EAAG,CAAC;EAC5DjB,gBAAgB,EAAE;IAAEU,QAAQ,EAAE,EAAE;IAAErD,KAAK,EAAE,SAAS;IAAE4D,YAAY,EAAE,EAAE;IAAEM,UAAU,EAAE;EAAG,CAAC;EACtFtB,WAAW,EAAE;IAAEI,eAAe,EAAE,SAAS;IAAEG,OAAO,EAAE,EAAE;IAAEQ,YAAY,EAAE,CAAC;IAAET,UAAU,EAAE;EAAS,CAAC;EAC/FL,eAAe,EAAE;IAAE7C,KAAK,EAAE,SAAS;IAAEyD,UAAU,EAAE;EAAO,CAAC;EACzDtD,WAAW,EAAE;IAAE6C,eAAe,EAAE,SAAS;IAAEmB,iBAAiB,EAAE,EAAE;IAAEC,eAAe,EAAE,EAAE;IAAET,YAAY,EAAE,CAAC;IAAEP,SAAS,EAAE;EAAG,CAAC;EACvH/C,eAAe,EAAE;IAAEL,KAAK,EAAE,OAAO;IAAEyD,UAAU,EAAE;EAAO;AACxD,CAAC,CAAC;AAEF,eAAejH,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}