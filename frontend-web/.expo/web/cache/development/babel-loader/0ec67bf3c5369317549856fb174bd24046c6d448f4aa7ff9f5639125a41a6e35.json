{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_BASE_URL = 'http://localhost:8000';\nexport default function LoginScreen(_ref) {\n  var onLoginSuccess = _ref.onLoginSuccess;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  function handleLogin() {\n    return _handleLogin.apply(this, arguments);\n  }\n  function _handleLogin() {\n    _handleLogin = _asyncToGenerator(function* () {\n      if (!username || !password) {\n        Alert.alert('Error', 'Completa todos los campos');\n        return;\n      }\n      setLoading(true);\n      try {\n        var formData = new FormData();\n        formData.append('username', username);\n        formData.append('password', password);\n        var response = yield fetch(`${API_BASE_URL}/login`, {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          onLoginSuccess(data.access_token);\n        } else {\n          var errorData = yield response.json();\n          Alert.alert('Error', errorData.detail || 'Error de login');\n        }\n      } catch (e) {\n        Alert.alert('Error', 'Error de conexión');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return _handleLogin.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"Usuario\",\n      value: username,\n      onChangeText: setUsername,\n      style: styles.input,\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      placeholder: \"Contrase\\xF1a\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true,\n      style: styles.input\n    }), _jsx(Button, {\n      title: loading ? 'Cargando...' : 'Iniciar Sesión',\n      onPress: handleLogin,\n      disabled: loading\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    paddingHorizontal: 8\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","Alert","StyleSheet","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","LoginScreen","_ref","onLoginSuccess","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","handleLogin","_handleLogin","apply","arguments","_asyncToGenerator","alert","formData","FormData","append","response","fetch","method","body","ok","data","json","access_token","errorData","detail","e","style","styles","container","children","placeholder","value","onChangeText","input","autoCapitalize","secureTextEntry","title","onPress","disabled","create","padding","height","borderColor","borderWidth","marginBottom","paddingHorizontal"],"sources":["C:/Users/borji/Desktop/appPython/webRobotica/frontend-web/LoginScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, Text, Alert, StyleSheet } from 'react-native';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000';\r\n\r\nexport default function LoginScreen({ onLoginSuccess }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function handleLogin() {\r\n    if (!username || !password) {\r\n      Alert.alert('Error', 'Completa todos los campos');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('username', username);\r\n      formData.append('password', password);\r\n\r\n      const response = await fetch(`${API_BASE_URL}/login`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        onLoginSuccess(data.access_token);\r\n      } else {\r\n        const errorData = await response.json();\r\n        Alert.alert('Error', errorData.detail || 'Error de login');\r\n      }\r\n    } catch (e) {\r\n      Alert.alert('Error', 'Error de conexión');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        placeholder=\"Usuario\"\r\n        value={username}\r\n        onChangeText={setUsername}\r\n        style={styles.input}\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TextInput\r\n        placeholder=\"Contraseña\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n        style={styles.input}\r\n      />\r\n      <Button title={loading ? 'Cargando...' : 'Iniciar Sesión'} onPress={handleLogin} disabled={loading} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { padding: 20 },\r\n  input: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 12,\r\n    paddingHorizontal: 8,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}