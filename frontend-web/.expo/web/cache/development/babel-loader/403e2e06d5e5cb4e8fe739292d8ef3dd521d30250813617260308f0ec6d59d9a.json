{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar API_URL = 'http://localhost:8000';\nexport var login = function () {\n  var _ref = _asyncToGenerator(function* (username, password) {\n    try {\n      console.log('Attempting login for:', username);\n      var response = yield fetch(`${API_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          username: username,\n          password: password\n        })\n      });\n      console.log('Login response status:', response.status);\n      if (!response.ok) {\n        var errorData = yield response.json();\n        console.log('Login error:', errorData);\n        throw new Error(errorData.detail || 'Error de autenticación');\n      }\n      var userData = yield response.json();\n      console.log('Login successful, user data:', userData);\n      var userRole = userData.role || 'student';\n      var userName = userData.username || username;\n      yield AsyncStorage.setItem('user_role', userRole);\n      yield AsyncStorage.setItem('username', userName);\n      console.log('User role and username saved:', userRole, userName);\n      return {\n        username: userName,\n        role: userRole\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  });\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var logout = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      yield AsyncStorage.multiRemove(['user_role', 'username']);\n      console.log('Logout successful - user data removed');\n    } catch (error) {\n      console.error('Logout error:', error);\n      throw error;\n    }\n  });\n  return function logout() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getStoredAuth = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    try {\n      var role = yield AsyncStorage.getItem('user_role');\n      var username = yield AsyncStorage.getItem('username');\n      return {\n        role: role,\n        username: username\n      };\n    } catch (error) {\n      console.error('Error getting stored auth:', error);\n      return {\n        role: null,\n        username: null\n      };\n    }\n  });\n  return function getStoredAuth() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["AsyncStorage","API_URL","login","_ref","_asyncToGenerator","username","password","console","log","response","fetch","method","headers","body","URLSearchParams","status","ok","errorData","json","Error","detail","userData","userRole","role","userName","setItem","error","_x","_x2","apply","arguments","logout","_ref2","multiRemove","getStoredAuth","_ref3","getItem"],"sources":["C:/Users/raulv/Desktop/proyectoCantera/webRobotica/frontend-web/auth.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nexport const login = async (username, password) => {\r\n  try {\r\n    console.log('Attempting login for:', username);\r\n    \r\n    const response = await fetch(`${API_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: new URLSearchParams({\r\n        username: username,\r\n        password: password\r\n      })\r\n    });\r\n\r\n    console.log('Login response status:', response.status);\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      console.log('Login error:', errorData);\r\n      throw new Error(errorData.detail || 'Error de autenticación');\r\n    }\r\n\r\n    const userData = await response.json();\r\n    console.log('Login successful, user data:', userData);\r\n\r\n    // Asumiendo que la respuesta ya contiene username y role directamente\r\n    const userRole = userData.role || 'student';\r\n    const userName = userData.username || username;\r\n\r\n    // Guardar solo rol y username\r\n    await AsyncStorage.setItem('user_role', userRole);\r\n    await AsyncStorage.setItem('username', userName);\r\n\r\n    console.log('User role and username saved:', userRole, userName);\r\n\r\n    return {\r\n      username: userName,\r\n      role: userRole\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    await AsyncStorage.multiRemove(['user_role', 'username']);\r\n    console.log('Logout successful - user data removed');\r\n  } catch (error) {\r\n    console.error('Logout error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getStoredAuth = async () => {\r\n  try {\r\n    const role = await AsyncStorage.getItem('user_role');\r\n    const username = await AsyncStorage.getItem('username');\r\n    \r\n    return {\r\n      role,\r\n      username\r\n    };\r\n  } catch (error) {\r\n    console.error('Error getting stored auth:', error);\r\n    return {\r\n      role: null,\r\n      username: null\r\n    };\r\n  }\r\n};\r\n"],"mappings":";AAAA,OAAOA,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,OAAO,GAAG,uBAAuB;AAEvC,OAAO,IAAMC,KAAK;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,QAAQ,EAAEC,QAAQ,EAAK;IACjD,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,QAAQ,CAAC;MAE9C,IAAMI,QAAQ,SAASC,KAAK,CAAC,GAAGT,OAAO,QAAQ,EAAE;QAC/CU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAE,IAAIC,eAAe,CAAC;UACxBT,QAAQ,EAAEA,QAAQ;UAClBC,QAAQ,EAAEA;QACZ,CAAC;MACH,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,QAAQ,CAACM,MAAM,CAAC;MAEtD,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChB,IAAMC,SAAS,SAASR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvCX,OAAO,CAACC,GAAG,CAAC,cAAc,EAAES,SAAS,CAAC;QACtC,MAAM,IAAIE,KAAK,CAACF,SAAS,CAACG,MAAM,IAAI,wBAAwB,CAAC;MAC/D;MAEA,IAAMC,QAAQ,SAASZ,QAAQ,CAACS,IAAI,CAAC,CAAC;MACtCX,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEa,QAAQ,CAAC;MAGrD,IAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAI,IAAI,SAAS;MAC3C,IAAMC,QAAQ,GAAGH,QAAQ,CAAChB,QAAQ,IAAIA,QAAQ;MAG9C,MAAML,YAAY,CAACyB,OAAO,CAAC,WAAW,EAAEH,QAAQ,CAAC;MACjD,MAAMtB,YAAY,CAACyB,OAAO,CAAC,UAAU,EAAED,QAAQ,CAAC;MAEhDjB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEc,QAAQ,EAAEE,QAAQ,CAAC;MAEhE,OAAO;QACLnB,QAAQ,EAAEmB,QAAQ;QAClBD,IAAI,EAAED;MACR,CAAC;IAEH,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBA7CYxB,KAAKA,CAAAyB,EAAA,EAAAC,GAAA;IAAA,OAAAzB,IAAA,CAAA0B,KAAA,OAAAC,SAAA;EAAA;AAAA,GA6CjB;AAED,OAAO,IAAMC,MAAM;EAAA,IAAAC,KAAA,GAAA5B,iBAAA,CAAG,aAAY;IAChC,IAAI;MACF,MAAMJ,YAAY,CAACiC,WAAW,CAAC,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;MACzD1B,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACtD,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBARYK,MAAMA,CAAA;IAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAQlB;AAED,OAAO,IAAMI,aAAa;EAAA,IAAAC,KAAA,GAAA/B,iBAAA,CAAG,aAAY;IACvC,IAAI;MACF,IAAMmB,IAAI,SAASvB,YAAY,CAACoC,OAAO,CAAC,WAAW,CAAC;MACpD,IAAM/B,QAAQ,SAASL,YAAY,CAACoC,OAAO,CAAC,UAAU,CAAC;MAEvD,OAAO;QACLb,IAAI,EAAJA,IAAI;QACJlB,QAAQ,EAARA;MACF,CAAC;IACH,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO;QACLH,IAAI,EAAE,IAAI;QACVlB,QAAQ,EAAE;MACZ,CAAC;IACH;EACF,CAAC;EAAA,gBAhBY6B,aAAaA,CAAA;IAAA,OAAAC,KAAA,CAAAN,KAAA,OAAAC,SAAA;EAAA;AAAA,GAgBzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}