{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmPassword = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var handleRegister = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email || !username || !password || !confirmPassword) {\n        Alert.alert('Error', 'Por favor completa todos los campos');\n        return;\n      }\n      if (password !== confirmPassword) {\n        Alert.alert('Error', 'Las contraseñas no coinciden');\n        return;\n      }\n      try {\n        var response = yield fetch('http://localhost:8000', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email,\n            username: username,\n            password: password,\n            is_admin: false\n          })\n        });\n        if (!response.ok) {\n          var data = yield response.json();\n          Alert.alert('Error', data.detail || 'Error en el registro');\n          return;\n        }\n        Alert.alert('Registro exitoso', `Usuario registrado: ${email}`);\n        navigation.navigate('Login');\n      } catch (error) {\n        Alert.alert('Error', 'No se pudo conectar con el servidor');\n        console.error(error);\n      }\n    });\n    return function handleRegister() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Registrarse\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Correo electr\\xF3nico\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nombre de usuario\",\n      value: username,\n      onChangeText: setUsername,\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Contrase\\xF1a\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirmar contrase\\xF1a\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Registrar\",\n      onPress: handleRegister\n    }), _jsx(Text, {\n      style: styles.link,\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      children: \"\\xBFYa tienes cuenta? Inicia sesi\\xF3n\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    marginBottom: 15,\n    borderRadius: 5\n  },\n  link: {\n    marginTop: 15,\n    color: 'blue',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","Alert","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","username","setUsername","_useState5","_useState6","password","setPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","handleRegister","_ref2","_asyncToGenerator","alert","response","fetch","method","headers","body","JSON","stringify","is_admin","ok","data","json","detail","navigate","error","console","apply","arguments","style","styles","container","children","title","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","secureTextEntry","onPress","link","create","flex","justifyContent","padding","fontSize","marginBottom","textAlign","borderWidth","borderColor","borderRadius","marginTop","color"],"sources":["C:/Users/raulv/Desktop/webRobotica/frontend-web/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet, Alert } from 'react-native';\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const handleRegister = async () => {\r\n    if (!email || !username || !password || !confirmPassword) {\r\n      Alert.alert('Error', 'Por favor completa todos los campos');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      Alert.alert('Error', 'Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          email,\r\n          username,\r\n          password,\r\n          is_admin: false  // asumiendo que no registras admins desde esta pantalla\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        Alert.alert('Error', data.detail || 'Error en el registro');\r\n        return;\r\n      }\r\n\r\n      Alert.alert('Registro exitoso', `Usuario registrado: ${email}`);\r\n      navigation.navigate('Login');\r\n    } catch (error) {\r\n      Alert.alert('Error', 'No se pudo conectar con el servidor');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Registrarse</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Correo electrónico\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        keyboardType=\"email-address\"\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nombre de usuario\"\r\n        value={username}\r\n        onChangeText={setUsername}\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Contraseña\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Confirmar contraseña\"\r\n        value={confirmPassword}\r\n        onChangeText={setConfirmPassword}\r\n        secureTextEntry\r\n      />\r\n      <Button title=\"Registrar\" onPress={handleRegister} />\r\n      <Text style={styles.link} onPress={() => navigation.navigate('Login')}>\r\n        ¿Ya tienes cuenta? Inicia sesión\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, justifyContent: 'center', padding: 20 },\r\n  title: { fontSize: 24, marginBottom: 20, textAlign: 'center' },\r\n  input: { borderWidth: 1, borderColor: '#ccc', padding: 10, marginBottom: 15, borderRadius: 5 },\r\n  link: { marginTop: 15, color: 'blue', textAlign: 'center' },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}