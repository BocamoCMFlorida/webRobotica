{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_URL = 'http://localhost:8000';\nvar StudentDashboard = function StudentDashboard(_ref) {\n  var username = _ref.username,\n    userId = _ref.userId,\n    navigation = _ref.navigation,\n    onLogout = _ref.onLogout;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState({\n      completed: 0,\n      pending: 0,\n      progress: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stats = _useState4[0],\n    setStats = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedTask = _useState8[0],\n    setSelectedTask = _useState8[1];\n  var _useState9 = useState(''),\n    _useState0 = _slicedToArray(_useState9, 2),\n    debugInfo = _useState0[0],\n    setDebugInfo = _useState0[1];\n  useEffect(function () {\n    var timeoutId = setTimeout(function () {\n      if (loading) {\n        setLoading(false);\n        Alert.alert('Timeout', 'La carga está tardando demasiado. Verifica la conexión.');\n      }\n    }, 15000);\n    fetchUserTasks();\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  }, []);\n  var fetchUserTasks = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setDebugInfo('Obteniendo tareas del usuario...');\n        var response = yield fetch(`${API_URL}/users/${userId}/tasks`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) throw new Error(`Status: ${response.status}`);\n        var userTaskCompletions = yield response.json();\n        var tasksResponse = yield fetch(`${API_URL}/tasks`);\n        var allTasks = yield tasksResponse.json();\n        var tasksWithStatus = userTaskCompletions.map(function (completion) {\n          var taskInfo = allTasks.find(function (t) {\n            return t.id === completion.task_id;\n          });\n          return _objectSpread(_objectSpread({}, taskInfo), {}, {\n            completed: completion.completed,\n            completed_at: completion.completed_at,\n            notes: completion.notes,\n            completion_id: completion.id\n          });\n        });\n        var completed = tasksWithStatus.filter(function (t) {\n          return t.completed;\n        }).length;\n        var total = tasksWithStatus.length;\n        setTasks(tasksWithStatus);\n        setStats({\n          completed: completed,\n          pending: total - completed,\n          progress: total > 0 ? Math.round(completed / total * 100) : 0\n        });\n        setDebugInfo('Tareas cargadas correctamente.');\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al obtener tareas:', error);\n        setDebugInfo('No se pudieron cargar las tareas.');\n        Alert.alert('Error', 'No se pudo conectar al servidor o cargar las tareas.');\n        setTasks([]);\n        setStats({\n          completed: 0,\n          pending: 0,\n          progress: 0\n        });\n        setLoading(false);\n      }\n    });\n    return function fetchUserTasks() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var toggleTaskCompletion = function () {\n    var _ref3 = _asyncToGenerator(function* (taskId, currentStatus) {\n      var endpoint = currentStatus ? 'uncomplete' : 'complete';\n      try {\n        var formData = new FormData();\n        formData.append('user_id', userId.toString());\n        var response = yield fetch(`${API_URL}/tasks/${taskId}/${endpoint}`, {\n          method: 'PUT',\n          body: formData\n        });\n        if (response.ok) {\n          setTasks(function (prevTasks) {\n            return prevTasks.map(function (task) {\n              return task.id === taskId ? _objectSpread(_objectSpread({}, task), {}, {\n                completed: !currentStatus\n              }) : task;\n            });\n          });\n          var updatedTasks = tasks.map(function (task) {\n            return task.id === taskId ? _objectSpread(_objectSpread({}, task), {}, {\n              completed: !currentStatus\n            }) : task;\n          });\n          var completed = updatedTasks.filter(function (t) {\n            return t.completed;\n          }).length;\n          var total = updatedTasks.length;\n          setStats({\n            completed: completed,\n            pending: total - completed,\n            progress: total > 0 ? Math.round(completed / total * 100) : 0\n          });\n          fetchUserTasks();\n        } else {\n          throw new Error(`Error: ${response.status}`);\n        }\n      } catch (error) {\n        console.error('Error updating task:', error);\n        Alert.alert('Error', 'No se pudo actualizar la tarea');\n        fetchUserTasks();\n      }\n    });\n    return function toggleTaskCompletion(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function handleLogout() {\n    Alert.alert('Cerrar Sesión', '¿Estás seguro de que quieres cerrar sesión?', [{\n      text: 'Cancelar',\n      style: 'cancel'\n    }, {\n      text: 'Cerrar Sesión',\n      style: 'destructive',\n      onPress: function () {\n        var _onPress = _asyncToGenerator(function* () {\n          try {\n            yield onLogout();\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'Login'\n              }]\n            });\n          } catch (error) {\n            Alert.alert('Error', 'No se pudo cerrar sesión correctamente.');\n          }\n        });\n        function onPress() {\n          return _onPress.apply(this, arguments);\n        }\n        return onPress;\n      }()\n    }]);\n  };\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.centerContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#7c3aed\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Cargando tareas...\"\n      }), _jsx(Text, {\n        style: styles.debugText,\n        children: debugInfo\n      }), _jsx(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: function onPress() {\n          setLoading(true);\n          fetchUserTasks();\n        },\n        children: _jsx(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar Conexi\\xF3n\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.skipButton,\n        onPress: function onPress() {\n          setLoading(false);\n          setTasks([]);\n        },\n        children: _jsx(Text, {\n          style: styles.skipButtonText,\n          children: \"Continuar Sin Datos\"\n        })\n      })]\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsxs(View, {\n        style: styles.headerTop,\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.headerTitle,\n            children: \"\\uD83E\\uDD16 Cantera de Empresas\"\n          }), _jsxs(Text, {\n            style: styles.welcomeText,\n            children: [\"Bienvenido, \", username || 'Usuario']\n          }), debugInfo ? _jsx(Text, {\n            style: styles.debugInfo,\n            children: debugInfo\n          }) : null]\n        }), _jsx(TouchableOpacity, {\n          style: styles.logoutButton,\n          onPress: handleLogout,\n          children: _jsx(Text, {\n            style: styles.logoutButtonText,\n            children: \"\\uD83D\\uDEAA Cerrar Sesi\\xF3n\"\n          })\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.statsContainer,\n      children: [_jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Completadas\"\n        }), _jsx(Text, {\n          style: styles.statValue,\n          children: stats.completed\n        })]\n      }), _jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Pendientes\"\n        }), _jsx(Text, {\n          style: [styles.statValue, {\n            color: '#f97316'\n          }],\n          children: stats.pending\n        })]\n      }), _jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Progreso Total\"\n        }), _jsxs(Text, {\n          style: [styles.statValue, {\n            color: '#7c3aed'\n          }],\n          children: [stats.progress, \"%\"]\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.tasksSection,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: function onPress() {\n          setLoading(true);\n          fetchUserTasks();\n        },\n        children: _jsx(Text, {\n          style: styles.refreshButtonText,\n          children: \"\\uD83D\\uDD04 Actualizar\"\n        })\n      }), tasks.length === 0 ? _jsxs(View, {\n        style: styles.emptyState,\n        children: [_jsx(Text, {\n          style: styles.emptyText,\n          children: \"No hay tareas disponibles\"\n        }), _jsx(Text, {\n          style: styles.emptySubtext,\n          children: debugInfo || 'Verifica tu conexión al servidor'\n        })]\n      }) : tasks.map(function (item) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.taskCard,\n          onPress: function onPress() {\n            return setSelectedTask(item);\n          },\n          children: [item.image_path && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${item.image_path}`\n            },\n            style: styles.taskImage\n          }), _jsxs(View, {\n            style: styles.taskInfo,\n            children: [_jsx(Text, {\n              style: styles.taskTitle,\n              children: item.title\n            }), _jsx(Text, {\n              style: styles.taskDescription,\n              children: item.description\n            }), _jsx(TouchableOpacity, {\n              style: [styles.taskButton, item.completed && styles.completedButton],\n              onPress: function onPress() {\n                return toggleTaskCompletion(item.id, item.completed);\n              },\n              children: _jsx(Text, {\n                style: styles.taskButtonText,\n                children: item.completed ? '✓ Completada' : 'Marcar como Completada'\n              })\n            }), item.completed && item.completed_at && _jsxs(Text, {\n              style: styles.completedDate,\n              children: [\"Completada el: \", new Date(item.completed_at).toLocaleDateString()]\n            })]\n          })]\n        }, item.id);\n      })]\n    }), _jsx(Modal, {\n      visible: selectedTask !== null,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setSelectedTask(null);\n      },\n      children: selectedTask && _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: selectedTask.title\n          }), selectedTask.image_path && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${selectedTask.image_path}`\n            },\n            style: styles.modalImage\n          }), _jsx(Text, {\n            style: styles.modalDescription,\n            children: selectedTask.description\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, selectedTask.completed && styles.completedButton],\n            onPress: function onPress() {\n              toggleTaskCompletion(selectedTask.id, selectedTask.completed);\n              setSelectedTask(null);\n            },\n            children: _jsx(Text, {\n              style: styles.taskButtonText,\n              children: selectedTask.completed ? '✓ Completada' : 'Marcar como Completada'\n            })\n          }), selectedTask.completed && selectedTask.completed_at && _jsxs(Text, {\n            style: styles.completedDateModal,\n            children: [\"Completada el: \", new Date(selectedTask.completed_at).toLocaleDateString()]\n          }), _jsx(TouchableOpacity, {\n            style: styles.closeButton,\n            onPress: function onPress() {\n              return setSelectedTask(null);\n            },\n            children: _jsx(Text, {\n              style: styles.closeButtonText,\n              children: \"Cerrar\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f3f4f6'\n  },\n  centerContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#6b7280',\n    textAlign: 'center'\n  },\n  debugText: {\n    marginTop: 5,\n    fontSize: 12,\n    color: '#9ca3af',\n    textAlign: 'center'\n  },\n  debugInfo: {\n    fontSize: 12,\n    color: '#9ca3af',\n    marginTop: 5\n  },\n  header: {\n    backgroundColor: 'white',\n    padding: 20,\n    paddingTop: Platform.OS === 'ios' ? 50 : 20\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start'\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#7c3aed'\n  },\n  welcomeText: {\n    fontSize: 16,\n    color: '#6b7280',\n    marginTop: 5\n  },\n  logoutButton: {\n    backgroundColor: '#ef4444',\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    borderRadius: 8,\n    justifyContent: 'center',\n    minWidth: 120\n  },\n  logoutButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 14,\n    textAlign: 'center'\n  },\n  statsContainer: {\n    padding: 20\n  },\n  statCard: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 15,\n    elevation: 3\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#6b7280'\n  },\n  statValue: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#10b981'\n  },\n  tasksSection: {\n    paddingHorizontal: 20,\n    paddingBottom: 40\n  },\n  refreshButton: {\n    backgroundColor: '#6366f1',\n    paddingVertical: 12,\n    borderRadius: 12,\n    marginBottom: 15,\n    alignItems: 'center'\n  },\n  refreshButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  emptyState: {\n    alignItems: 'center',\n    marginTop: 50\n  },\n  emptyText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#9ca3af'\n  },\n  emptySubtext: {\n    fontSize: 14,\n    color: '#d1d5db',\n    marginTop: 5,\n    textAlign: 'center',\n    paddingHorizontal: 20\n  },\n  taskCard: {\n    backgroundColor: 'white',\n    borderRadius: 15,\n    padding: 15,\n    marginBottom: 15,\n    flexDirection: 'row',\n    elevation: 2\n  },\n  taskImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 10,\n    marginRight: 15,\n    resizeMode: 'cover'\n  },\n  taskInfo: {\n    flex: 1\n  },\n  taskTitle: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    marginBottom: 3\n  },\n  taskDescription: {\n    color: '#6b7280',\n    fontSize: 14,\n    marginBottom: 10\n  },\n  taskButton: {\n    backgroundColor: '#6b7280',\n    paddingVertical: 6,\n    paddingHorizontal: 10,\n    borderRadius: 10,\n    alignSelf: 'flex-start'\n  },\n  completedButton: {\n    backgroundColor: '#10b981'\n  },\n  taskButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 14\n  },\n  completedDate: {\n    fontSize: 12,\n    color: '#10b981',\n    marginTop: 5,\n    fontStyle: 'italic'\n  },\n  completedDateModal: {\n    fontSize: 14,\n    color: '#10b981',\n    marginTop: 10,\n    marginBottom: 10,\n    fontStyle: 'italic',\n    textAlign: 'center'\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContent: {\n    width: '90%',\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 20\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  modalImage: {\n    width: '100%',\n    height: 200,\n    borderRadius: 15,\n    marginBottom: 15,\n    resizeMode: 'cover'\n  },\n  modalDescription: {\n    fontSize: 16,\n    color: '#374151',\n    marginBottom: 15\n  },\n  modalButton: {\n    backgroundColor: '#6b7280',\n    paddingVertical: 10,\n    borderRadius: 12,\n    marginBottom: 10\n  },\n  closeButton: {\n    paddingVertical: 10,\n    borderRadius: 12,\n    backgroundColor: '#ef4444'\n  },\n  closeButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  retryButton: {\n    marginTop: 15,\n    backgroundColor: '#4ade80',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 12\n  },\n  retryButtonText: {\n    color: '#065f46',\n    fontWeight: 'bold'\n  },\n  skipButton: {\n    marginTop: 10,\n    backgroundColor: '#f87171',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 12\n  },\n  skipButtonText: {\n    color: '#7f1d1d',\n    fontWeight: 'bold'\n  }\n});\nexport default StudentDashboard;","map":{"version":3,"names":["React","useEffect","useState","View","Text","ScrollView","Alert","Modal","TouchableOpacity","Image","ActivityIndicator","StyleSheet","Platform","jsx","_jsx","jsxs","_jsxs","API_URL","StudentDashboard","_ref","username","userId","navigation","onLogout","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","completed","pending","progress","_useState4","stats","setStats","_useState5","_useState6","loading","setLoading","_useState7","_useState8","selectedTask","setSelectedTask","_useState9","_useState0","debugInfo","setDebugInfo","timeoutId","setTimeout","alert","fetchUserTasks","clearTimeout","_ref2","_asyncToGenerator","response","fetch","headers","ok","Error","status","userTaskCompletions","json","tasksResponse","allTasks","tasksWithStatus","map","completion","taskInfo","find","t","id","task_id","_objectSpread","completed_at","notes","completion_id","filter","length","total","Math","round","error","console","apply","arguments","toggleTaskCompletion","_ref3","taskId","currentStatus","endpoint","formData","FormData","append","toString","method","body","prevTasks","task","updatedTasks","_x","_x2","handleLogout","text","style","onPress","_onPress","reset","index","routes","name","styles","centerContainer","children","size","color","loadingText","debugText","retryButton","retryButtonText","skipButton","skipButtonText","container","header","headerTop","headerTitle","welcomeText","logoutButton","logoutButtonText","statsContainer","statCard","statLabel","statValue","tasksSection","refreshButton","refreshButtonText","emptyState","emptyText","emptySubtext","item","taskCard","image_path","source","uri","taskImage","taskTitle","title","taskDescription","description","taskButton","completedButton","taskButtonText","completedDate","Date","toLocaleDateString","visible","animationType","transparent","onRequestClose","modalOverlay","modalContent","modalTitle","modalImage","modalDescription","modalButton","completedDateModal","closeButton","closeButtonText","create","flex","backgroundColor","justifyContent","alignItems","padding","marginTop","fontSize","textAlign","paddingTop","OS","flexDirection","fontWeight","paddingHorizontal","paddingVertical","borderRadius","minWidth","marginBottom","elevation","paddingBottom","width","height","marginRight","resizeMode","alignSelf","fontStyle"],"sources":["C:/Users/raulv/Desktop/proyectoCantera/webRobotica/frontend-web/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  Alert,\r\n  Modal,\r\n  TouchableOpacity,\r\n  Image,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  Platform\r\n} from 'react-native';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst StudentDashboard = ({ username, userId, navigation, onLogout }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [stats, setStats] = useState({ completed: 0, pending: 0, progress: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      if (loading) {\r\n        setLoading(false);\r\n        Alert.alert('Timeout', 'La carga está tardando demasiado. Verifica la conexión.');\r\n      }\r\n    }, 15000);\r\n\r\n    fetchUserTasks();\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, []);\r\n\r\n  const fetchUserTasks = async () => {\r\n    try {\r\n      setDebugInfo('Obteniendo tareas del usuario...');\r\n      \r\n      // Cambiar a obtener las tareas específicas del usuario\r\n      const response = await fetch(`${API_URL}/users/${userId}/tasks`, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`Status: ${response.status}`);\r\n\r\n      const userTaskCompletions = await response.json();\r\n      \r\n      // Obtener información completa de las tareas\r\n      const tasksResponse = await fetch(`${API_URL}/tasks`);\r\n      const allTasks = await tasksResponse.json();\r\n      \r\n      // Combinar la información de las tareas con el estado de completado del usuario\r\n      const tasksWithStatus = userTaskCompletions.map(completion => {\r\n        const taskInfo = allTasks.find(t => t.id === completion.task_id);\r\n        return {\r\n          ...taskInfo,\r\n          completed: completion.completed,\r\n          completed_at: completion.completed_at,\r\n          notes: completion.notes,\r\n          completion_id: completion.id\r\n        };\r\n      });\r\n\r\n      const completed = tasksWithStatus.filter(t => t.completed).length;\r\n      const total = tasksWithStatus.length;\r\n\r\n      setTasks(tasksWithStatus);\r\n      setStats({\r\n        completed,\r\n        pending: total - completed,\r\n        progress: total > 0 ? Math.round((completed / total) * 100) : 0\r\n      });\r\n\r\n      setDebugInfo('Tareas cargadas correctamente.');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error al obtener tareas:', error);\r\n      setDebugInfo('No se pudieron cargar las tareas.');\r\n      Alert.alert('Error', 'No se pudo conectar al servidor o cargar las tareas.');\r\n      setTasks([]);\r\n      setStats({ completed: 0, pending: 0, progress: 0 });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\r\n    const endpoint = currentStatus ? 'uncomplete' : 'complete';\r\n    try {\r\n      // Crear FormData para enviar el user_id\r\n      const formData = new FormData();\r\n      formData.append('user_id', userId.toString());\r\n      \r\n      const response = await fetch(`${API_URL}/tasks/${taskId}/${endpoint}`, {\r\n        method: 'PUT',\r\n        body: formData\r\n      });\r\n      \r\n      if (response.ok) {\r\n        // Actualizar el estado local inmediatamente para mejor UX\r\n        setTasks(prevTasks => \r\n          prevTasks.map(task => \r\n            task.id === taskId \r\n              ? { ...task, completed: !currentStatus }\r\n              : task\r\n          )\r\n        );\r\n        \r\n        // Actualizar estadísticas\r\n        const updatedTasks = tasks.map(task => \r\n          task.id === taskId \r\n            ? { ...task, completed: !currentStatus }\r\n            : task\r\n        );\r\n        const completed = updatedTasks.filter(t => t.completed).length;\r\n        const total = updatedTasks.length;\r\n        \r\n        setStats({\r\n          completed,\r\n          pending: total - completed,\r\n          progress: total > 0 ? Math.round((completed / total) * 100) : 0\r\n        });\r\n        \r\n        // Refrescar datos del servidor\r\n        fetchUserTasks();\r\n      } else {\r\n        throw new Error(`Error: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n      Alert.alert('Error', 'No se pudo actualizar la tarea');\r\n      // Revertir cambios en caso de error\r\n      fetchUserTasks();\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    Alert.alert(\r\n      'Cerrar Sesión',\r\n      '¿Estás seguro de que quieres cerrar sesión?',\r\n      [\r\n        { text: 'Cancelar', style: 'cancel' },\r\n        {\r\n          text: 'Cerrar Sesión',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              await onLogout();\r\n\r\n              // Hacer reset de la navegación para evitar volver atrás\r\n              navigation.reset({\r\n                index: 0,\r\n                routes: [{ name: 'Login' }],\r\n              });\r\n            } catch (error) {\r\n              Alert.alert('Error', 'No se pudo cerrar sesión correctamente.');\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.centerContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#7c3aed\" />\r\n        <Text style={styles.loadingText}>Cargando tareas...</Text>\r\n        <Text style={styles.debugText}>{debugInfo}</Text>\r\n        <TouchableOpacity style={styles.retryButton} onPress={() => { setLoading(true); fetchUserTasks(); }}>\r\n          <Text style={styles.retryButtonText}>Reintentar Conexión</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.skipButton} onPress={() => { setLoading(false); setTasks([]); }}>\r\n          <Text style={styles.skipButtonText}>Continuar Sin Datos</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <View style={styles.headerTop}>\r\n          <View>\r\n            <Text style={styles.headerTitle}>🤖 Cantera de Empresas</Text>\r\n            <Text style={styles.welcomeText}>Bienvenido, {username || 'Usuario'}</Text>\r\n            {debugInfo ? <Text style={styles.debugInfo}>{debugInfo}</Text> : null}\r\n          </View>\r\n          <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\r\n            <Text style={styles.logoutButtonText}>🚪 Cerrar Sesión</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.statsContainer}>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Completadas</Text>\r\n          <Text style={styles.statValue}>{stats.completed}</Text>\r\n        </View>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Pendientes</Text>\r\n          <Text style={[styles.statValue, { color: '#f97316' }]}>{stats.pending}</Text>\r\n        </View>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Progreso Total</Text>\r\n          <Text style={[styles.statValue, { color: '#7c3aed' }]}>{stats.progress}%</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.tasksSection}>\r\n        <TouchableOpacity style={styles.refreshButton} onPress={() => { setLoading(true); fetchUserTasks(); }}>\r\n          <Text style={styles.refreshButtonText}>🔄 Actualizar</Text>\r\n        </TouchableOpacity>\r\n\r\n        {tasks.length === 0 ? (\r\n          <View style={styles.emptyState}>\r\n            <Text style={styles.emptyText}>No hay tareas disponibles</Text>\r\n            <Text style={styles.emptySubtext}>{debugInfo || 'Verifica tu conexión al servidor'}</Text>\r\n          </View>\r\n        ) : (\r\n          tasks.map((item) => (\r\n            <TouchableOpacity key={item.id} style={styles.taskCard} onPress={() => setSelectedTask(item)}>\r\n              {item.image_path && <Image source={{ uri: `${API_URL}${item.image_path}` }} style={styles.taskImage} />}\r\n              <View style={styles.taskInfo}>\r\n                <Text style={styles.taskTitle}>{item.title}</Text>\r\n                <Text style={styles.taskDescription}>{item.description}</Text>\r\n                <TouchableOpacity\r\n                  style={[styles.taskButton, item.completed && styles.completedButton]}\r\n                  onPress={() => toggleTaskCompletion(item.id, item.completed)}\r\n                >\r\n                  <Text style={styles.taskButtonText}>\r\n                    {item.completed ? '✓ Completada' : 'Marcar como Completada'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                {item.completed && item.completed_at && (\r\n                  <Text style={styles.completedDate}>\r\n                    Completada el: {new Date(item.completed_at).toLocaleDateString()}\r\n                  </Text>\r\n                )}\r\n              </View>\r\n            </TouchableOpacity>\r\n          ))\r\n        )}\r\n      </View>\r\n\r\n      <Modal visible={selectedTask !== null} animationType=\"slide\" transparent={true} onRequestClose={() => setSelectedTask(null)}>\r\n        {selectedTask && (\r\n          <View style={styles.modalOverlay}>\r\n            <View style={styles.modalContent}>\r\n              <Text style={styles.modalTitle}>{selectedTask.title}</Text>\r\n              {selectedTask.image_path && (\r\n                <Image source={{ uri: `${API_URL}${selectedTask.image_path}` }} style={styles.modalImage} />\r\n              )}\r\n              <Text style={styles.modalDescription}>{selectedTask.description}</Text>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, selectedTask.completed && styles.completedButton]}\r\n                onPress={() => {\r\n                  toggleTaskCompletion(selectedTask.id, selectedTask.completed);\r\n                  setSelectedTask(null);\r\n                }}\r\n              >\r\n                <Text style={styles.taskButtonText}>\r\n                  {selectedTask.completed ? '✓ Completada' : 'Marcar como Completada'}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              {selectedTask.completed && selectedTask.completed_at && (\r\n                <Text style={styles.completedDateModal}>\r\n                  Completada el: {new Date(selectedTask.completed_at).toLocaleDateString()}\r\n                </Text>\r\n              )}\r\n              <TouchableOpacity style={styles.closeButton} onPress={() => setSelectedTask(null)}>\r\n                <Text style={styles.closeButtonText}>Cerrar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        )}\r\n      </Modal>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#f3f4f6' },\r\n  centerContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', padding: 20 },\r\n  loadingText: { marginTop: 10, fontSize: 16, color: '#6b7280', textAlign: 'center' },\r\n  debugText: { marginTop: 5, fontSize: 12, color: '#9ca3af', textAlign: 'center' },\r\n  debugInfo: { fontSize: 12, color: '#9ca3af', marginTop: 5 },\r\n  header: { backgroundColor: 'white', padding: 20, paddingTop: Platform.OS === 'ios' ? 50 : 20 },\r\n  headerTop: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'flex-start' },\r\n  headerTitle: { fontSize: 24, fontWeight: 'bold', color: '#7c3aed' },\r\n  welcomeText: { fontSize: 16, color: '#6b7280', marginTop: 5 },\r\n  logoutButton: {\r\n    backgroundColor: '#ef4444',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 8,\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    minWidth: 120\r\n  },\r\n  logoutButtonText: { color: 'white', fontWeight: 'bold', fontSize: 14, textAlign: 'center' },\r\n  statsContainer: { padding: 20 },\r\n  statCard: { backgroundColor: 'white', padding: 20, borderRadius: 10, marginBottom: 15, elevation: 3 },\r\n  statLabel: { fontSize: 14, color: '#6b7280' },\r\n  statValue: { fontSize: 32, fontWeight: 'bold', color: '#10b981' },\r\n  tasksSection: { paddingHorizontal: 20, paddingBottom: 40 },\r\n  refreshButton: {\r\n    backgroundColor: '#6366f1',\r\n    paddingVertical: 12,\r\n    borderRadius: 12,\r\n    marginBottom: 15,\r\n    alignItems: 'center'\r\n  },\r\n  refreshButtonText: { color: 'white', fontWeight: 'bold', fontSize: 16 },\r\n  emptyState: { alignItems: 'center', marginTop: 50 },\r\n  emptyText: { fontSize: 18, fontWeight: 'bold', color: '#9ca3af' },\r\n  emptySubtext: { fontSize: 14, color: '#d1d5db', marginTop: 5, textAlign: 'center', paddingHorizontal: 20 },\r\n  taskCard: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 15,\r\n    padding: 15,\r\n    marginBottom: 15,\r\n    flexDirection: 'row',\r\n    elevation: 2\r\n  },\r\n  taskImage: { width: 80, height: 80, borderRadius: 10, marginRight: 15, resizeMode: 'cover' },\r\n  taskInfo: { flex: 1 },\r\n  taskTitle: { fontWeight: 'bold', fontSize: 16, marginBottom: 3 },\r\n  taskDescription: { color: '#6b7280', fontSize: 14, marginBottom: 10 },\r\n  taskButton: {\r\n    backgroundColor: '#6b7280',\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 10,\r\n    alignSelf: 'flex-start'\r\n  },\r\n  completedButton: {\r\n    backgroundColor: '#10b981'\r\n  },\r\n  taskButtonText: { color: 'white', fontWeight: 'bold', fontSize: 14 },\r\n  completedDate: {\r\n    fontSize: 12,\r\n    color: '#10b981',\r\n    marginTop: 5,\r\n    fontStyle: 'italic'\r\n  },\r\n  completedDateModal: {\r\n    fontSize: 14,\r\n    color: '#10b981',\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    fontStyle: 'italic',\r\n    textAlign: 'center'\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  modalContent: {\r\n    width: '90%',\r\n    backgroundColor: 'white',\r\n    borderRadius: 20,\r\n    padding: 20\r\n  },\r\n  modalTitle: { fontSize: 20, fontWeight: 'bold', marginBottom: 10 },\r\n  modalImage: { width: '100%', height: 200, borderRadius: 15, marginBottom: 15, resizeMode: 'cover' },\r\n  modalDescription: { fontSize: 16, color: '#374151', marginBottom: 15 },\r\n  modalButton: {\r\n    backgroundColor: '#6b7280',\r\n    paddingVertical: 10,\r\n    borderRadius: 12,\r\n    marginBottom: 10\r\n  },\r\n  closeButton: {\r\n    paddingVertical: 10,\r\n    borderRadius: 12,\r\n    backgroundColor: '#ef4444',\r\n  },\r\n  closeButtonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    textAlign: 'center'\r\n  },\r\n  retryButton: {\r\n    marginTop: 15,\r\n    backgroundColor: '#4ade80',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 12,\r\n  },\r\n  retryButtonText: {\r\n    color: '#065f46',\r\n    fontWeight: 'bold',\r\n  },\r\n  skipButton: {\r\n    marginTop: 10,\r\n    backgroundColor: '#f87171',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 12,\r\n  },\r\n  skipButtonText: {\r\n    color: '#7f1d1d',\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\n\r\nexport default StudentDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}