{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_URL = 'http://localhost:8000';\nvar StudentDashboard = function StudentDashboard(_ref) {\n  var username = _ref.username,\n    onLogout = _ref.onLogout;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState({\n      completed: 0,\n      pending: 0,\n      progress: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stats = _useState4[0],\n    setStats = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedTask = _useState8[0],\n    setSelectedTask = _useState8[1];\n  var _useState9 = useState(''),\n    _useState0 = _slicedToArray(_useState9, 2),\n    debugInfo = _useState0[0],\n    setDebugInfo = _useState0[1];\n  useEffect(function () {\n    var timeoutId = setTimeout(function () {\n      if (loading) {\n        setLoading(false);\n        Alert.alert('Timeout', 'La carga está tardando demasiado. Verifica la conexión.');\n      }\n    }, 15000);\n    fetchTasks();\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  }, []);\n  var fetchTasks = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setDebugInfo('Obteniendo tareas...');\n        var response = yield fetch(`${API_URL}/tasks`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) throw new Error(`Status: ${response.status}`);\n        var data = yield response.json();\n        var completed = data.filter(function (t) {\n          return t.completed;\n        }).length;\n        var total = data.length;\n        setTasks(data);\n        setStats({\n          completed: completed,\n          pending: total - completed,\n          progress: total > 0 ? Math.round(completed / total * 100) : 0\n        });\n        setDebugInfo('Tareas cargadas correctamente.');\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al obtener tareas:', error);\n        setDebugInfo('No se pudieron cargar las tareas.');\n        Alert.alert('Error', 'No se pudo conectar al servidor o cargar las tareas.');\n        setTasks([]);\n        setStats({\n          completed: 0,\n          pending: 0,\n          progress: 0\n        });\n        setLoading(false);\n      }\n    });\n    return function fetchTasks() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var toggleTaskCompletion = function () {\n    var _ref3 = _asyncToGenerator(function* (taskId, currentStatus) {\n      var endpoint = currentStatus ? 'uncomplete' : 'complete';\n      try {\n        var response = yield fetch(`${API_URL}/tasks/${taskId}/${endpoint}`, {\n          method: 'PUT'\n        });\n        if (response.ok) {\n          fetchTasks();\n        } else {\n          throw new Error(`Error: ${response.status}`);\n        }\n      } catch (error) {\n        console.error('Error updating task:', error);\n        Alert.alert('Error', 'No se pudo actualizar la tarea');\n      }\n    });\n    return function toggleTaskCompletion(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function handleLogout() {\n    Alert.alert('Cerrar Sesión', '¿Estás seguro de que quieres cerrar sesión?', [{\n      text: 'Cancelar',\n      style: 'cancel'\n    }, {\n      text: 'Cerrar Sesión',\n      style: 'destructive',\n      onPress: function () {\n        var _onPress = _asyncToGenerator(function* () {\n          try {\n            var response = yield fetch(`${API_URL}/logout`, {\n              method: 'POST'\n            });\n            if (response.ok) {\n              onLogout && onLogout();\n            } else {\n              Alert.alert('Error', 'No se pudo cerrar sesión correctamente.');\n            }\n          } catch (error) {\n            Alert.alert('Error', 'Error al conectarse al servidor.');\n          }\n        });\n        function onPress() {\n          return _onPress.apply(this, arguments);\n        }\n        return onPress;\n      }()\n    }]);\n  };\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.centerContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#7c3aed\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Cargando tareas...\"\n      }), _jsx(Text, {\n        style: styles.debugText,\n        children: debugInfo\n      }), _jsx(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: function onPress() {\n          setLoading(true);\n          fetchTasks();\n        },\n        children: _jsx(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar Conexi\\xF3n\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.skipButton,\n        onPress: function onPress() {\n          setLoading(false);\n          setTasks([]);\n        },\n        children: _jsx(Text, {\n          style: styles.skipButtonText,\n          children: \"Continuar Sin Datos\"\n        })\n      })]\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsxs(View, {\n        style: styles.headerTop,\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.headerTitle,\n            children: \"\\uD83E\\uDD16 Cantera de Empresas\"\n          }), _jsxs(Text, {\n            style: styles.welcomeText,\n            children: [\"Bienvenido, \", username || 'Usuario']\n          }), debugInfo ? _jsx(Text, {\n            style: styles.debugInfo,\n            children: debugInfo\n          }) : null]\n        }), _jsx(TouchableOpacity, {\n          style: styles.logoutButton,\n          onPress: handleLogout,\n          children: _jsx(Text, {\n            style: styles.logoutButtonText,\n            children: \"\\uD83D\\uDEAA Cerrar Sesi\\xF3n\"\n          })\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.statsContainer,\n      children: [_jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Completadas\"\n        }), _jsx(Text, {\n          style: styles.statValue,\n          children: stats.completed\n        })]\n      }), _jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Pendientes\"\n        }), _jsx(Text, {\n          style: [styles.statValue, {\n            color: '#f97316'\n          }],\n          children: stats.pending\n        })]\n      }), _jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Progreso Total\"\n        }), _jsxs(Text, {\n          style: [styles.statValue, {\n            color: '#7c3aed'\n          }],\n          children: [stats.progress, \"%\"]\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.tasksSection,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: function onPress() {\n          setLoading(true);\n          fetchTasks();\n        },\n        children: _jsx(Text, {\n          style: styles.refreshButtonText,\n          children: \"\\uD83D\\uDD04 Actualizar\"\n        })\n      }), tasks.length === 0 ? _jsxs(View, {\n        style: styles.emptyState,\n        children: [_jsx(Text, {\n          style: styles.emptyText,\n          children: \"No hay tareas disponibles\"\n        }), _jsx(Text, {\n          style: styles.emptySubtext,\n          children: debugInfo || 'Verifica tu conexión al servidor'\n        })]\n      }) : tasks.map(function (item) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.taskCard,\n          onPress: function onPress() {\n            return setSelectedTask(item);\n          },\n          children: [item.image_path && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${item.image_path}`\n            },\n            style: styles.taskImage\n          }), _jsxs(View, {\n            style: styles.taskInfo,\n            children: [_jsx(Text, {\n              style: styles.taskTitle,\n              children: item.title\n            }), _jsx(Text, {\n              style: styles.taskDescription,\n              children: item.description\n            }), _jsx(TouchableOpacity, {\n              style: [styles.taskButton, item.completed && styles.completedButton],\n              onPress: function onPress() {\n                return toggleTaskCompletion(item.id, item.completed);\n              },\n              children: _jsx(Text, {\n                style: styles.taskButtonText,\n                children: item.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'\n              })\n            })]\n          })]\n        }, item.id);\n      })]\n    }), _jsx(Modal, {\n      visible: selectedTask !== null,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setSelectedTask(null);\n      },\n      children: selectedTask && _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: selectedTask.title\n          }), selectedTask.image_path && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${selectedTask.image_path}`\n            },\n            style: styles.modalImage\n          }), _jsx(Text, {\n            style: styles.modalDescription,\n            children: selectedTask.description\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, selectedTask.completed && styles.completedButton],\n            onPress: function onPress() {\n              toggleTaskCompletion(selectedTask.id, selectedTask.completed);\n              setSelectedTask(null);\n            },\n            children: _jsx(Text, {\n              style: styles.taskButtonText,\n              children: selectedTask.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.closeButton,\n            onPress: function onPress() {\n              return setSelectedTask(null);\n            },\n            children: _jsx(Text, {\n              style: styles.closeButtonText,\n              children: \"Cerrar\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f3f4f6'\n  },\n  centerContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#6b7280',\n    textAlign: 'center'\n  },\n  debugText: {\n    marginTop: 5,\n    fontSize: 12,\n    color: '#9ca3af',\n    textAlign: 'center'\n  },\n  debugInfo: {\n    fontSize: 12,\n    color: '#9ca3af',\n    marginTop: 5\n  },\n  header: {\n    backgroundColor: 'white',\n    padding: 20,\n    paddingTop: Platform.OS === 'ios' ? 50 : 20\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start'\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#7c3aed'\n  },\n  welcomeText: {\n    fontSize: 16,\n    color: '#6b7280',\n    marginTop: 5\n  },\n  logoutButton: {\n    backgroundColor: '#ef4444',\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    borderRadius: 8,\n    justifyContent: 'center',\n    minWidth: 120\n  },\n  logoutButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 14,\n    textAlign: 'center'\n  },\n  statsContainer: {\n    padding: 20\n  },\n  statCard: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 15,\n    elevation: 3\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#6b7280'\n  },\n  statValue: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#10b981'\n  },\n  tasksSection: {\n    padding: 20\n  },\n  refreshButton: {\n    backgroundColor: '#7c3aed',\n    padding: 10,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  refreshButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  emptyState: {\n    backgroundColor: 'white',\n    padding: 40,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#6b7280',\n    marginBottom: 5\n  },\n  emptySubtext: {\n    fontSize: 12,\n    color: '#9ca3af',\n    textAlign: 'center'\n  },\n  taskCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    marginBottom: 15,\n    elevation: 3,\n    overflow: 'hidden'\n  },\n  taskImage: {\n    width: '100%',\n    height: 200\n  },\n  taskInfo: {\n    padding: 15\n  },\n  taskTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  taskDescription: {\n    fontSize: 14,\n    color: '#6b7280',\n    marginBottom: 10\n  },\n  taskButton: {\n    backgroundColor: '#7c3aed',\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  completedButton: {\n    backgroundColor: '#10b981'\n  },\n  taskButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    width: '90%',\n    maxWidth: 500\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 15\n  },\n  modalImage: {\n    width: '100%',\n    height: 300,\n    marginBottom: 15\n  },\n  modalDescription: {\n    fontSize: 16,\n    color: '#4b5563',\n    marginBottom: 20,\n    lineHeight: 24\n  },\n  modalButton: {\n    backgroundColor: '#7c3aed',\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  closeButton: {\n    backgroundColor: '#e5e7eb',\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  closeButtonText: {\n    color: '#6b7280',\n    fontWeight: 'bold'\n  },\n  retryButton: {\n    backgroundColor: '#7c3aed',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 15\n  },\n  retryButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  skipButton: {\n    backgroundColor: '#6b7280',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 10\n  },\n  skipButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default StudentDashboard;","map":{"version":3,"names":["React","useEffect","useState","View","Text","ScrollView","Alert","Modal","TouchableOpacity","Image","ActivityIndicator","StyleSheet","Platform","jsx","_jsx","jsxs","_jsxs","API_URL","StudentDashboard","_ref","username","onLogout","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","completed","pending","progress","_useState4","stats","setStats","_useState5","_useState6","loading","setLoading","_useState7","_useState8","selectedTask","setSelectedTask","_useState9","_useState0","debugInfo","setDebugInfo","timeoutId","setTimeout","alert","fetchTasks","clearTimeout","_ref2","_asyncToGenerator","response","fetch","headers","ok","Error","status","data","json","filter","t","length","total","Math","round","error","console","apply","arguments","toggleTaskCompletion","_ref3","taskId","currentStatus","endpoint","method","_x","_x2","handleLogout","text","style","onPress","_onPress","styles","centerContainer","children","size","color","loadingText","debugText","retryButton","retryButtonText","skipButton","skipButtonText","container","header","headerTop","headerTitle","welcomeText","logoutButton","logoutButtonText","statsContainer","statCard","statLabel","statValue","tasksSection","refreshButton","refreshButtonText","emptyState","emptyText","emptySubtext","map","item","taskCard","image_path","source","uri","taskImage","taskInfo","taskTitle","title","taskDescription","description","taskButton","completedButton","id","taskButtonText","visible","animationType","transparent","onRequestClose","modalOverlay","modalContent","modalTitle","modalImage","modalDescription","modalButton","closeButton","closeButtonText","create","flex","backgroundColor","justifyContent","alignItems","padding","marginTop","fontSize","textAlign","paddingTop","OS","flexDirection","fontWeight","paddingHorizontal","paddingVertical","borderRadius","minWidth","marginBottom","elevation","overflow","width","height","maxWidth","lineHeight"],"sources":["C:/Users/raulv/Desktop/proyectoCantera/webRobotica/frontend-web/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  Alert,\r\n  Modal,\r\n  TouchableOpacity,\r\n  Image,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  Platform\r\n} from 'react-native';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst StudentDashboard = ({ username, onLogout }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [stats, setStats] = useState({ completed: 0, pending: 0, progress: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      if (loading) {\r\n        setLoading(false);\r\n        Alert.alert('Timeout', 'La carga está tardando demasiado. Verifica la conexión.');\r\n      }\r\n    }, 15000);\r\n\r\n    fetchTasks();\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      setDebugInfo('Obteniendo tareas...');\r\n      const response = await fetch(`${API_URL}/tasks`, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`Status: ${response.status}`);\r\n\r\n      const data = await response.json();\r\n      const completed = data.filter(t => t.completed).length;\r\n      const total = data.length;\r\n\r\n      setTasks(data);\r\n      setStats({\r\n        completed,\r\n        pending: total - completed,\r\n        progress: total > 0 ? Math.round((completed / total) * 100) : 0\r\n      });\r\n\r\n      setDebugInfo('Tareas cargadas correctamente.');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error al obtener tareas:', error);\r\n      setDebugInfo('No se pudieron cargar las tareas.');\r\n      Alert.alert('Error', 'No se pudo conectar al servidor o cargar las tareas.');\r\n      setTasks([]);\r\n      setStats({ completed: 0, pending: 0, progress: 0 });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\r\n    const endpoint = currentStatus ? 'uncomplete' : 'complete';\r\n    try {\r\n      const response = await fetch(`${API_URL}/tasks/${taskId}/${endpoint}`, {\r\n        method: 'PUT'\r\n      });\r\n      if (response.ok) {\r\n        fetchTasks(); // refrescar tareas\r\n      } else {\r\n        throw new Error(`Error: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n      Alert.alert('Error', 'No se pudo actualizar la tarea');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n  Alert.alert(\r\n    'Cerrar Sesión',\r\n    '¿Estás seguro de que quieres cerrar sesión?',\r\n    [\r\n      { text: 'Cancelar', style: 'cancel' },\r\n      {\r\n        text: 'Cerrar Sesión',\r\n        style: 'destructive',\r\n        onPress: async () => {\r\n          try {\r\n            const response = await fetch(`${API_URL}/logout`, { method: 'POST' });\r\n            if (response.ok) {\r\n              onLogout && onLogout();  // Redirigir al login desde el padre\r\n            } else {\r\n              Alert.alert('Error', 'No se pudo cerrar sesión correctamente.');\r\n            }\r\n          } catch (error) {\r\n            Alert.alert('Error', 'Error al conectarse al servidor.');\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  );\r\n};\r\n\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.centerContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#7c3aed\" />\r\n        <Text style={styles.loadingText}>Cargando tareas...</Text>\r\n        <Text style={styles.debugText}>{debugInfo}</Text>\r\n        <TouchableOpacity style={styles.retryButton} onPress={() => { setLoading(true); fetchTasks(); }}>\r\n          <Text style={styles.retryButtonText}>Reintentar Conexión</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.skipButton} onPress={() => { setLoading(false); setTasks([]); }}>\r\n          <Text style={styles.skipButtonText}>Continuar Sin Datos</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <View style={styles.headerTop}>\r\n          <View>\r\n            <Text style={styles.headerTitle}>🤖 Cantera de Empresas</Text>\r\n            <Text style={styles.welcomeText}>Bienvenido, {username || 'Usuario'}</Text>\r\n            {debugInfo ? <Text style={styles.debugInfo}>{debugInfo}</Text> : null}\r\n          </View>\r\n          <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\r\n            <Text style={styles.logoutButtonText}>🚪 Cerrar Sesión</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.statsContainer}>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Completadas</Text>\r\n          <Text style={styles.statValue}>{stats.completed}</Text>\r\n        </View>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Pendientes</Text>\r\n          <Text style={[styles.statValue, { color: '#f97316' }]}>{stats.pending}</Text>\r\n        </View>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Progreso Total</Text>\r\n          <Text style={[styles.statValue, { color: '#7c3aed' }]}>{stats.progress}%</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.tasksSection}>\r\n        <TouchableOpacity style={styles.refreshButton} onPress={() => { setLoading(true); fetchTasks(); }}>\r\n          <Text style={styles.refreshButtonText}>🔄 Actualizar</Text>\r\n        </TouchableOpacity>\r\n\r\n        {tasks.length === 0 ? (\r\n          <View style={styles.emptyState}>\r\n            <Text style={styles.emptyText}>No hay tareas disponibles</Text>\r\n            <Text style={styles.emptySubtext}>{debugInfo || 'Verifica tu conexión al servidor'}</Text>\r\n          </View>\r\n        ) : (\r\n          tasks.map((item) => (\r\n            <TouchableOpacity key={item.id} style={styles.taskCard} onPress={() => setSelectedTask(item)}>\r\n              {item.image_path && <Image source={{ uri: `${API_URL}${item.image_path}` }} style={styles.taskImage} />}\r\n              <View style={styles.taskInfo}>\r\n                <Text style={styles.taskTitle}>{item.title}</Text>\r\n                <Text style={styles.taskDescription}>{item.description}</Text>\r\n                <TouchableOpacity\r\n                  style={[styles.taskButton, item.completed && styles.completedButton]}\r\n                  onPress={() => toggleTaskCompletion(item.id, item.completed)}\r\n                >\r\n                  <Text style={styles.taskButtonText}>\r\n                    {item.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </TouchableOpacity>\r\n          ))\r\n        )}\r\n      </View>\r\n\r\n      <Modal visible={selectedTask !== null} animationType=\"slide\" transparent={true} onRequestClose={() => setSelectedTask(null)}>\r\n        {selectedTask && (\r\n          <View style={styles.modalOverlay}>\r\n            <View style={styles.modalContent}>\r\n              <Text style={styles.modalTitle}>{selectedTask.title}</Text>\r\n              {selectedTask.image_path && (\r\n                <Image source={{ uri: `${API_URL}${selectedTask.image_path}` }} style={styles.modalImage} />\r\n              )}\r\n              <Text style={styles.modalDescription}>{selectedTask.description}</Text>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, selectedTask.completed && styles.completedButton]}\r\n                onPress={() => {\r\n                  toggleTaskCompletion(selectedTask.id, selectedTask.completed);\r\n                  setSelectedTask(null);\r\n                }}\r\n              >\r\n                <Text style={styles.taskButtonText}>\r\n                  {selectedTask.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={styles.closeButton} onPress={() => setSelectedTask(null)}>\r\n                <Text style={styles.closeButtonText}>Cerrar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        )}\r\n      </Modal>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#f3f4f6' },\r\n  centerContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', padding: 20 },\r\n  loadingText: { marginTop: 10, fontSize: 16, color: '#6b7280', textAlign: 'center' },\r\n  debugText: { marginTop: 5, fontSize: 12, color: '#9ca3af', textAlign: 'center' },\r\n  debugInfo: { fontSize: 12, color: '#9ca3af', marginTop: 5 },\r\n  header: { backgroundColor: 'white', padding: 20, paddingTop: Platform.OS === 'ios' ? 50 : 20 },\r\n  headerTop: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'flex-start' },\r\n  headerTitle: { fontSize: 24, fontWeight: 'bold', color: '#7c3aed' },\r\n  welcomeText: { fontSize: 16, color: '#6b7280', marginTop: 5 },\r\n  logoutButton: {\r\n    backgroundColor: '#ef4444',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 8,\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    minWidth: 120\r\n  },\r\n  logoutButtonText: { color: 'white', fontWeight: 'bold', fontSize: 14, textAlign: 'center' },\r\n  statsContainer: { padding: 20 },\r\n  statCard: { backgroundColor: 'white', padding: 20, borderRadius: 10, marginBottom: 15, elevation: 3 },\r\n  statLabel: { fontSize: 14, color: '#6b7280' },\r\n  statValue: { fontSize: 32, fontWeight: 'bold', color: '#10b981' },\r\n  tasksSection: { padding: 20 },\r\n  refreshButton: { backgroundColor: '#7c3aed', padding: 10, borderRadius: 8, alignItems: 'center', marginBottom: 15 },\r\n  refreshButtonText: { color: 'white', fontWeight: 'bold' },\r\n  emptyState: { backgroundColor: 'white', padding: 40, borderRadius: 10, alignItems: 'center' },\r\n  emptyText: { fontSize: 16, color: '#6b7280', marginBottom: 5 },\r\n  emptySubtext: { fontSize: 12, color: '#9ca3af', textAlign: 'center' },\r\n  taskCard: { backgroundColor: 'white', borderRadius: 10, marginBottom: 15, elevation: 3, overflow: 'hidden' },\r\n  taskImage: { width: '100%', height: 200 },\r\n  taskInfo: { padding: 15 },\r\n  taskTitle: { fontSize: 18, fontWeight: 'bold', marginBottom: 5 },\r\n  taskDescription: { fontSize: 14, color: '#6b7280', marginBottom: 10 },\r\n  taskButton: { backgroundColor: '#7c3aed', padding: 12, borderRadius: 8, alignItems: 'center' },\r\n  completedButton: { backgroundColor: '#10b981' },\r\n  taskButtonText: { color: 'white', fontWeight: 'bold' },\r\n  modalOverlay: { flex: 1, backgroundColor: 'rgba(0,0,0,0.5)', justifyContent: 'center', alignItems: 'center' },\r\n  modalContent: { backgroundColor: 'white', borderRadius: 10, padding: 20, width: '90%', maxWidth: 500 },\r\n  modalTitle: { fontSize: 24, fontWeight: 'bold', marginBottom: 15 },\r\n  modalImage: { width: '100%', height: 300, marginBottom: 15 },\r\n  modalDescription: { fontSize: 16, color: '#4b5563', marginBottom: 20, lineHeight: 24 },\r\n  modalButton: { backgroundColor: '#7c3aed', padding: 15, borderRadius: 8, alignItems: 'center', marginBottom: 10 },\r\n  closeButton: { backgroundColor: '#e5e7eb', padding: 15, borderRadius: 8, alignItems: 'center' },\r\n  closeButtonText: { color: '#6b7280', fontWeight: 'bold' },\r\n  retryButton: { backgroundColor: '#7c3aed', paddingHorizontal: 20, paddingVertical: 10, borderRadius: 8, marginTop: 15 },\r\n  retryButtonText: { color: 'white', fontWeight: 'bold' },\r\n  skipButton: { backgroundColor: '#6b7280', paddingHorizontal: 20, paddingVertical: 10, borderRadius: 8, marginTop: 10 },\r\n  skipButtonText: { color: 'white', fontWeight: 'bold' }\r\n});\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}