{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_URL = 'http://localhost:8000';\nvar StudentDashboard = function StudentDashboard(_ref) {\n  var username = _ref.username,\n    onLogout = _ref.onLogout;\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState({\n      completed: 0,\n      pending: 0,\n      progress: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stats = _useState4[0],\n    setStats = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedTask = _useState8[0],\n    setSelectedTask = _useState8[1];\n  var _useState9 = useState(''),\n    _useState0 = _slicedToArray(_useState9, 2),\n    debugInfo = _useState0[0],\n    setDebugInfo = _useState0[1];\n  useEffect(function () {\n    var timeoutId = setTimeout(function () {\n      if (loading) {\n        setLoading(false);\n        Alert.alert('Timeout', 'La carga está tardando demasiado. Verifica la conexión.');\n      }\n    }, 15000);\n    fetchTasks();\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  }, []);\n  useEffect(function () {\n    var completed = tasks.filter(function (t) {\n      return t.completed;\n    }).length;\n    var total = tasks.length;\n    setStats({\n      completed: completed,\n      pending: total - completed,\n      progress: total > 0 ? Math.round(completed / total * 100) : 0\n    });\n  }, [tasks]);\n  var fetchTasks = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setDebugInfo('Obteniendo tareas...');\n        var response = yield fetch(`${API_URL}/tasks`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) throw new Error(`Status: ${response.status}`);\n        var data = yield response.json();\n        var completed = data.filter(function (t) {\n          return t.completed;\n        }).length;\n        var total = data.length;\n        setTasks(data);\n        setStats({\n          completed: completed,\n          pending: total - completed,\n          progress: total > 0 ? Math.round(completed / total * 100) : 0\n        });\n        setDebugInfo('Tareas cargadas correctamente.');\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al obtener tareas:', error);\n        setDebugInfo('No se pudieron cargar las tareas.');\n        Alert.alert('Error', 'No se pudo conectar al servidor o cargar las tareas.');\n        setTasks([]);\n        setStats({\n          completed: 0,\n          pending: 0,\n          progress: 0\n        });\n        setLoading(false);\n      }\n    });\n    return function fetchTasks() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var toggleTaskCompletion = function () {\n    var _ref3 = _asyncToGenerator(function* (taskId, currentStatus) {\n      var endpoint = currentStatus ? 'uncomplete' : 'complete';\n      try {\n        var response = yield fetch(`${API_URL}/tasks/${taskId}/${endpoint}`, {\n          method: 'PUT'\n        });\n        if (response.ok) {\n          fetchTasks();\n        } else {\n          throw new Error(`Error: ${response.status}`);\n        }\n      } catch (error) {\n        console.error('Error updating task:', error);\n        Alert.alert('Error', 'No se pudo actualizar la tarea');\n      }\n    });\n    return function toggleTaskCompletion(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function handleLogout() {\n    Alert.alert('Cerrar Sesión', '¿Estás seguro de que quieres cerrar sesión?', [{\n      text: 'Cancelar',\n      style: 'cancel'\n    }, {\n      text: 'Cerrar Sesión',\n      style: 'destructive',\n      onPress: function () {\n        var _onPress = _asyncToGenerator(function* () {\n          try {\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'Login'\n              }]\n            });\n            if (onLogout && typeof onLogout === 'function') {\n              yield onLogout();\n            }\n          } catch (error) {\n            console.error('Error durante logout:', error);\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'Login'\n              }]\n            });\n            Alert.alert('Aviso', 'Sesión cerrada con algunos errores menores.');\n          }\n        });\n        function onPress() {\n          return _onPress.apply(this, arguments);\n        }\n        return onPress;\n      }()\n    }]);\n  };\n  var handleLogoutSimple = function handleLogoutSimple() {\n    Alert.alert('Cerrar Sesión', '¿Estás seguro de que quieres cerrar sesión?', [{\n      text: 'Cancelar',\n      style: 'cancel'\n    }, {\n      text: 'Cerrar Sesión',\n      style: 'destructive',\n      onPress: function onPress() {\n        setTasks([]);\n        setStats({\n          completed: 0,\n          pending: 0,\n          progress: 0\n        });\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Login'\n          }]\n        });\n      }\n    }]);\n  };\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.centerContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#7c3aed\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Cargando tareas...\"\n      }), _jsx(Text, {\n        style: styles.debugText,\n        children: debugInfo\n      }), _jsx(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: function onPress() {\n          setLoading(true);\n          fetchTasks();\n        },\n        children: _jsx(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar Conexi\\xF3n\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.skipButton,\n        onPress: function onPress() {\n          setLoading(false);\n          setTasks([]);\n        },\n        children: _jsx(Text, {\n          style: styles.skipButtonText,\n          children: \"Continuar Sin Datos\"\n        })\n      })]\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsxs(View, {\n        style: styles.headerTop,\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.headerTitle,\n            children: \"\\uD83E\\uDD16 Cantera de Empresas\"\n          }), _jsxs(Text, {\n            style: styles.welcomeText,\n            children: [\"Bienvenido, \", username || 'Usuario']\n          }), debugInfo ? _jsx(Text, {\n            style: styles.debugInfo,\n            children: debugInfo\n          }) : null]\n        }), _jsx(TouchableOpacity, {\n          style: styles.logoutButton,\n          onPress: function onPress() {\n            setTasks([]);\n            setStats({\n              completed: 0,\n              pending: 0,\n              progress: 0\n            });\n            if (typeof onLogout === 'function') {\n              onLogout();\n            }\n          },\n          children: _jsx(Text, {\n            style: styles.logoutButtonText,\n            children: \"\\uD83D\\uDEAA Cerrar Sesi\\xF3n\"\n          })\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.statsContainer,\n      children: [_jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Completadas\"\n        }), _jsx(Text, {\n          style: styles.statValue,\n          children: stats.completed\n        })]\n      }), _jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Pendientes\"\n        }), _jsx(Text, {\n          style: [styles.statValue, {\n            color: '#f97316'\n          }],\n          children: stats.pending\n        })]\n      }), _jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Progreso Total\"\n        }), _jsxs(Text, {\n          style: [styles.statValue, {\n            color: '#7c3aed'\n          }],\n          children: [stats.progress, \"%\"]\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.tasksSection,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: function onPress() {\n          setLoading(true);\n          fetchTasks();\n        },\n        children: _jsx(Text, {\n          style: styles.refreshButtonText,\n          children: \"\\uD83D\\uDD04 Actualizar\"\n        })\n      }), tasks.length === 0 ? _jsxs(View, {\n        style: styles.emptyState,\n        children: [_jsx(Text, {\n          style: styles.emptyText,\n          children: \"No hay tareas disponibles\"\n        }), _jsx(Text, {\n          style: styles.emptySubtext,\n          children: debugInfo || 'Verifica tu conexión al servidor'\n        })]\n      }) : tasks.map(function (item) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.taskCard,\n          onPress: function onPress() {\n            return setSelectedTask(item);\n          },\n          children: [item.image_path && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${item.image_path}`\n            },\n            style: styles.taskImage\n          }), _jsxs(View, {\n            style: styles.taskInfo,\n            children: [_jsx(Text, {\n              style: styles.taskTitle,\n              children: item.title\n            }), _jsx(Text, {\n              style: styles.taskDescription,\n              children: item.description\n            }), _jsx(TouchableOpacity, {\n              style: [styles.taskButton, item.completed && styles.completedButton],\n              onPress: _asyncToGenerator(function* () {\n                setTasks(function (prevTasks) {\n                  return prevTasks.map(function (t) {\n                    return t.id === item.id ? _objectSpread(_objectSpread({}, t), {}, {\n                      completed: !item.completed\n                    }) : t;\n                  });\n                });\n                yield toggleTaskCompletion(item.id, item.completed);\n              }),\n              children: _jsx(Text, {\n                style: styles.taskButtonText,\n                children: item.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'\n              })\n            })]\n          })]\n        }, item.id);\n      })]\n    }), _jsx(Modal, {\n      visible: selectedTask !== null,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setSelectedTask(null);\n      },\n      children: selectedTask && _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: selectedTask.title\n          }), selectedTask.image_path && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${selectedTask.image_path}`\n            },\n            style: styles.modalImage\n          }), _jsx(Text, {\n            style: styles.modalDescription,\n            children: selectedTask.description\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, selectedTask.completed && styles.completedButton],\n            onPress: _asyncToGenerator(function* () {\n              setTasks(function (prevTasks) {\n                return prevTasks.map(function (t) {\n                  return t.id === selectedTask.id ? _objectSpread(_objectSpread({}, t), {}, {\n                    completed: !selectedTask.completed\n                  }) : t;\n                });\n              });\n              yield toggleTaskCompletion(selectedTask.id, selectedTask.completed);\n              setSelectedTask(null);\n            }),\n            children: _jsx(Text, {\n              style: styles.taskButtonText,\n              children: selectedTask.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.closeButton,\n            onPress: function onPress() {\n              return setSelectedTask(null);\n            },\n            children: _jsx(Text, {\n              style: styles.closeButtonText,\n              children: \"Cerrar\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f3f4f6'\n  },\n  centerContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#6b7280',\n    textAlign: 'center'\n  },\n  debugText: {\n    marginTop: 5,\n    fontSize: 12,\n    color: '#9ca3af',\n    textAlign: 'center'\n  },\n  debugInfo: {\n    fontSize: 12,\n    color: '#9ca3af',\n    marginTop: 5\n  },\n  header: {\n    backgroundColor: 'white',\n    padding: 20,\n    paddingTop: Platform.OS === 'ios' ? 50 : 20\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start'\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#7c3aed'\n  },\n  welcomeText: {\n    fontSize: 16,\n    color: '#6b7280',\n    marginTop: 5\n  },\n  logoutButton: {\n    backgroundColor: '#ef4444',\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    borderRadius: 8,\n    justifyContent: 'center',\n    minWidth: 120\n  },\n  logoutButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 14,\n    textAlign: 'center'\n  },\n  statsContainer: {\n    padding: 20\n  },\n  statCard: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    marginBottom: 15,\n    elevation: 3\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#6b7280'\n  },\n  statValue: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#10b981'\n  },\n  tasksSection: {\n    padding: 20\n  },\n  refreshButton: {\n    backgroundColor: '#7c3aed',\n    padding: 10,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  refreshButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  emptyState: {\n    backgroundColor: 'white',\n    padding: 40,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#6b7280',\n    marginBottom: 5\n  },\n  emptySubtext: {\n    fontSize: 12,\n    color: '#9ca3af',\n    textAlign: 'center'\n  },\n  taskCard: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    marginBottom: 15,\n    elevation: 3,\n    overflow: 'hidden'\n  },\n  taskImage: {\n    width: '100%',\n    height: 200\n  },\n  taskInfo: {\n    padding: 15\n  },\n  taskTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  taskDescription: {\n    fontSize: 14,\n    color: '#6b7280',\n    marginBottom: 10\n  },\n  taskButton: {\n    backgroundColor: '#7c3aed',\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  completedButton: {\n    backgroundColor: '#10b981'\n  },\n  taskButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    width: '90%',\n    maxWidth: 500\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 15\n  },\n  modalImage: {\n    width: '100%',\n    height: 300,\n    marginBottom: 15\n  },\n  modalDescription: {\n    fontSize: 16,\n    color: '#6b7280',\n    marginBottom: 20\n  },\n  modalButton: {\n    backgroundColor: '#7c3aed',\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  closeButton: {\n    marginTop: 15,\n    padding: 10,\n    alignItems: 'center'\n  },\n  closeButtonText: {\n    color: '#7c3aed',\n    fontWeight: 'bold'\n  },\n  retryButton: {\n    backgroundColor: '#7c3aed',\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderRadius: 8,\n    marginTop: 20,\n    marginBottom: 10\n  },\n  retryButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  skipButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderRadius: 8,\n    borderColor: '#7c3aed',\n    borderWidth: 1\n  },\n  skipButtonText: {\n    color: '#7c3aed',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default StudentDashboard;","map":{"version":3,"names":["React","useEffect","useState","View","Text","ScrollView","Alert","Modal","TouchableOpacity","Image","ActivityIndicator","StyleSheet","Platform","useNavigation","jsx","_jsx","jsxs","_jsxs","API_URL","StudentDashboard","_ref","username","onLogout","navigation","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","completed","pending","progress","_useState4","stats","setStats","_useState5","_useState6","loading","setLoading","_useState7","_useState8","selectedTask","setSelectedTask","_useState9","_useState0","debugInfo","setDebugInfo","timeoutId","setTimeout","alert","fetchTasks","clearTimeout","filter","t","length","total","Math","round","_ref2","_asyncToGenerator","response","fetch","headers","ok","Error","status","data","json","error","console","apply","arguments","toggleTaskCompletion","_ref3","taskId","currentStatus","endpoint","method","_x","_x2","handleLogout","text","style","onPress","_onPress","reset","index","routes","name","handleLogoutSimple","styles","centerContainer","children","size","color","loadingText","debugText","retryButton","retryButtonText","skipButton","skipButtonText","container","header","headerTop","headerTitle","welcomeText","logoutButton","logoutButtonText","statsContainer","statCard","statLabel","statValue","tasksSection","refreshButton","refreshButtonText","emptyState","emptyText","emptySubtext","map","item","taskCard","image_path","source","uri","taskImage","taskInfo","taskTitle","title","taskDescription","description","taskButton","completedButton","prevTasks","id","_objectSpread","taskButtonText","visible","animationType","transparent","onRequestClose","modalOverlay","modalContent","modalTitle","modalImage","modalDescription","modalButton","closeButton","closeButtonText","create","flex","backgroundColor","justifyContent","alignItems","padding","marginTop","fontSize","textAlign","paddingTop","OS","flexDirection","fontWeight","paddingHorizontal","paddingVertical","borderRadius","minWidth","marginBottom","elevation","overflow","width","height","maxWidth","borderColor","borderWidth"],"sources":["C:/Users/raulv/Desktop/proyectoCantera/webRobotica/frontend-web/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  Alert,\r\n  Modal,\r\n  TouchableOpacity,\r\n  Image,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  Platform\r\n} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst StudentDashboard = ({ username, onLogout }) => {\r\n  const navigation = useNavigation();\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [stats, setStats] = useState({ completed: 0, pending: 0, progress: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      if (loading) {\r\n        setLoading(false);\r\n        Alert.alert('Timeout', 'La carga está tardando demasiado. Verifica la conexión.');\r\n      }\r\n    }, 15000);\r\n\r\n    fetchTasks();\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, []);\r\n\r\n  // Actualizar estadísticas cada vez que cambian las tareas\r\n  useEffect(() => {\r\n    const completed = tasks.filter(t => t.completed).length;\r\n    const total = tasks.length;\r\n    setStats({\r\n      completed,\r\n      pending: total - completed,\r\n      progress: total > 0 ? Math.round((completed / total) * 100) : 0\r\n    });\r\n  }, [tasks]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      setDebugInfo('Obteniendo tareas...');\r\n      const response = await fetch(`${API_URL}/tasks`, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`Status: ${response.status}`);\r\n\r\n      const data = await response.json();\r\n      const completed = data.filter(t => t.completed).length;\r\n      const total = data.length;\r\n\r\n      setTasks(data);\r\n      setStats({\r\n        completed,\r\n        pending: total - completed,\r\n        progress: total > 0 ? Math.round((completed / total) * 100) : 0\r\n      });\r\n\r\n      setDebugInfo('Tareas cargadas correctamente.');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error al obtener tareas:', error);\r\n      setDebugInfo('No se pudieron cargar las tareas.');\r\n      Alert.alert('Error', 'No se pudo conectar al servidor o cargar las tareas.');\r\n      setTasks([]);\r\n      setStats({ completed: 0, pending: 0, progress: 0 });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\r\n    const endpoint = currentStatus ? 'uncomplete' : 'complete';\r\n    try {\r\n      const response = await fetch(`${API_URL}/tasks/${taskId}/${endpoint}`, {\r\n        method: 'PUT'\r\n      });\r\n      if (response.ok) {\r\n        fetchTasks(); // refrescar tareas\r\n      } else {\r\n        throw new Error(`Error: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n      Alert.alert('Error', 'No se pudo actualizar la tarea');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n  Alert.alert(\r\n    'Cerrar Sesión',\r\n    '¿Estás seguro de que quieres cerrar sesión?',\r\n    [\r\n      { text: 'Cancelar', style: 'cancel' },\r\n      {\r\n        text: 'Cerrar Sesión',\r\n        style: 'destructive',\r\n        onPress: async () => {\r\n          try {\r\n            // Primero hacer el reset de navegación\r\n            navigation.reset({\r\n              index: 0,\r\n              routes: [{ name: 'Login' }],\r\n            });\r\n\r\n            // Luego llamar onLogout si existe\r\n            if (onLogout && typeof onLogout === 'function') {\r\n              await onLogout();\r\n            }\r\n          } catch (error) {\r\n            console.error('Error durante logout:', error);\r\n            // Aunque haya error, intentar navegar de vuelta al login\r\n            navigation.reset({\r\n              index: 0,\r\n              routes: [{ name: 'Login' }],\r\n            });\r\n            Alert.alert('Aviso', 'Sesión cerrada con algunos errores menores.');\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  );\r\n};\r\n\r\n// ALTERNATIVA MÁS SIMPLE (si onLogout no es crítica):\r\nconst handleLogoutSimple = () => {\r\n  Alert.alert(\r\n    'Cerrar Sesión',\r\n    '¿Estás seguro de que quieres cerrar sesión?',\r\n    [\r\n      { text: 'Cancelar', style: 'cancel' },\r\n      {\r\n        text: 'Cerrar Sesión',\r\n        style: 'destructive',\r\n        onPress: () => {\r\n          // Limpiar cualquier estado local si es necesario\r\n          setTasks([]);\r\n          setStats({ completed: 0, pending: 0, progress: 0 });\r\n          \r\n          // Navegar directamente al login\r\n          navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: 'Login' }],\r\n          });\r\n        }\r\n      }\r\n    ]\r\n  );\r\n};\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.centerContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#7c3aed\" />\r\n        <Text style={styles.loadingText}>Cargando tareas...</Text>\r\n        <Text style={styles.debugText}>{debugInfo}</Text>\r\n        <TouchableOpacity style={styles.retryButton} onPress={() => { setLoading(true); fetchTasks(); }}>\r\n          <Text style={styles.retryButtonText}>Reintentar Conexión</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.skipButton} onPress={() => { setLoading(false); setTasks([]); }}>\r\n          <Text style={styles.skipButtonText}>Continuar Sin Datos</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <View style={styles.headerTop}>\r\n          <View>\r\n            <Text style={styles.headerTitle}>🤖 Cantera de Empresas</Text>\r\n            <Text style={styles.welcomeText}>Bienvenido, {username || 'Usuario'}</Text>\r\n            {debugInfo ? <Text style={styles.debugInfo}>{debugInfo}</Text> : null}\r\n          </View>\r\n          <TouchableOpacity\r\n            style={styles.logoutButton}\r\n            onPress={() => {\r\n              // Limpiar cualquier estado local si es necesario\r\n              setTasks([]);\r\n              setStats({ completed: 0, pending: 0, progress: 0 });\r\n              // Borrar sesión del storage y actualizar autenticación global\r\n              if (typeof onLogout === 'function') {\r\n                onLogout();\r\n              }\r\n            }}\r\n          >\r\n            <Text style={styles.logoutButtonText}>🚪 Cerrar Sesión</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.statsContainer}>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Completadas</Text>\r\n          <Text style={styles.statValue}>{stats.completed}</Text>\r\n        </View>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Pendientes</Text>\r\n          <Text style={[styles.statValue, { color: '#f97316' }]}>{stats.pending}</Text>\r\n        </View>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Progreso Total</Text>\r\n          <Text style={[styles.statValue, { color: '#7c3aed' }]}>{stats.progress}%</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.tasksSection}>\r\n        <TouchableOpacity style={styles.refreshButton} onPress={() => { setLoading(true); fetchTasks(); }}>\r\n          <Text style={styles.refreshButtonText}>🔄 Actualizar</Text>\r\n        </TouchableOpacity>\r\n\r\n        {tasks.length === 0 ? (\r\n          <View style={styles.emptyState}>\r\n            <Text style={styles.emptyText}>No hay tareas disponibles</Text>\r\n            <Text style={styles.emptySubtext}>{debugInfo || 'Verifica tu conexión al servidor'}</Text>\r\n          </View>\r\n        ) : (\r\n          tasks.map((item) => (\r\n            <TouchableOpacity key={item.id} style={styles.taskCard} onPress={() => setSelectedTask(item)}>\r\n              {item.image_path && <Image source={{ uri: `${API_URL}${item.image_path}` }} style={styles.taskImage} />}\r\n              <View style={styles.taskInfo}>\r\n                <Text style={styles.taskTitle}>{item.title}</Text>\r\n                <Text style={styles.taskDescription}>{item.description}</Text>\r\n                <TouchableOpacity\r\n                  style={[styles.taskButton, item.completed && styles.completedButton]}\r\n                  onPress={async () => {\r\n                    setTasks(prevTasks =>\r\n                      prevTasks.map(t =>\r\n                        t.id === item.id ? { ...t, completed: !item.completed } : t\r\n                      )\r\n                    );\r\n                    await toggleTaskCompletion(item.id, item.completed);\r\n                  }}\r\n                >\r\n                  <Text style={styles.taskButtonText}>\r\n                    {item.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </TouchableOpacity>\r\n          ))\r\n        )}\r\n      </View>\r\n\r\n      <Modal visible={selectedTask !== null} animationType=\"slide\" transparent={true} onRequestClose={() => setSelectedTask(null)}>\r\n        {selectedTask && (\r\n          <View style={styles.modalOverlay}>\r\n            <View style={styles.modalContent}>\r\n              <Text style={styles.modalTitle}>{selectedTask.title}</Text>\r\n              {selectedTask.image_path && (\r\n                <Image source={{ uri: `${API_URL}${selectedTask.image_path}` }} style={styles.modalImage} />\r\n              )}\r\n              <Text style={styles.modalDescription}>{selectedTask.description}</Text>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, selectedTask.completed && styles.completedButton]}\r\n                onPress={async () => {\r\n                  setTasks(prevTasks =>\r\n                    prevTasks.map(t =>\r\n                      t.id === selectedTask.id ? { ...t, completed: !selectedTask.completed } : t\r\n                    )\r\n                  );\r\n                  await toggleTaskCompletion(selectedTask.id, selectedTask.completed);\r\n                  setSelectedTask(null);\r\n                }}\r\n              >\r\n                <Text style={styles.taskButtonText}>\r\n                  {selectedTask.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={styles.closeButton} onPress={() => setSelectedTask(null)}>\r\n                <Text style={styles.closeButtonText}>Cerrar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        )}\r\n      </Modal>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#f3f4f6' },\r\n  centerContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', padding: 20 },\r\n  loadingText: { marginTop: 10, fontSize: 16, color: '#6b7280', textAlign: 'center' },\r\n  debugText: { marginTop: 5, fontSize: 12, color: '#9ca3af', textAlign: 'center' },\r\n  debugInfo: { fontSize: 12, color: '#9ca3af', marginTop: 5 },\r\n  header: { backgroundColor: 'white', padding: 20, paddingTop: Platform.OS === 'ios' ? 50 : 20 },\r\n  headerTop: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'flex-start' },\r\n  headerTitle: { fontSize: 24, fontWeight: 'bold', color: '#7c3aed' },\r\n  welcomeText: { fontSize: 16, color: '#6b7280', marginTop: 5 },\r\n  logoutButton: {\r\n    backgroundColor: '#ef4444',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 8,\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    minWidth: 120\r\n  },\r\n  logoutButtonText: { color: 'white', fontWeight: 'bold', fontSize: 14, textAlign: 'center' },\r\n  statsContainer: { padding: 20 },\r\n  statCard: { backgroundColor: 'white', padding: 20, borderRadius: 10, marginBottom: 15, elevation: 3 },\r\n  statLabel: { fontSize: 14, color: '#6b7280' },\r\n  statValue: { fontSize: 32, fontWeight: 'bold', color: '#10b981' },\r\n  tasksSection: { padding: 20 },\r\n  refreshButton: { backgroundColor: '#7c3aed', padding: 10, borderRadius: 8, alignItems: 'center', marginBottom: 15 },\r\n  refreshButtonText: { color: 'white', fontWeight: 'bold' },\r\n  emptyState: { backgroundColor: 'white', padding: 40, borderRadius: 10, alignItems: 'center' },\r\n  emptyText: { fontSize: 16, color: '#6b7280', marginBottom: 5 },\r\n  emptySubtext: { fontSize: 12, color: '#9ca3af', textAlign: 'center' },\r\n  taskCard: { backgroundColor: 'white', borderRadius: 10, marginBottom: 15, elevation: 3, overflow: 'hidden' },\r\n  taskImage: { width: '100%', height: 200 },\r\n  taskInfo: { padding: 15 },\r\n  taskTitle: { fontSize: 18, fontWeight: 'bold', marginBottom: 5 },\r\n  taskDescription: { fontSize: 14, color: '#6b7280', marginBottom: 10 },\r\n  taskButton: { backgroundColor: '#7c3aed', padding: 12, borderRadius: 8, alignItems: 'center' },\r\n  completedButton: { backgroundColor: '#10b981' },\r\n  taskButtonText: { color: 'white', fontWeight: 'bold' },\r\n  modalOverlay: { flex: 1, backgroundColor: 'rgba(0,0,0,0.5)', justifyContent: 'center', alignItems: 'center' },\r\n  modalContent: { backgroundColor: 'white', borderRadius: 10, padding: 20, width: '90%', maxWidth: 500 },\r\n  modalTitle: { fontSize: 24, fontWeight: 'bold', marginBottom: 15 },\r\n  modalImage: { width: '100%', height: 300, marginBottom: 15 },\r\n  modalDescription: { fontSize: 16, color: '#6b7280', marginBottom: 20 },\r\n  modalButton: { backgroundColor: '#7c3aed', padding: 15, borderRadius: 8, alignItems: 'center' },\r\n  closeButton: { marginTop: 15, padding: 10, alignItems: 'center' },\r\n  closeButtonText: { color: '#7c3aed', fontWeight: 'bold' },\r\n  retryButton: {\r\n    backgroundColor: '#7c3aed',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 12,\r\n    borderRadius: 8,\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n  },\r\n  retryButtonText: { color: 'white', fontWeight: 'bold', fontSize: 16 },\r\n  skipButton: {\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 12,\r\n    borderRadius: 8,\r\n    borderColor: '#7c3aed',\r\n    borderWidth: 1,\r\n  },\r\n  skipButtonText: { color: '#7c3aed', fontWeight: 'bold', fontSize: 16 },\r\n});\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}