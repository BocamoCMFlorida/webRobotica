{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { login as loginAuth } from \"./auth\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_URL = 'http://localhost:8000';\nvar LoginScreen = function LoginScreen(_ref) {\n  var setToken = _ref.setToken,\n    setRole = _ref.setRole,\n    setIsAuthenticated = _ref.setIsAuthenticated,\n    navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!username || !password) {\n        Alert.alert('Error', 'Por favor ingresa usuario y contrase침a');\n        return;\n      }\n      setLoading(true);\n      try {\n        var result = yield loginAuth(username, password);\n        if (!result || !result.role) {\n          Alert.alert('Error', 'Usuario o contrase침a incorrectos');\n          return;\n        }\n        setRole(result.role);\n        setUsername(result.username);\n        setIsAuthenticated(true);\n        if (result.role === 'admin') {\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'AdminDashboard'\n            }]\n          });\n        } else {\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'StudentDashboard'\n            }]\n          });\n        }\n        return;\n      } catch (error) {\n        Alert.alert('Error', 'No se pudo conectar con el servidor');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.loginContainer,\n    children: _jsxs(View, {\n      style: styles.loginCard,\n      children: [_jsx(Text, {\n        style: styles.loginTitle,\n        children: \"\\uD83E\\uDD16 Cantera de Empresas\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Usuario\",\n        value: username,\n        onChangeText: setUsername,\n        autoCapitalize: \"none\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: handleLogin,\n        disabled: loading,\n        children: loading ? _jsx(ActivityIndicator, {\n          color: \"white\"\n        }) : _jsx(Text, {\n          style: styles.loginButtonText,\n          children: \"Iniciar Sesi\\xF3n\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  loginContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f3f4f6'\n  },\n  loginCard: {\n    backgroundColor: 'white',\n    padding: 30,\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n    width: '90%',\n    maxWidth: 400\n  },\n  loginTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 30,\n    color: '#7c3aed'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#e5e7eb',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 15,\n    fontSize: 16\n  },\n  loginButton: {\n    backgroundColor: '#7c3aed',\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 20\n  },\n  loginButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","ActivityIndicator","Alert","StyleSheet","AsyncStorage","login","loginAuth","jsx","_jsx","jsxs","_jsxs","API_URL","LoginScreen","_ref","setToken","setRole","setIsAuthenticated","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","handleLogin","_ref2","_asyncToGenerator","alert","result","role","reset","index","routes","name","error","apply","arguments","style","styles","loginContainer","children","loginCard","loginTitle","input","placeholder","value","onChangeText","autoCapitalize","secureTextEntry","loginButton","onPress","disabled","color","loginButtonText","create","flex","justifyContent","alignItems","backgroundColor","padding","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","maxWidth","fontSize","fontWeight","textAlign","marginBottom","borderWidth","borderColor","marginTop"],"sources":["C:/Users/raulv/Desktop/proyectoCantera/webRobotica/frontend-web/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View, Text, TextInput, TouchableOpacity, ActivityIndicator, Alert, StyleSheet\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { login as loginAuth } from './auth';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst LoginScreen = ({ setToken, setRole, setIsAuthenticated, navigation }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleLogin = async () => {\r\n    if (!username || !password) {\r\n      Alert.alert('Error', 'Por favor ingresa usuario y contrase침a');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const result = await loginAuth(username, password);\r\n\r\n      if (!result || !result.role) {\r\n        Alert.alert('Error', 'Usuario o contrase침a incorrectos');\r\n        return;\r\n      }\r\n\r\n      setRole(result.role);\r\n      setUsername(result.username);\r\n      setIsAuthenticated(true);\r\n      // Navegaci칩n directa seg칰n rol\r\n      if (result.role === 'admin') {\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'AdminDashboard' }],\r\n        });\r\n      } else {\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'StudentDashboard' }],\r\n        });\r\n      }\r\n      return;\r\n\r\n    } catch (error) {\r\n      Alert.alert('Error', 'No se pudo conectar con el servidor');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.loginContainer}>\r\n      <View style={styles.loginCard}>\r\n        <Text style={styles.loginTitle}>游뱄 Cantera de Empresas</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Usuario\"\r\n          value={username}\r\n          onChangeText={setUsername}\r\n          autoCapitalize=\"none\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Contrase침a\"\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          secureTextEntry\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.loginButton}\r\n          onPress={handleLogin}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <ActivityIndicator color=\"white\" />\r\n          ) : (\r\n            <Text style={styles.loginButtonText}>Iniciar Sesi칩n</Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loginContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f3f4f6',\r\n  },\r\n  loginCard: {\r\n    backgroundColor: 'white',\r\n    padding: 30,\r\n    borderRadius: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n    width: '90%',\r\n    maxWidth: 400,\r\n  },\r\n  loginTitle: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginBottom: 30,\r\n    color: '#7c3aed',\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#e5e7eb',\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    marginBottom: 15,\r\n    fontSize: 16,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#7c3aed',\r\n    padding: 15,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n  },\r\n  loginButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}