{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { logout as logoutAPI } from \"./api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_URL = 'http://localhost:8000';\nvar StudentDashboard = function StudentDashboard(_ref) {\n  var token = _ref.token,\n    username = _ref.username,\n    navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState({\n      completed: 0,\n      pending: 0,\n      progress: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stats = _useState4[0],\n    setStats = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedTask = _useState8[0],\n    setSelectedTask = _useState8[1];\n  var _useState9 = useState(''),\n    _useState0 = _slicedToArray(_useState9, 2),\n    debugInfo = _useState0[0],\n    setDebugInfo = _useState0[1];\n  useEffect(function () {\n    var timeoutId = setTimeout(function () {\n      if (loading) {\n        setLoading(false);\n        Alert.alert('Timeout', 'La carga est치 tardando demasiado. Verifica la conexi칩n.');\n      }\n    }, 15000);\n    fetchTasks();\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  }, [token]);\n  var fetchTasks = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setDebugInfo('Obteniendo tareas...');\n        var response = yield fetch(`${API_URL}/tasks`, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) throw new Error(`Status: ${response.status}`);\n        var data = yield response.json();\n        var completed = data.filter(function (t) {\n          return t.completed;\n        }).length;\n        var total = data.length;\n        setTasks(data);\n        setStats({\n          completed: completed,\n          pending: total - completed,\n          progress: total > 0 ? Math.round(completed / total * 100) : 0\n        });\n        setDebugInfo('Tareas cargadas correctamente.');\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al obtener tareas:', error);\n        setDebugInfo('No se pudieron cargar las tareas.');\n        Alert.alert('Error', 'No se pudo conectar al servidor o cargar las tareas.');\n        setTasks([]);\n        setStats({\n          completed: 0,\n          pending: 0,\n          progress: 0\n        });\n        setLoading(false);\n      }\n    });\n    return function fetchTasks() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var toggleTaskCompletion = function () {\n    var _ref3 = _asyncToGenerator(function* (taskId, currentStatus) {\n      var endpoint = currentStatus ? 'uncomplete' : 'complete';\n      try {\n        var response = yield fetch(`${API_URL}/tasks/${taskId}/${endpoint}`, {\n          method: 'PUT',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          fetchTasks();\n        } else {\n          throw new Error(`Error: ${response.status}`);\n        }\n      } catch (error) {\n        console.error('Error updating task:', error);\n        Alert.alert('Error', 'No se pudo actualizar la tarea');\n      }\n    });\n    return function toggleTaskCompletion(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        yield logoutAPI();\n        navigation.replace('Login');\n      } catch (err) {\n        Alert.alert('Error al cerrar sesi칩n', err.message);\n      }\n    });\n    return function handleLogout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.centerContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#7c3aed\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Cargando tareas...\"\n      }), _jsx(Text, {\n        style: styles.debugText,\n        children: debugInfo\n      }), _jsx(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: function onPress() {\n          setLoading(true);\n          fetchTasks();\n        },\n        children: _jsx(Text, {\n          style: styles.retryButtonText,\n          children: \"Reintentar Conexi\\xF3n\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.skipButton,\n        onPress: function onPress() {\n          setLoading(false);\n          setTasks([]);\n        },\n        children: _jsx(Text, {\n          style: styles.skipButtonText,\n          children: \"Continuar Sin Datos\"\n        })\n      })]\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerTitle,\n        children: \"\\uD83E\\uDD16 Cantera de Empresas\"\n      }), _jsxs(Text, {\n        style: styles.welcomeText,\n        children: [\"Bienvenido, \", username || 'Usuario']\n      }), debugInfo && _jsx(Text, {\n        style: styles.debugInfo,\n        children: debugInfo\n      }), _jsx(TouchableOpacity, {\n        style: styles.logoutButton,\n        onPress: handleLogout,\n        children: _jsx(Text, {\n          style: styles.logoutText,\n          children: \"Cerrar Sesi\\xF3n\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.statsContainer,\n      children: [_jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Completadas\"\n        }), _jsx(Text, {\n          style: styles.statValue,\n          children: stats.completed\n        })]\n      }), _jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Pendientes\"\n        }), _jsx(Text, {\n          style: [styles.statValue, {\n            color: '#f97316'\n          }],\n          children: stats.pending\n        })]\n      }), _jsxs(View, {\n        style: styles.statCard,\n        children: [_jsx(Text, {\n          style: styles.statLabel,\n          children: \"Progreso Total\"\n        }), _jsxs(Text, {\n          style: [styles.statValue, {\n            color: '#7c3aed'\n          }],\n          children: [stats.progress, \"%\"]\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.tasksSection,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: function onPress() {\n          setLoading(true);\n          fetchTasks();\n        },\n        children: _jsx(Text, {\n          style: styles.refreshButtonText,\n          children: \"\\uD83D\\uDD04 Actualizar\"\n        })\n      }), tasks.length === 0 ? _jsxs(View, {\n        style: styles.emptyState,\n        children: [_jsx(Text, {\n          style: styles.emptyText,\n          children: \"No hay tareas disponibles\"\n        }), _jsx(Text, {\n          style: styles.emptySubtext,\n          children: debugInfo || 'Verifica tu conexi칩n al servidor'\n        })]\n      }) : tasks.map(function (item, index) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.taskCard,\n          onPress: function onPress() {\n            return setSelectedTask(item);\n          },\n          children: [item.image_path && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${item.image_path}`\n            },\n            style: styles.taskImage\n          }), _jsxs(View, {\n            style: styles.taskInfo,\n            children: [_jsx(Text, {\n              style: styles.taskTitle,\n              children: item.title\n            }), _jsx(Text, {\n              style: styles.taskDescription,\n              children: item.description\n            }), _jsx(TouchableOpacity, {\n              style: [styles.taskButton, item.completed && styles.completedButton],\n              onPress: function onPress() {\n                return toggleTaskCompletion(item.id, item.completed);\n              },\n              children: _jsx(Text, {\n                style: styles.taskButtonText,\n                children: item.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'\n              })\n            })]\n          })]\n        }, item.id || index);\n      })]\n    }), _jsx(Modal, {\n      visible: selectedTask !== null,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setSelectedTask(null);\n      },\n      children: selectedTask && _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: selectedTask.title\n          }), selectedTask.image_path && _jsx(Image, {\n            source: {\n              uri: `${API_URL}${selectedTask.image_path}`\n            },\n            style: styles.modalImage\n          }), _jsx(Text, {\n            style: styles.modalDescription,\n            children: selectedTask.description\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, selectedTask.completed && styles.completedButton],\n            onPress: function onPress() {\n              toggleTaskCompletion(selectedTask.id, selectedTask.completed);\n              setSelectedTask(null);\n            },\n            children: _jsx(Text, {\n              style: styles.taskButtonText,\n              children: selectedTask.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.closeButton,\n            onPress: function onPress() {\n              return setSelectedTask(null);\n            },\n            children: _jsx(Text, {\n              style: styles.closeButtonText,\n              children: \"Cerrar\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  logoutButton: {\n    backgroundColor: '#ef4444',\n    padding: 10,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  logoutText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default StudentDashboard;","map":{"version":3,"names":["React","useEffect","useState","View","Text","ScrollView","Alert","Modal","TouchableOpacity","Image","ActivityIndicator","StyleSheet","Platform","AsyncStorage","logout","logoutAPI","jsx","_jsx","jsxs","_jsxs","API_URL","StudentDashboard","_ref","token","username","navigation","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","completed","pending","progress","_useState4","stats","setStats","_useState5","_useState6","loading","setLoading","_useState7","_useState8","selectedTask","setSelectedTask","_useState9","_useState0","debugInfo","setDebugInfo","timeoutId","setTimeout","alert","fetchTasks","clearTimeout","_ref2","_asyncToGenerator","response","fetch","headers","ok","Error","status","data","json","filter","t","length","total","Math","round","error","console","apply","arguments","toggleTaskCompletion","_ref3","taskId","currentStatus","endpoint","method","_x","_x2","handleLogout","_ref4","replace","err","message","style","styles","centerContainer","children","size","color","loadingText","debugText","retryButton","onPress","retryButtonText","skipButton","skipButtonText","container","header","headerTitle","welcomeText","logoutButton","logoutText","statsContainer","statCard","statLabel","statValue","tasksSection","refreshButton","refreshButtonText","emptyState","emptyText","emptySubtext","map","item","index","taskCard","image_path","source","uri","taskImage","taskInfo","taskTitle","title","taskDescription","description","taskButton","completedButton","id","taskButtonText","visible","animationType","transparent","onRequestClose","modalOverlay","modalContent","modalTitle","modalImage","modalDescription","modalButton","closeButton","closeButtonText","create","backgroundColor","padding","borderRadius","alignItems","marginTop","fontWeight"],"sources":["C:/Users/raulv/Desktop/proyectoCantera/webRobotica/frontend-web/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  Alert,\r\n  Modal,\r\n  TouchableOpacity,\r\n  Image,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  Platform\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { logout as logoutAPI } from './api'; // Aseg칰rate de tener esto definido\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst StudentDashboard = ({ token, username, navigation }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [stats, setStats] = useState({ completed: 0, pending: 0, progress: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      if (loading) {\r\n        setLoading(false);\r\n        Alert.alert('Timeout', 'La carga est치 tardando demasiado. Verifica la conexi칩n.');\r\n      }\r\n    }, 15000);\r\n\r\n    fetchTasks();\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [token]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      setDebugInfo('Obteniendo tareas...');\r\n      const response = await fetch(`${API_URL}/tasks`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`Status: ${response.status}`);\r\n\r\n      const data = await response.json();\r\n      const completed = data.filter(t => t.completed).length;\r\n      const total = data.length;\r\n\r\n      setTasks(data);\r\n      setStats({\r\n        completed,\r\n        pending: total - completed,\r\n        progress: total > 0 ? Math.round((completed / total) * 100) : 0\r\n      });\r\n\r\n      setDebugInfo('Tareas cargadas correctamente.');\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error al obtener tareas:', error);\r\n      setDebugInfo('No se pudieron cargar las tareas.');\r\n      Alert.alert('Error', 'No se pudo conectar al servidor o cargar las tareas.');\r\n      setTasks([]);\r\n      setStats({ completed: 0, pending: 0, progress: 0 });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\r\n    const endpoint = currentStatus ? 'uncomplete' : 'complete';\r\n    try {\r\n      const response = await fetch(`${API_URL}/tasks/${taskId}/${endpoint}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      if (response.ok) {\r\n        fetchTasks(); // Refresh data\r\n      } else {\r\n        throw new Error(`Error: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n      Alert.alert('Error', 'No se pudo actualizar la tarea');\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logoutAPI();\r\n      navigation.replace('Login'); // Reemplaza pantalla actual\r\n    } catch (err) {\r\n      Alert.alert('Error al cerrar sesi칩n', err.message);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.centerContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#7c3aed\" />\r\n        <Text style={styles.loadingText}>Cargando tareas...</Text>\r\n        <Text style={styles.debugText}>{debugInfo}</Text>\r\n        <TouchableOpacity style={styles.retryButton} onPress={() => { setLoading(true); fetchTasks(); }}>\r\n          <Text style={styles.retryButtonText}>Reintentar Conexi칩n</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.skipButton} onPress={() => { setLoading(false); setTasks([]); }}>\r\n          <Text style={styles.skipButtonText}>Continuar Sin Datos</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>游뱄 Cantera de Empresas</Text>\r\n        <Text style={styles.welcomeText}>Bienvenido, {username || 'Usuario'}</Text>\r\n        {debugInfo && <Text style={styles.debugInfo}>{debugInfo}</Text>}\r\n        <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\r\n          <Text style={styles.logoutText}>Cerrar Sesi칩n</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.statsContainer}>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Completadas</Text>\r\n          <Text style={styles.statValue}>{stats.completed}</Text>\r\n        </View>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Pendientes</Text>\r\n          <Text style={[styles.statValue, { color: '#f97316' }]}>{stats.pending}</Text>\r\n        </View>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Progreso Total</Text>\r\n          <Text style={[styles.statValue, { color: '#7c3aed' }]}>{stats.progress}%</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.tasksSection}>\r\n        <TouchableOpacity style={styles.refreshButton} onPress={() => { setLoading(true); fetchTasks(); }}>\r\n          <Text style={styles.refreshButtonText}>游댃 Actualizar</Text>\r\n        </TouchableOpacity>\r\n\r\n        {tasks.length === 0 ? (\r\n          <View style={styles.emptyState}>\r\n            <Text style={styles.emptyText}>No hay tareas disponibles</Text>\r\n            <Text style={styles.emptySubtext}>{debugInfo || 'Verifica tu conexi칩n al servidor'}</Text>\r\n          </View>\r\n        ) : (\r\n          tasks.map((item, index) => (\r\n            <TouchableOpacity key={item.id || index} style={styles.taskCard} onPress={() => setSelectedTask(item)}>\r\n              {item.image_path && (\r\n                <Image source={{ uri: `${API_URL}${item.image_path}` }} style={styles.taskImage} />\r\n              )}\r\n              <View style={styles.taskInfo}>\r\n                <Text style={styles.taskTitle}>{item.title}</Text>\r\n                <Text style={styles.taskDescription}>{item.description}</Text>\r\n                <TouchableOpacity\r\n                  style={[styles.taskButton, item.completed && styles.completedButton]}\r\n                  onPress={() => toggleTaskCompletion(item.id, item.completed)}\r\n                >\r\n                  <Text style={styles.taskButtonText}>\r\n                    {item.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </TouchableOpacity>\r\n          ))\r\n        )}\r\n      </View>\r\n\r\n      <Modal visible={selectedTask !== null} animationType=\"slide\" transparent={true} onRequestClose={() => setSelectedTask(null)}>\r\n        {selectedTask && (\r\n          <View style={styles.modalOverlay}>\r\n            <View style={styles.modalContent}>\r\n              <Text style={styles.modalTitle}>{selectedTask.title}</Text>\r\n              {selectedTask.image_path && (\r\n                <Image source={{ uri: `${API_URL}${selectedTask.image_path}` }} style={styles.modalImage} />\r\n              )}\r\n              <Text style={styles.modalDescription}>{selectedTask.description}</Text>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, selectedTask.completed && styles.completedButton]}\r\n                onPress={() => {\r\n                  toggleTaskCompletion(selectedTask.id, selectedTask.completed);\r\n                  setSelectedTask(null);\r\n                }}\r\n              >\r\n                <Text style={styles.taskButtonText}>\r\n                  {selectedTask.completed ? 'Marcar como Pendiente' : 'Marcar como Completada'}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={styles.closeButton} onPress={() => setSelectedTask(null)}>\r\n                <Text style={styles.closeButtonText}>Cerrar</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        )}\r\n      </Modal>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  // tus estilos actuales...\r\n\r\n  logoutButton: {\r\n    backgroundColor: '#ef4444',\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    marginTop: 10\r\n  },\r\n  logoutText: {\r\n    color: 'white',\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}