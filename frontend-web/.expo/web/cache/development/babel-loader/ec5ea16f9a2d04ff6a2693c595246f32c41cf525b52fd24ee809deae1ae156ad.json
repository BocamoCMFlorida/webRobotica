{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport function login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\nfunction _login() {\n  _login = _asyncToGenerator(function* (username, password) {\n    var formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    var response = yield fetch('http://localhost:8000/login', {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      var err = yield response.json();\n      throw new Error(err.detail || 'Login failed');\n    }\n    var data = yield response.json();\n    yield AsyncStorage.setItem('access_token', data.access_token);\n    yield AsyncStorage.setItem('user_role', data.role);\n    return data;\n  });\n  return _login.apply(this, arguments);\n}\nexport function register(_x3, _x4, _x5) {\n  return _register.apply(this, arguments);\n}\nfunction _register() {\n  _register = _asyncToGenerator(function* (username, password, email) {\n    var formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    formData.append('email', email);\n    var response = yield fetch('http://localhost:8000/register', {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      var err = yield response.json();\n      throw new Error(err.detail || 'Registration failed');\n    }\n    var data = yield response.json();\n    return data;\n  });\n  return _register.apply(this, arguments);\n}\nexport function logout() {\n  return _logout.apply(this, arguments);\n}\nfunction _logout() {\n  _logout = _asyncToGenerator(function* () {\n    try {\n      var token = yield AsyncStorage.getItem('access_token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      var response = yield fetch('http://localhost:8000/logout', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        var err = yield response.json();\n        throw new Error(err.detail || 'Logout failed');\n      }\n      yield AsyncStorage.multiRemove(['access_token', 'user_role', 'user_info']);\n    } catch (error) {\n      console.error('Error al cerrar sesión:', error);\n      throw error;\n    }\n  });\n  return _logout.apply(this, arguments);\n}","map":{"version":3,"names":["AsyncStorage","login","_x","_x2","_login","apply","arguments","_asyncToGenerator","username","password","formData","FormData","append","response","fetch","method","body","ok","err","json","Error","detail","data","setItem","access_token","role","register","_x3","_x4","_x5","_register","email","logout","_logout","token","getItem","headers","Authorization","multiRemove","error","console"],"sources":["C:/Users/raulv/Desktop/proyectoCantera/webRobotica/frontend-web/auth.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// Función para hacer login y guardar token y role en AsyncStorage\r\nexport async function login(username, password) {\r\n  const formData = new FormData();\r\n  formData.append('username', username);\r\n  formData.append('password', password);\r\n\r\n  const response = await fetch('http://localhost:8000/login', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const err = await response.json();\r\n    throw new Error(err.detail || 'Login failed');\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  // Guardar token y rol en AsyncStorage\r\n  await AsyncStorage.setItem('access_token', data.access_token);\r\n  await AsyncStorage.setItem('user_role', data.role); // Asumo que la API devuelve el role\r\n\r\n  return data;\r\n}\r\n\r\n// Función para registrar usuario\r\nexport async function register(username, password, email) {\r\n  const formData = new FormData();\r\n  formData.append('username', username);\r\n  formData.append('password', password);\r\n  formData.append('email', email);\r\n\r\n  const response = await fetch('http://localhost:8000/register', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const err = await response.json();\r\n    throw new Error(err.detail || 'Registration failed');\r\n  }\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\n// Función para cerrar sesión: llama al endpoint logout y limpia almacenamiento local\r\nexport async function logout() {\r\n  try {\r\n    const token = await AsyncStorage.getItem('access_token');\r\n    if (!token) {\r\n      throw new Error('No token found');\r\n    }\r\n\r\n    const response = await fetch('http://localhost:8000/logout', {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const err = await response.json();\r\n      throw new Error(err.detail || 'Logout failed');\r\n    }\r\n\r\n    // Eliminar token y otros datos locales\r\n    await AsyncStorage.multiRemove(['access_token', 'user_role', 'user_info']);\r\n  } catch (error) {\r\n    console.error('Error al cerrar sesión:', error);\r\n    throw error;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}