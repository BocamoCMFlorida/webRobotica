{"ast":null,"code":"var _reactJsxRuntime = require(\"react/jsx-runtime\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar AdminDashboard = function AdminDashboard(_ref) {\n  var token = _ref.token,\n    username = _ref.username,\n    onLogout = _ref.onLogout;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState({\n      totalUsers: 0,\n      totalTasks: 0,\n      completedTasks: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stats = _useState4[0],\n    setStats = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    users = _useState6[0],\n    setUsers = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  useEffect(function () {\n    fetchAdminData();\n  }, []);\n  var fetchAdminData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      setError(null);\n      try {\n        var statsRes = yield fetch(`${API_URL}/admin/stats`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        var statsData = yield statsRes.json();\n        var usersRes = yield fetch(`${API_URL}/admin/users`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        var usersData = yield usersRes.json();\n        if (statsRes.ok && usersRes.ok) {\n          setStats(statsData);\n          setUsers(usersData);\n        } else {\n          setError('No se pudieron cargar los datos administrativos');\n        }\n      } catch (e) {\n        setError('Error de conexiÃ³n con el servidor');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchAdminData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _reactJsxRuntime.jsx(View, {\n      style: styles.centerContainer,\n      children: _reactJsxRuntime.jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#7c3aed\"\n      })\n    });\n  }\n  return _reactJsxRuntime.jsxs(ScrollView, {\n    style: styles.container,\n    children: [_reactJsxRuntime.jsxs(View, {\n      style: styles.header,\n      children: [_reactJsxRuntime.jsx(Text, {\n        style: styles.headerTitle,\n        children: \"\\uD83D\\uDC51 Admin Dashboard\"\n      }), _reactJsxRuntime.jsxs(Text, {\n        style: styles.welcomeText,\n        children: [\"Hola, \", username]\n      })]\n    }), error && _reactJsxRuntime.jsx(Text, {\n      style: {\n        color: 'red',\n        textAlign: 'center'\n      },\n      children: error\n    }), _reactJsxRuntime.jsxs(View, {\n      style: styles.statsContainer,\n      children: [_reactJsxRuntime.jsxs(View, {\n        style: styles.statCard,\n        children: [_reactJsxRuntime.jsx(Text, {\n          style: styles.statLabel,\n          children: \"Usuarios Registrados\"\n        }), _reactJsxRuntime.jsx(Text, {\n          style: styles.statValue,\n          children: stats.totalUsers\n        })]\n      }), _reactJsxRuntime.jsxs(View, {\n        style: styles.statCard,\n        children: [_reactJsxRuntime.jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Totales\"\n        }), _reactJsxRuntime.jsx(Text, {\n          style: styles.statValue,\n          children: stats.totalTasks\n        })]\n      }), _reactJsxRuntime.jsxs(View, {\n        style: styles.statCard,\n        children: [_reactJsxRuntime.jsx(Text, {\n          style: styles.statLabel,\n          children: \"Tareas Completadas\"\n        }), _reactJsxRuntime.jsx(Text, {\n          style: styles.statValue,\n          children: stats.completedTasks\n        })]\n      })]\n    }), _reactJsxRuntime.jsxs(View, {\n      style: {\n        marginVertical: 20\n      },\n      children: [_reactJsxRuntime.jsx(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 18,\n          marginBottom: 10\n        },\n        children: \"Usuarios\"\n      }), users.length === 0 ? _reactJsxRuntime.jsx(Text, {\n        children: \"No hay usuarios disponibles.\"\n      }) : users.map(function (user) {\n        return _reactJsxRuntime.jsxs(View, {\n          style: styles.userCard,\n          children: [_reactJsxRuntime.jsx(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: user.username\n          }), _reactJsxRuntime.jsx(Text, {\n            children: user.email\n          })]\n        }, user.id);\n      })]\n    }), _reactJsxRuntime.jsx(TouchableOpacity, {\n      style: styles.logoutButton,\n      onPress: onLogout,\n      children: _reactJsxRuntime.jsx(Text, {\n        style: styles.logoutButtonText,\n        children: \"Cerrar Sesi\\xF3n\"\n      })\n    })]\n  });\n};","map":{"version":3,"names":["AdminDashboard","_ref","token","username","onLogout","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","totalUsers","totalTasks","completedTasks","_useState4","stats","setStats","_useState5","_useState6","users","setUsers","_useState7","_useState8","error","setError","useEffect","fetchAdminData","_ref2","_asyncToGenerator","statsRes","fetch","API_URL","headers","statsData","json","usersRes","usersData","ok","e","apply","arguments","_reactJsxRuntime","jsx","View","style","styles","centerContainer","children","ActivityIndicator","size","color","jsxs","ScrollView","container","header","Text","headerTitle","welcomeText","textAlign","statsContainer","statCard","statLabel","statValue","marginVertical","fontWeight","fontSize","marginBottom","length","map","user","userCard","email","id","TouchableOpacity","logoutButton","onPress","logoutButtonText"],"sources":["C:/Users/raulv/Desktop/webRobotica/frontend-web/AdminDashboard.js"],"sourcesContent":["const AdminDashboard = ({ token, username, onLogout }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState({ totalUsers: 0, totalTasks: 0, completedTasks: 0 });\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchAdminData();\r\n  }, []);\r\n\r\n  const fetchAdminData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Fetch estadÃ­sticas\r\n      const statsRes = await fetch(`${API_URL}/admin/stats`, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      const statsData = await statsRes.json();\r\n\r\n      // Fetch lista de usuarios\r\n      const usersRes = await fetch(`${API_URL}/admin/users`, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      const usersData = await usersRes.json();\r\n\r\n      if (statsRes.ok && usersRes.ok) {\r\n        setStats(statsData);\r\n        setUsers(usersData);\r\n      } else {\r\n        setError('No se pudieron cargar los datos administrativos');\r\n      }\r\n    } catch (e) {\r\n      setError('Error de conexiÃ³n con el servidor');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.centerContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#7c3aed\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>ðŸ‘‘ Admin Dashboard</Text>\r\n        <Text style={styles.welcomeText}>Hola, {username}</Text>\r\n      </View>\r\n\r\n      {error && <Text style={{color: 'red', textAlign: 'center'}}>{error}</Text>}\r\n\r\n      <View style={styles.statsContainer}>\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Usuarios Registrados</Text>\r\n          <Text style={styles.statValue}>{stats.totalUsers}</Text>\r\n        </View>\r\n\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Totales</Text>\r\n          <Text style={styles.statValue}>{stats.totalTasks}</Text>\r\n        </View>\r\n\r\n        <View style={styles.statCard}>\r\n          <Text style={styles.statLabel}>Tareas Completadas</Text>\r\n          <Text style={styles.statValue}>{stats.completedTasks}</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={{ marginVertical: 20 }}>\r\n        <Text style={{ fontWeight: 'bold', fontSize: 18, marginBottom: 10 }}>Usuarios</Text>\r\n        {users.length === 0 ? (\r\n          <Text>No hay usuarios disponibles.</Text>\r\n        ) : (\r\n          users.map(user => (\r\n            <View key={user.id} style={styles.userCard}>\r\n              <Text style={{ fontWeight: 'bold' }}>{user.username}</Text>\r\n              <Text>{user.email}</Text>\r\n            </View>\r\n          ))\r\n        )}\r\n      </View>\r\n\r\n      <TouchableOpacity style={styles.logoutButton} onPress={onLogout}>\r\n        <Text style={styles.logoutButtonText}>Cerrar SesiÃ³n</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}